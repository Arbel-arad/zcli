// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zeropsVpnProtocol.proto

package zeropsVpnProtocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_NO_ERROR               ErrorCode = 0
	ErrorCode_INTERNAL_SERVER_ERROR  ErrorCode = 1
	ErrorCode_INSTANCE_NOT_FOUND     ErrorCode = 2
	ErrorCode_PROXY_IS_FULL          ErrorCode = 3
	ErrorCode_INVALID_SIGNATURE      ErrorCode = 4
	ErrorCode_EXPIRED_SIGNATURE      ErrorCode = 5
	ErrorCode_MAX_PARALLEL_VPN_LIMIT ErrorCode = 6
)

var ErrorCode_name = map[int32]string{
	0: "NO_ERROR",
	1: "INTERNAL_SERVER_ERROR",
	2: "INSTANCE_NOT_FOUND",
	3: "PROXY_IS_FULL",
	4: "INVALID_SIGNATURE",
	5: "EXPIRED_SIGNATURE",
	6: "MAX_PARALLEL_VPN_LIMIT",
}

var ErrorCode_value = map[string]int32{
	"NO_ERROR":               0,
	"INTERNAL_SERVER_ERROR":  1,
	"INSTANCE_NOT_FOUND":     2,
	"PROXY_IS_FULL":          3,
	"INVALID_SIGNATURE":      4,
	"EXPIRED_SIGNATURE":      5,
	"MAX_PARALLEL_VPN_LIMIT": 6,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e2851e98e674814, []int{0}
}

type Error struct {
	Code                 ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=zeropsVpnProtocol.ErrorCode" json:"code,omitempty" yaml:"code"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" yaml:"message"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" yaml:"-"`
	XXX_unrecognized     []byte    `json:"-" yaml:"-"`
	XXX_sizecache        int32     `json:"-" yaml:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e2851e98e674814, []int{0}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() ErrorCode {
	if m != nil {
		return m.Code
	}
	return ErrorCode_NO_ERROR
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type IP struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" yaml:"address"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-"`
}

func (m *IP) Reset()         { *m = IP{} }
func (m *IP) String() string { return proto.CompactTextString(m) }
func (*IP) ProtoMessage()    {}
func (*IP) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e2851e98e674814, []int{1}
}

func (m *IP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IP.Unmarshal(m, b)
}
func (m *IP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IP.Marshal(b, m, deterministic)
}
func (m *IP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IP.Merge(m, src)
}
func (m *IP) XXX_Size() int {
	return xxx_messageInfo_IP.Size(m)
}
func (m *IP) XXX_DiscardUnknown() {
	xxx_messageInfo_IP.DiscardUnknown(m)
}

var xxx_messageInfo_IP proto.InternalMessageInfo

func (m *IP) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

type IPRange struct {
	Ip                   []byte   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty" yaml:"ip"`
	Mask                 []byte   `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty" yaml:"mask"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-"`
}

func (m *IPRange) Reset()         { *m = IPRange{} }
func (m *IPRange) String() string { return proto.CompactTextString(m) }
func (*IPRange) ProtoMessage()    {}
func (*IPRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e2851e98e674814, []int{2}
}

func (m *IPRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPRange.Unmarshal(m, b)
}
func (m *IPRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPRange.Marshal(b, m, deterministic)
}
func (m *IPRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPRange.Merge(m, src)
}
func (m *IPRange) XXX_Size() int {
	return xxx_messageInfo_IPRange.Size(m)
}
func (m *IPRange) XXX_DiscardUnknown() {
	xxx_messageInfo_IPRange.DiscardUnknown(m)
}

var xxx_messageInfo_IPRange proto.InternalMessageInfo

func (m *IPRange) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *IPRange) GetMask() []byte {
	if m != nil {
		return m.Mask
	}
	return nil
}

type Timestamp struct {
	IsSet                bool     `protobuf:"varint,1,opt,name=isSet,proto3" json:"isSet,omitempty" yaml:"isSet"`
	Seconds              int64    `protobuf:"varint,2,opt,name=seconds,proto3" json:"seconds,omitempty" yaml:"seconds"`
	Nanos                int32    `protobuf:"varint,3,opt,name=nanos,proto3" json:"nanos,omitempty" yaml:"nanos"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e2851e98e674814, []int{3}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetIsSet() bool {
	if m != nil {
		return m.IsSet
	}
	return false
}

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type StartVpnRequest struct {
	InstanceId           string     `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty" yaml:"instanceId"`
	UserId               string     `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty" yaml:"userId"`
	ClientPublicKey      string     `protobuf:"bytes,3,opt,name=clientPublicKey,proto3" json:"clientPublicKey,omitempty" yaml:"clientPublicKey"`
	Signature            string     `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty" yaml:"signature"`
	Expiry               *Timestamp `protobuf:"bytes,5,opt,name=expiry,proto3" json:"expiry,omitempty" yaml:"expiry"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" yaml:"-"`
	XXX_unrecognized     []byte     `json:"-" yaml:"-"`
	XXX_sizecache        int32      `json:"-" yaml:"-"`
}

func (m *StartVpnRequest) Reset()         { *m = StartVpnRequest{} }
func (m *StartVpnRequest) String() string { return proto.CompactTextString(m) }
func (*StartVpnRequest) ProtoMessage()    {}
func (*StartVpnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e2851e98e674814, []int{4}
}

func (m *StartVpnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartVpnRequest.Unmarshal(m, b)
}
func (m *StartVpnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartVpnRequest.Marshal(b, m, deterministic)
}
func (m *StartVpnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartVpnRequest.Merge(m, src)
}
func (m *StartVpnRequest) XXX_Size() int {
	return xxx_messageInfo_StartVpnRequest.Size(m)
}
func (m *StartVpnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartVpnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartVpnRequest proto.InternalMessageInfo

func (m *StartVpnRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *StartVpnRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *StartVpnRequest) GetClientPublicKey() string {
	if m != nil {
		return m.ClientPublicKey
	}
	return ""
}

func (m *StartVpnRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *StartVpnRequest) GetExpiry() *Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

type StartVpnResponse struct {
	Error                *Error          `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty" yaml:"error"`
	Vpn                  *StartVpnOutDto `protobuf:"bytes,2,opt,name=vpn,proto3" json:"vpn,omitempty" yaml:"vpn"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" yaml:"-"`
	XXX_unrecognized     []byte          `json:"-" yaml:"-"`
	XXX_sizecache        int32           `json:"-" yaml:"-"`
}

func (m *StartVpnResponse) Reset()         { *m = StartVpnResponse{} }
func (m *StartVpnResponse) String() string { return proto.CompactTextString(m) }
func (*StartVpnResponse) ProtoMessage()    {}
func (*StartVpnResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e2851e98e674814, []int{5}
}

func (m *StartVpnResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartVpnResponse.Unmarshal(m, b)
}
func (m *StartVpnResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartVpnResponse.Marshal(b, m, deterministic)
}
func (m *StartVpnResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartVpnResponse.Merge(m, src)
}
func (m *StartVpnResponse) XXX_Size() int {
	return xxx_messageInfo_StartVpnResponse.Size(m)
}
func (m *StartVpnResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartVpnResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartVpnResponse proto.InternalMessageInfo

func (m *StartVpnResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *StartVpnResponse) GetVpn() *StartVpnOutDto {
	if m != nil {
		return m.Vpn
	}
	return nil
}

type StartVpnOutDto struct {
	Port                 int64    `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty" yaml:"port"`
	ServerPublicKey      string   `protobuf:"bytes,2,opt,name=serverPublicKey,proto3" json:"serverPublicKey,omitempty" yaml:"serverPublicKey"`
	AssignedClientIp     *IP      `protobuf:"bytes,3,opt,name=assignedClientIp,proto3" json:"assignedClientIp,omitempty" yaml:"assignedClientIp"`
	ServerIp             *IP      `protobuf:"bytes,4,opt,name=serverIp,proto3" json:"serverIp,omitempty" yaml:"serverIp"`
	VpnIpRange           *IPRange `protobuf:"bytes,5,opt,name=vpnIpRange,proto3" json:"vpnIpRange,omitempty" yaml:"vpnIpRange"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-"`
}

func (m *StartVpnOutDto) Reset()         { *m = StartVpnOutDto{} }
func (m *StartVpnOutDto) String() string { return proto.CompactTextString(m) }
func (*StartVpnOutDto) ProtoMessage()    {}
func (*StartVpnOutDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e2851e98e674814, []int{6}
}

func (m *StartVpnOutDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartVpnOutDto.Unmarshal(m, b)
}
func (m *StartVpnOutDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartVpnOutDto.Marshal(b, m, deterministic)
}
func (m *StartVpnOutDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartVpnOutDto.Merge(m, src)
}
func (m *StartVpnOutDto) XXX_Size() int {
	return xxx_messageInfo_StartVpnOutDto.Size(m)
}
func (m *StartVpnOutDto) XXX_DiscardUnknown() {
	xxx_messageInfo_StartVpnOutDto.DiscardUnknown(m)
}

var xxx_messageInfo_StartVpnOutDto proto.InternalMessageInfo

func (m *StartVpnOutDto) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *StartVpnOutDto) GetServerPublicKey() string {
	if m != nil {
		return m.ServerPublicKey
	}
	return ""
}

func (m *StartVpnOutDto) GetAssignedClientIp() *IP {
	if m != nil {
		return m.AssignedClientIp
	}
	return nil
}

func (m *StartVpnOutDto) GetServerIp() *IP {
	if m != nil {
		return m.ServerIp
	}
	return nil
}

func (m *StartVpnOutDto) GetVpnIpRange() *IPRange {
	if m != nil {
		return m.VpnIpRange
	}
	return nil
}

func init() {
	proto.RegisterEnum("zeropsVpnProtocol.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterType((*Error)(nil), "zeropsVpnProtocol.error")
	proto.RegisterType((*IP)(nil), "zeropsVpnProtocol.IP")
	proto.RegisterType((*IPRange)(nil), "zeropsVpnProtocol.IPRange")
	proto.RegisterType((*Timestamp)(nil), "zeropsVpnProtocol.Timestamp")
	proto.RegisterType((*StartVpnRequest)(nil), "zeropsVpnProtocol.startVpnRequest")
	proto.RegisterType((*StartVpnResponse)(nil), "zeropsVpnProtocol.startVpnResponse")
	proto.RegisterType((*StartVpnOutDto)(nil), "zeropsVpnProtocol.startVpnOutDto")
}

func init() { proto.RegisterFile("zeropsVpnProtocol.proto", fileDescriptor_4e2851e98e674814) }

var fileDescriptor_4e2851e98e674814 = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x4f, 0x4f, 0xdb, 0x4e,
	0x10, 0xfd, 0x39, 0xff, 0x48, 0x26, 0xfc, 0xc0, 0x59, 0x15, 0xea, 0x22, 0x84, 0x52, 0xf7, 0x12,
	0x55, 0x2a, 0x6a, 0x43, 0x4f, 0xbd, 0x59, 0x60, 0xaa, 0x55, 0x8d, 0xe3, 0x8e, 0x43, 0x44, 0x7b,
	0xb1, 0x4c, 0xbc, 0xa2, 0x56, 0xc9, 0x7a, 0xbb, 0xeb, 0xd0, 0xd2, 0x53, 0xbf, 0x4e, 0x3f, 0x49,
	0xbf, 0x56, 0xe5, 0xb5, 0x03, 0x94, 0x04, 0x6e, 0x3b, 0x6f, 0xde, 0xcc, 0x78, 0xde, 0xdb, 0x35,
	0x3c, 0xfd, 0xc9, 0x64, 0x26, 0xd4, 0x44, 0xf0, 0x40, 0x66, 0x79, 0x36, 0xcd, 0x2e, 0xf7, 0x45,
	0x71, 0x20, 0xbd, 0xa5, 0x84, 0x1d, 0x42, 0x93, 0x49, 0x99, 0x49, 0xf2, 0x1a, 0x1a, 0xd3, 0x2c,
	0x61, 0x96, 0xd1, 0x37, 0x06, 0x1b, 0xc3, 0xdd, 0xfd, 0xe5, 0x1e, 0x9a, 0x77, 0x98, 0x25, 0x0c,
	0x35, 0x93, 0x58, 0xb0, 0x36, 0x63, 0x4a, 0xc5, 0x17, 0xcc, 0xaa, 0xf5, 0x8d, 0x41, 0x07, 0x17,
	0xa1, 0xbd, 0x07, 0x35, 0x1a, 0x14, 0xf9, 0x38, 0x49, 0x24, 0x53, 0x4a, 0x37, 0x5d, 0xc7, 0x45,
	0x68, 0xbf, 0x82, 0x35, 0x1a, 0x60, 0xcc, 0x2f, 0x18, 0xd9, 0x80, 0x5a, 0x2a, 0xaa, 0x7c, 0x2d,
	0x15, 0x84, 0x40, 0x63, 0x16, 0xab, 0xaf, 0xba, 0xe3, 0x3a, 0xea, 0xb3, 0xfd, 0x11, 0x3a, 0xe3,
	0x74, 0xc6, 0x54, 0x1e, 0xcf, 0x04, 0x79, 0x02, 0xcd, 0x54, 0x85, 0x2c, 0xd7, 0x35, 0x6d, 0x2c,
	0x83, 0x62, 0x96, 0x62, 0xd3, 0x8c, 0x27, 0x4a, 0x57, 0xd6, 0x71, 0x11, 0x16, 0x7c, 0x1e, 0xf3,
	0x4c, 0x59, 0xf5, 0xbe, 0x31, 0x68, 0x62, 0x19, 0xd8, 0x7f, 0x0c, 0xd8, 0x54, 0x79, 0x2c, 0xf3,
	0x89, 0xe0, 0xc8, 0xbe, 0xcd, 0x99, 0xca, 0xc9, 0x1e, 0x40, 0xca, 0x55, 0x1e, 0xf3, 0x29, 0xa3,
	0x89, 0x6e, 0xdf, 0xc1, 0x3b, 0x08, 0xd9, 0x86, 0xd6, 0x5c, 0x31, 0x49, 0x93, 0x6a, 0xdd, 0x2a,
	0x22, 0x03, 0xd8, 0x9c, 0x5e, 0xa6, 0x8c, 0xe7, 0xc1, 0xfc, 0xfc, 0x32, 0x9d, 0x7e, 0x60, 0xd7,
	0x7a, 0x56, 0x07, 0xef, 0xc3, 0x64, 0x17, 0x3a, 0x2a, 0xbd, 0xe0, 0x71, 0x3e, 0x97, 0xcc, 0x6a,
	0x68, 0xce, 0x2d, 0x40, 0xde, 0x42, 0x8b, 0xfd, 0x10, 0xa9, 0xbc, 0xb6, 0x9a, 0x7d, 0x63, 0xd0,
	0x5d, 0xe9, 0xc1, 0x8d, 0x0e, 0x58, 0x71, 0xed, 0xef, 0x60, 0xde, 0x2e, 0xa2, 0x44, 0xc6, 0x15,
	0x23, 0xfb, 0x95, 0xa9, 0x7a, 0x89, 0xee, 0xd0, 0x7a, 0xc8, 0x4c, 0xac, 0xbc, 0x3f, 0x80, 0xfa,
	0x95, 0xe0, 0x7a, 0xad, 0xee, 0xf0, 0xf9, 0x0a, 0xf6, 0x62, 0xc2, 0x68, 0x9e, 0x1f, 0xe5, 0x19,
	0x16, 0x6c, 0xfb, 0x57, 0x0d, 0x36, 0xfe, 0xc5, 0x0b, 0xf3, 0x44, 0x26, 0x4b, 0x6b, 0xea, 0xa8,
	0xcf, 0x85, 0x3a, 0x8a, 0xc9, 0x2b, 0x26, 0x6f, 0xd5, 0x29, 0xe5, 0xbb, 0x0f, 0x13, 0x07, 0xcc,
	0x58, 0x15, 0x72, 0xb0, 0xe4, 0x50, 0x0b, 0x47, 0x85, 0x16, 0xb2, 0x3b, 0xdc, 0x5a, 0xf1, 0x49,
	0x34, 0xc0, 0x25, 0x3a, 0x79, 0x03, 0xed, 0xb2, 0x2b, 0x15, 0x5a, 0xdf, 0x07, 0x4b, 0x6f, 0x68,
	0xe4, 0x1d, 0xc0, 0x95, 0xe0, 0x54, 0xe8, 0xeb, 0x58, 0x29, 0xbf, 0xb3, 0xba, 0xa8, 0x60, 0xe0,
	0x1d, 0xf6, 0xcb, 0xdf, 0x06, 0x74, 0x6e, 0x5e, 0x05, 0x59, 0x87, 0xb6, 0x3f, 0x8a, 0x5c, 0xc4,
	0x11, 0x9a, 0xff, 0x91, 0x67, 0xb0, 0x45, 0xfd, 0xb1, 0x8b, 0xbe, 0xe3, 0x45, 0xa1, 0x8b, 0x13,
	0x17, 0xab, 0x94, 0x41, 0xb6, 0x81, 0x50, 0x3f, 0x1c, 0x3b, 0xfe, 0xa1, 0x1b, 0xf9, 0xa3, 0x71,
	0x74, 0x3c, 0x3a, 0xf5, 0x8f, 0xcc, 0x1a, 0xe9, 0xc1, 0xff, 0x01, 0x8e, 0xce, 0x3e, 0x45, 0x34,
	0x8c, 0x8e, 0x4f, 0x3d, 0xcf, 0xac, 0x93, 0x2d, 0xe8, 0x51, 0x7f, 0xe2, 0x78, 0xf4, 0x28, 0x0a,
	0xe9, 0x7b, 0xdf, 0x19, 0x9f, 0xa2, 0x6b, 0x36, 0x0a, 0xd8, 0x3d, 0x0b, 0x28, 0xba, 0x77, 0xe1,
	0x26, 0xd9, 0x81, 0xed, 0x13, 0xe7, 0x2c, 0x0a, 0x1c, 0x74, 0x3c, 0xcf, 0xf5, 0xa2, 0x49, 0xe0,
	0x47, 0x1e, 0x3d, 0xa1, 0x63, 0xb3, 0x35, 0xfc, 0x02, 0xbd, 0xcf, 0xf7, 0x97, 0x22, 0x21, 0xb4,
	0x17, 0x16, 0x12, 0xfb, 0x11, 0xdf, 0xab, 0x27, 0xb2, 0xf3, 0xe2, 0x51, 0x4e, 0x79, 0xfb, 0xce,
	0x5b, 0xfa, 0x67, 0x73, 0xf0, 0x37, 0x00, 0x00, 0xff, 0xff, 0x06, 0x49, 0xf2, 0x82, 0x87, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZeropsVpnProtocolClient is the client API for ZeropsVpnProtocol service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZeropsVpnProtocolClient interface {
	StartVpn(ctx context.Context, in *StartVpnRequest, opts ...grpc.CallOption) (*StartVpnResponse, error)
}

type zeropsVpnProtocolClient struct {
	cc *grpc.ClientConn
}

func NewZeropsVpnProtocolClient(cc *grpc.ClientConn) ZeropsVpnProtocolClient {
	return &zeropsVpnProtocolClient{cc}
}

func (c *zeropsVpnProtocolClient) StartVpn(ctx context.Context, in *StartVpnRequest, opts ...grpc.CallOption) (*StartVpnResponse, error) {
	out := new(StartVpnResponse)
	err := c.cc.Invoke(ctx, "/zeropsVpnProtocol.ZeropsVpnProtocol/startVpn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZeropsVpnProtocolServer is the server API for ZeropsVpnProtocol service.
type ZeropsVpnProtocolServer interface {
	StartVpn(context.Context, *StartVpnRequest) (*StartVpnResponse, error)
}

// UnimplementedZeropsVpnProtocolServer can be embedded to have forward compatible implementations.
type UnimplementedZeropsVpnProtocolServer struct {
}

func (*UnimplementedZeropsVpnProtocolServer) StartVpn(ctx context.Context, req *StartVpnRequest) (*StartVpnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartVpn not implemented")
}

func RegisterZeropsVpnProtocolServer(s *grpc.Server, srv ZeropsVpnProtocolServer) {
	s.RegisterService(&_ZeropsVpnProtocol_serviceDesc, srv)
}

func _ZeropsVpnProtocol_StartVpn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartVpnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsVpnProtocolServer).StartVpn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsVpnProtocol.ZeropsVpnProtocol/StartVpn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsVpnProtocolServer).StartVpn(ctx, req.(*StartVpnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZeropsVpnProtocol_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zeropsVpnProtocol.ZeropsVpnProtocol",
	HandlerType: (*ZeropsVpnProtocolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "startVpn",
			Handler:    _ZeropsVpnProtocol_StartVpn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zeropsVpnProtocol.proto",
}

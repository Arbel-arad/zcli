// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

package zeropsApiProtocol

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_NO_ERROR                                                     ErrorCode = 0
	ErrorCode_INTERNAL_SERVER_ERROR                                        ErrorCode = 1
	ErrorCode_INVALID_USER_INPUT                                           ErrorCode = 2
	ErrorCode_INVALID_USER_INPUT_WITH_TEXT                                 ErrorCode = 3
	ErrorCode_NOT_AUTHORIZED                                               ErrorCode = 4
	ErrorCode_INSUFFICIENT_PRIVILEGES                                      ErrorCode = 5
	ErrorCode_REFRESH_TOKEN_INVALID                                        ErrorCode = 6
	ErrorCode_ENDPOINT_NOT_FOUND                                           ErrorCode = 7
	ErrorCode_POTENTIALLY_FRAUD_BEHAVIOR_DETECTED                          ErrorCode = 8
	ErrorCode_RE_CAPTCHA_RESPONSE_INVALID                                  ErrorCode = 9
	ErrorCode_DOWNLOAD_TOKEN_INVALID_OR_EXPIRED                            ErrorCode = 10
	ErrorCode_INCORRECT_USER_CREDENTIALS                                   ErrorCode = 11
	ErrorCode_NO_RIGHTS_TO_SELECTED_ACTION                                 ErrorCode = 12
	ErrorCode_FILE_SIZE_LIMIT_EXCEEDED                                     ErrorCode = 13
	ErrorCode_ADDITIONAL_VERIFICATION_FAILED                               ErrorCode = 14
	ErrorCode_ACTIVE_USER_MUST_BE_CONNECTED_TO_AT_LEAST_ONE_CLIENT         ErrorCode = 15
	ErrorCode_INVALID_CREDENTIALS                                          ErrorCode = 16
	ErrorCode_PASSWORD_TOO_WEAK                                            ErrorCode = 17
	ErrorCode_NO_ACTIVE_CONNECTION_TO_ANY_CLIENT                           ErrorCode = 18
	ErrorCode_NO_ACTIVE_CONNECTION_TO_CURRENT_CLIENT                       ErrorCode = 19
	ErrorCode_TOKEN_EXPIRED                                                ErrorCode = 20
	ErrorCode_CLIENT_NOT_FOUND                                             ErrorCode = 21
	ErrorCode_NO_ACCESS_TO_ZEROPS                                          ErrorCode = 22
	ErrorCode_USER_NOT_FOUND                                               ErrorCode = 23
	ErrorCode_INVALID_DOCUMENT_ROOT                                        ErrorCode = 24
	ErrorCode_INVALID_ENTRYPOINT                                           ErrorCode = 25
	ErrorCode_DOWNLOAD_EXPIRED                                             ErrorCode = 26
	ErrorCode_USER_DATA_NOT_FOUND                                          ErrorCode = 27
	ErrorCode_USER_DATA_KEY_INVALID                                        ErrorCode = 28
	ErrorCode_USER_DATA_CONTENT_INVALID                                    ErrorCode = 29
	ErrorCode_USER_DATA_DELETE_FORBIDDEN                                   ErrorCode = 30
	ErrorCode_USER_DATA_DUPLICATE_KEY                                      ErrorCode = 31
	ErrorCode_USER_DATA_SYNC_RUNNING                                       ErrorCode = 32
	ErrorCode_USER_DATA_VERSION_MISMATCH                                   ErrorCode = 168
	ErrorCode_USER_CERTIFICATE_NOT_FOUND                                   ErrorCode = 33
	ErrorCode_USER_ACCOUNT_NOT_FOUND                                       ErrorCode = 34
	ErrorCode_TEMPLATE_NOT_FOUND                                           ErrorCode = 35
	ErrorCode_COUNTRY_CALLING_CODE_DOES_NOT_MATCH_PHONE_NUMBER             ErrorCode = 36
	ErrorCode_INVALID_PHONE_NUMBER                                         ErrorCode = 37
	ErrorCode_INVALID_USER_ROLE                                            ErrorCode = 38
	ErrorCode_INVALID_CLIENT_USER_GROUP_COMBINATION                        ErrorCode = 39
	ErrorCode_EMAIL_EXISTS                                                 ErrorCode = 40
	ErrorCode_USER_ALREADY_CONNECTED_TO_COMPANY                            ErrorCode = 41
	ErrorCode_COUNTRY_NOT_FOUND                                            ErrorCode = 42
	ErrorCode_RECORD_NOT_FOUND                                             ErrorCode = 43
	ErrorCode_MAXIMUM_NUMBER_OF_CLIENT_EXCEEDED                            ErrorCode = 44
	ErrorCode_USER_IS_NOT_IN_BEING_DELETED_STATUS                          ErrorCode = 45
	ErrorCode_UNABLE_TO_DELETE_YOUR_OWN_ACCOUNT                            ErrorCode = 46
	ErrorCode_CLIENT_USER_CONNECTION_NOT_FOUND                             ErrorCode = 47
	ErrorCode_CLIENT_USER_CONNECTION_HAS_BEEN_DELETED                      ErrorCode = 48
	ErrorCode_BAD_OR_EXPIRED_ACTIVATION_LINK                               ErrorCode = 49
	ErrorCode_UNABLE_TO_EDIT_DELETED_USER                                  ErrorCode = 50
	ErrorCode_CLIENT_USER_ALREADY_BEEN_DELETED                             ErrorCode = 51
	ErrorCode_LANGUAGE_NOT_FOUND                                           ErrorCode = 52
	ErrorCode_LANGUAGE_NOT_SUPPORTED                                       ErrorCode = 53
	ErrorCode_DUPLICATED_USER                                              ErrorCode = 54
	ErrorCode_RECORD_IS_READ_ONLY                                          ErrorCode = 55
	ErrorCode_RECORD_IS_DELETED                                            ErrorCode = 56
	ErrorCode_RECORD_COMMON_KEY_EDIT                                       ErrorCode = 57
	ErrorCode_IS_NOT_POSSIBLE_TO_EDIT_ANOTHER_USER                         ErrorCode = 58
	ErrorCode_MANUAL_REPAIR_REQUIRED                                       ErrorCode = 59
	ErrorCode_NOTHING_TO_SYNC                                              ErrorCode = 60
	ErrorCode_SERVICE_STACK_NOT_FOUND                                      ErrorCode = 61
	ErrorCode_SERVICE_STACK_TYPE_NOT_FOUND                                 ErrorCode = 62
	ErrorCode_SERVICE_STACK_TYPE_VERSION_NOT_FOUND                         ErrorCode = 63
	ErrorCode_SERVICE_STACK_TYPE_VERSION_IS_NOT_ACTIVE                     ErrorCode = 64
	ErrorCode_SERVICE_STACK_TYPE_VERSION_REMOVE_DEFAULT                    ErrorCode = 65
	ErrorCode_SERVICE_STACK_TYPE_INVALID_VERSION                           ErrorCode = 66
	ErrorCode_SERVICE_STACK_IS_FAILED                                      ErrorCode = 67
	ErrorCode_SERVICE_STACK_IS_SYSTEM_NOT_SUPPORTED                        ErrorCode = 68
	ErrorCode_SERVICE_STACK_CUSTOM_PORTS_ENABLED_REQUIRED                  ErrorCode = 69
	ErrorCode_SERVICE_STACK_TYPE_VERSION_NOT_MATCH_WITH_STACK_TYPE         ErrorCode = 70
	ErrorCode_SERVICE_STACK_STORAGE_DISK_MAX_LIMIT                         ErrorCode = 71
	ErrorCode_SERVICE_STACK_STORAGE_DISK_MIN_LIMIT                         ErrorCode = 72
	ErrorCode_SERVICE_STACK_OBJECT_STORAGE_QUOTA_NOT_FOUND                 ErrorCode = 73
	ErrorCode_SERVICE_STACK_TYPE_OBJECT_STORAGE_REQUIRED                   ErrorCode = 74
	ErrorCode_SERVICE_STACK_TYPE_OBJECT_STORAGE_FORBIDDEN                  ErrorCode = 75
	ErrorCode_SERVICE_STACK_TYPE_SHARED_STORAGE_FORBIDDEN                  ErrorCode = 76
	ErrorCode_SERVICE_STACK_IS_READY_TO_DEPLOY                             ErrorCode = 77
	ErrorCode_SERVICE_STACK_IS_NOT_HTTP                                    ErrorCode = 78
	ErrorCode_SERVICE_STACK_RELOAD_NOT_AVAILABLE                           ErrorCode = 79
	ErrorCode_SERVICE_STACK_NGINX_VIRTUALHOST_CONFIG                       ErrorCode = 80
	ErrorCode_SERVICE_STACK_SUBDOMAIN_ACCESS_ALREADY_DISABLED              ErrorCode = 81
	ErrorCode_PROCESS_NOT_FOUND                                            ErrorCode = 82
	ErrorCode_PROCESS_IS_ALREADY_OVER                                      ErrorCode = 83
	ErrorCode_PROCESS_IS_ALREADY_CANCELED                                  ErrorCode = 84
	ErrorCode_PROCESS_IS_ALREADY_RUNNING                                   ErrorCode = 85
	ErrorCode_UNABLE_TO_CANCEL_PROCESS                                     ErrorCode = 86
	ErrorCode_UNABLE_TO_CREATE_PROCESS                                     ErrorCode = 87
	ErrorCode_ACTIVE_SERVICE_STACK_EXISTS_IN_PROJECT                       ErrorCode = 88
	ErrorCode_INVALID_OLD_PASSWORD                                         ErrorCode = 89
	ErrorCode_PROJECT_STATUS_NOT_SUPPORTED                                 ErrorCode = 90
	ErrorCode_PROJECT_NOT_FOUND                                            ErrorCode = 91
	ErrorCode_PROJECT_IS_NOT_ACTIVE                                        ErrorCode = 167
	ErrorCode_SERVICE_STACK_NAME_UNAVAILABLE                               ErrorCode = 92
	ErrorCode_SERVICE_STACK_NAME_INVALID                                   ErrorCode = 93
	ErrorCode_CORE_SERVICE_STACK_TYPE_VERSION_NOT_FOUND                    ErrorCode = 94
	ErrorCode_L7_HTTP_BALANCER_SERVICE_STACK_TYPE_VERSION_NOT_FOUND        ErrorCode = 95
	ErrorCode_PROJECT_WILL_BE_DELETED                                      ErrorCode = 96
	ErrorCode_STACK_WILL_BE_DELETED                                        ErrorCode = 97
	ErrorCode_PUBLIC_HTTP_ROUTING_NOT_FOUND                                ErrorCode = 98
	ErrorCode_PUBLIC_HTTP_ROUTING_AT_LEAST_ONE_DOMAIN_REQUIRED             ErrorCode = 99
	ErrorCode_PUBLIC_HTTP_ROUTING_DUPLICATE_DOMAIN_NAME                    ErrorCode = 100
	ErrorCode_PUBLIC_HTTP_ROUTING_DUPLICATE_FALLBACK                       ErrorCode = 101
	ErrorCode_PUBLIC_HTTP_ROUTING_DUPLICATE_DOMAIN_NAME_IN_ANOTHER_ROUTING ErrorCode = 102
	ErrorCode_PUBLIC_HTTP_ROUTING_DUPLICATE_FALLBACK_IN_ANOTHER_ROUTING    ErrorCode = 103
	ErrorCode_PUBLIC_HTTP_ROUTING_DUPLICATE_LOCATION_PATHS                 ErrorCode = 104
	ErrorCode_PUBLIC_HTTP_ROUTING_ITEMS_LIMIT                              ErrorCode = 105
	ErrorCode_PUBLIC_HTTP_ROUTING_LOCATIONS_LIMIT                          ErrorCode = 106
	ErrorCode_PUBLIC_HTTP_ROUTING_DOMAINS_LIMIT                            ErrorCode = 107
	ErrorCode_PUBLIC_HTTP_ROUTING_INVALID_DOMAIN_NAME_FQDN                 ErrorCode = 108
	ErrorCode_PUBLIC_HTTP_ROUTING_SSL_FALLBACK                             ErrorCode = 109
	ErrorCode_PUBLIC_HTTP_ROUTING_LOCATION_DOES_NOT_FOUND                  ErrorCode = 110
	ErrorCode_PUBLIC_HTTP_ROUTING_INVALID_LOCATIONS_PREFIX                 ErrorCode = 111
	ErrorCode_PUBLIC_HTTP_ROUTING_MULTIPLE_SERVICE_STACK_ACCESS_POINTS     ErrorCode = 112
	ErrorCode_PUBLIC_HTTP_ROUTING_SERVICE_STACK_ACCESS_POINT_NOT_FOUND     ErrorCode = 113
	ErrorCode_PUBLIC_HTTP_ROUTING_REQUEST_ONLY_TCP_PORT                    ErrorCode = 114
	ErrorCode_PUBLIC_HTTP_ROUTING_SERVICE_STACK_DOES_NOT_SUPPORT_HTTP      ErrorCode = 115
	ErrorCode_NO_PUBLIC_HTTP_ROUTING_IN_L7_HTTP_BALANCING                  ErrorCode = 116
	ErrorCode_SSL_NOT_SUPPORTED                                            ErrorCode = 117
	ErrorCode_REGISTERED_DOMAIN_HOST_LIMIT_REACHED                         ErrorCode = 118
	ErrorCode_PUBLIC_SUFFIX_LIST_CONTROL_FAILED                            ErrorCode = 119
	ErrorCode_PORT_NOT_SUPPORTED                                           ErrorCode = 120
	ErrorCode_PUBLIC_HTTP_ROUTING_SYNC_RUNNING                             ErrorCode = 121
	ErrorCode_PUBLIC_HTTP_ROUTING_VERSION_MISMATCH                         ErrorCode = 169
	ErrorCode_PORT_OUT_OF_RANGE                                            ErrorCode = 122
	ErrorCode_PORT_PROTOCOL_INVALID                                        ErrorCode = 123
	ErrorCode_PORT_SCHEME_INVALID                                          ErrorCode = 124
	ErrorCode_UDP_PROTOCOL_SCHEME_MISMATCH                                 ErrorCode = 125
	ErrorCode_PUBLIC_IP_REQUEST_NOT_FOUND                                  ErrorCode = 126
	ErrorCode_PUBLIC_IP_REQUEST_ALREADY_EXISTS                             ErrorCode = 127
	ErrorCode_PUBLIC_IP_REQUEST_ONLY_ONE                                   ErrorCode = 128
	ErrorCode_PUBLIC_IP_REQUEST_DISABLED_TILL                              ErrorCode = 129
	ErrorCode_PUBLIC_IP_REQUEST_RELEASE_RUNNING                            ErrorCode = 130
	ErrorCode_USER_NOTIFICATION_NOT_FOUND                                  ErrorCode = 131
	ErrorCode_PUBLIC_PORT_ROUTING_NOT_FOUND                                ErrorCode = 132
	ErrorCode_PUBLIC_IP_TYPE_NOT_SUPPORTED                                 ErrorCode = 133
	ErrorCode_PORT_AND_PROTOCOL_COMBINATION_NOT_SUPPORTED                  ErrorCode = 134
	ErrorCode_PUBLIC_PORT_ROUTING_DUPLICATE_RULE                           ErrorCode = 135
	ErrorCode_PUBLIC_PORT_ROUTING_SYNC_RUNNING                             ErrorCode = 136
	ErrorCode_PUBLIC_PORT_ROUTING_INVALID_IP_FORMAT                        ErrorCode = 137
	ErrorCode_PUBLIC_PORT_ROUTING_FIREWALL_POLICY_CONFLICT                 ErrorCode = 138
	ErrorCode_PUBLIC_PORT_ROUTING_VERSION_MISMATCH                         ErrorCode = 170
	ErrorCode_PUBLIC_PORT_ROUTING_UNABLE_TO_EDIT_DELETED_RECORD            ErrorCode = 139
	ErrorCode_DRIVER_NOT_FOUND                                             ErrorCode = 140
	ErrorCode_DRIVER_ENTITY_IS_NOT_SERVICE_STACK                           ErrorCode = 141
	ErrorCode_DRIVER_ALREADY_SET                                           ErrorCode = 142
	ErrorCode_CLIENT_USER_CONNECTION_ALREADY_EXISTS                        ErrorCode = 143
	ErrorCode_USER_ALREADY_ASSIGNED                                        ErrorCode = 144
	ErrorCode_SERVICE_STACK_TYPE_USER_STORAGE_REQUIRED                     ErrorCode = 145
	ErrorCode_APP_VERSION_NOT_FOUND                                        ErrorCode = 146
	ErrorCode_APP_VERSION_INVALID_STATUS                                   ErrorCode = 147
	ErrorCode_DEPLOY_PROCESS_ALREADY_CREATED                               ErrorCode = 148
	ErrorCode_OBJECT_CONTENT_LENGTH_ZERO                                   ErrorCode = 149
	ErrorCode_OBJECT_MIME_TYPE_NOT_SUPPORTED                               ErrorCode = 150
	ErrorCode_OBJECT_NOT_FOUND                                             ErrorCode = 151
	ErrorCode_MAX_OBJECT_DISK_SIZE_ESTIMATE_EXCEEDED                       ErrorCode = 152
	ErrorCode_SHARED_STORAGE_NOT_FOUND                                     ErrorCode = 153
	ErrorCode_SHARED_STORAGE_INVALID_PROJECT                               ErrorCode = 154
	ErrorCode_SERVICE_STACK_CONNECTION_NOT_FOUND                           ErrorCode = 155
	ErrorCode_SHARED_STORAGE_INVALID_CATEGORY                              ErrorCode = 156
	ErrorCode_USER_SERVICE_STACK_INVALID_CATEGORY                          ErrorCode = 157
	ErrorCode_IDENTICAL_SHARED_STORAGE_AND_SERVICE_STACK                   ErrorCode = 158
	ErrorCode_CLIENT_ID_PROJECT_SERVICE_STACK_MISSING                      ErrorCode = 159
	ErrorCode_DIFFERENT_PROJECT_IDS                                        ErrorCode = 160
	ErrorCode_USER_ID_WAS_NOT_FOUND                                        ErrorCode = 161
	ErrorCode_AUTHOR_ID_WAS_NOT_FOUND                                      ErrorCode = 162
	ErrorCode_USER_DOES_NOT_HAVE_ACTIVE_CONNECTION_TO_ANY_CLIENT           ErrorCode = 163
	ErrorCode_USER_HAS_NOT_ACCESS_TO_ZEROPS                                ErrorCode = 164
)

var ErrorCode_name = map[int32]string{
	0:   "NO_ERROR",
	1:   "INTERNAL_SERVER_ERROR",
	2:   "INVALID_USER_INPUT",
	3:   "INVALID_USER_INPUT_WITH_TEXT",
	4:   "NOT_AUTHORIZED",
	5:   "INSUFFICIENT_PRIVILEGES",
	6:   "REFRESH_TOKEN_INVALID",
	7:   "ENDPOINT_NOT_FOUND",
	8:   "POTENTIALLY_FRAUD_BEHAVIOR_DETECTED",
	9:   "RE_CAPTCHA_RESPONSE_INVALID",
	10:  "DOWNLOAD_TOKEN_INVALID_OR_EXPIRED",
	11:  "INCORRECT_USER_CREDENTIALS",
	12:  "NO_RIGHTS_TO_SELECTED_ACTION",
	13:  "FILE_SIZE_LIMIT_EXCEEDED",
	14:  "ADDITIONAL_VERIFICATION_FAILED",
	15:  "ACTIVE_USER_MUST_BE_CONNECTED_TO_AT_LEAST_ONE_CLIENT",
	16:  "INVALID_CREDENTIALS",
	17:  "PASSWORD_TOO_WEAK",
	18:  "NO_ACTIVE_CONNECTION_TO_ANY_CLIENT",
	19:  "NO_ACTIVE_CONNECTION_TO_CURRENT_CLIENT",
	20:  "TOKEN_EXPIRED",
	21:  "CLIENT_NOT_FOUND",
	22:  "NO_ACCESS_TO_ZEROPS",
	23:  "USER_NOT_FOUND",
	24:  "INVALID_DOCUMENT_ROOT",
	25:  "INVALID_ENTRYPOINT",
	26:  "DOWNLOAD_EXPIRED",
	27:  "USER_DATA_NOT_FOUND",
	28:  "USER_DATA_KEY_INVALID",
	29:  "USER_DATA_CONTENT_INVALID",
	30:  "USER_DATA_DELETE_FORBIDDEN",
	31:  "USER_DATA_DUPLICATE_KEY",
	32:  "USER_DATA_SYNC_RUNNING",
	168: "USER_DATA_VERSION_MISMATCH",
	33:  "USER_CERTIFICATE_NOT_FOUND",
	34:  "USER_ACCOUNT_NOT_FOUND",
	35:  "TEMPLATE_NOT_FOUND",
	36:  "COUNTRY_CALLING_CODE_DOES_NOT_MATCH_PHONE_NUMBER",
	37:  "INVALID_PHONE_NUMBER",
	38:  "INVALID_USER_ROLE",
	39:  "INVALID_CLIENT_USER_GROUP_COMBINATION",
	40:  "EMAIL_EXISTS",
	41:  "USER_ALREADY_CONNECTED_TO_COMPANY",
	42:  "COUNTRY_NOT_FOUND",
	43:  "RECORD_NOT_FOUND",
	44:  "MAXIMUM_NUMBER_OF_CLIENT_EXCEEDED",
	45:  "USER_IS_NOT_IN_BEING_DELETED_STATUS",
	46:  "UNABLE_TO_DELETE_YOUR_OWN_ACCOUNT",
	47:  "CLIENT_USER_CONNECTION_NOT_FOUND",
	48:  "CLIENT_USER_CONNECTION_HAS_BEEN_DELETED",
	49:  "BAD_OR_EXPIRED_ACTIVATION_LINK",
	50:  "UNABLE_TO_EDIT_DELETED_USER",
	51:  "CLIENT_USER_ALREADY_BEEN_DELETED",
	52:  "LANGUAGE_NOT_FOUND",
	53:  "LANGUAGE_NOT_SUPPORTED",
	54:  "DUPLICATED_USER",
	55:  "RECORD_IS_READ_ONLY",
	56:  "RECORD_IS_DELETED",
	57:  "RECORD_COMMON_KEY_EDIT",
	58:  "IS_NOT_POSSIBLE_TO_EDIT_ANOTHER_USER",
	59:  "MANUAL_REPAIR_REQUIRED",
	60:  "NOTHING_TO_SYNC",
	61:  "SERVICE_STACK_NOT_FOUND",
	62:  "SERVICE_STACK_TYPE_NOT_FOUND",
	63:  "SERVICE_STACK_TYPE_VERSION_NOT_FOUND",
	64:  "SERVICE_STACK_TYPE_VERSION_IS_NOT_ACTIVE",
	65:  "SERVICE_STACK_TYPE_VERSION_REMOVE_DEFAULT",
	66:  "SERVICE_STACK_TYPE_INVALID_VERSION",
	67:  "SERVICE_STACK_IS_FAILED",
	68:  "SERVICE_STACK_IS_SYSTEM_NOT_SUPPORTED",
	69:  "SERVICE_STACK_CUSTOM_PORTS_ENABLED_REQUIRED",
	70:  "SERVICE_STACK_TYPE_VERSION_NOT_MATCH_WITH_STACK_TYPE",
	71:  "SERVICE_STACK_STORAGE_DISK_MAX_LIMIT",
	72:  "SERVICE_STACK_STORAGE_DISK_MIN_LIMIT",
	73:  "SERVICE_STACK_OBJECT_STORAGE_QUOTA_NOT_FOUND",
	74:  "SERVICE_STACK_TYPE_OBJECT_STORAGE_REQUIRED",
	75:  "SERVICE_STACK_TYPE_OBJECT_STORAGE_FORBIDDEN",
	76:  "SERVICE_STACK_TYPE_SHARED_STORAGE_FORBIDDEN",
	77:  "SERVICE_STACK_IS_READY_TO_DEPLOY",
	78:  "SERVICE_STACK_IS_NOT_HTTP",
	79:  "SERVICE_STACK_RELOAD_NOT_AVAILABLE",
	80:  "SERVICE_STACK_NGINX_VIRTUALHOST_CONFIG",
	81:  "SERVICE_STACK_SUBDOMAIN_ACCESS_ALREADY_DISABLED",
	82:  "PROCESS_NOT_FOUND",
	83:  "PROCESS_IS_ALREADY_OVER",
	84:  "PROCESS_IS_ALREADY_CANCELED",
	85:  "PROCESS_IS_ALREADY_RUNNING",
	86:  "UNABLE_TO_CANCEL_PROCESS",
	87:  "UNABLE_TO_CREATE_PROCESS",
	88:  "ACTIVE_SERVICE_STACK_EXISTS_IN_PROJECT",
	89:  "INVALID_OLD_PASSWORD",
	90:  "PROJECT_STATUS_NOT_SUPPORTED",
	91:  "PROJECT_NOT_FOUND",
	167: "PROJECT_IS_NOT_ACTIVE",
	92:  "SERVICE_STACK_NAME_UNAVAILABLE",
	93:  "SERVICE_STACK_NAME_INVALID",
	94:  "CORE_SERVICE_STACK_TYPE_VERSION_NOT_FOUND",
	95:  "L7_HTTP_BALANCER_SERVICE_STACK_TYPE_VERSION_NOT_FOUND",
	96:  "PROJECT_WILL_BE_DELETED",
	97:  "STACK_WILL_BE_DELETED",
	98:  "PUBLIC_HTTP_ROUTING_NOT_FOUND",
	99:  "PUBLIC_HTTP_ROUTING_AT_LEAST_ONE_DOMAIN_REQUIRED",
	100: "PUBLIC_HTTP_ROUTING_DUPLICATE_DOMAIN_NAME",
	101: "PUBLIC_HTTP_ROUTING_DUPLICATE_FALLBACK",
	102: "PUBLIC_HTTP_ROUTING_DUPLICATE_DOMAIN_NAME_IN_ANOTHER_ROUTING",
	103: "PUBLIC_HTTP_ROUTING_DUPLICATE_FALLBACK_IN_ANOTHER_ROUTING",
	104: "PUBLIC_HTTP_ROUTING_DUPLICATE_LOCATION_PATHS",
	105: "PUBLIC_HTTP_ROUTING_ITEMS_LIMIT",
	106: "PUBLIC_HTTP_ROUTING_LOCATIONS_LIMIT",
	107: "PUBLIC_HTTP_ROUTING_DOMAINS_LIMIT",
	108: "PUBLIC_HTTP_ROUTING_INVALID_DOMAIN_NAME_FQDN",
	109: "PUBLIC_HTTP_ROUTING_SSL_FALLBACK",
	110: "PUBLIC_HTTP_ROUTING_LOCATION_DOES_NOT_FOUND",
	111: "PUBLIC_HTTP_ROUTING_INVALID_LOCATIONS_PREFIX",
	112: "PUBLIC_HTTP_ROUTING_MULTIPLE_SERVICE_STACK_ACCESS_POINTS",
	113: "PUBLIC_HTTP_ROUTING_SERVICE_STACK_ACCESS_POINT_NOT_FOUND",
	114: "PUBLIC_HTTP_ROUTING_REQUEST_ONLY_TCP_PORT",
	115: "PUBLIC_HTTP_ROUTING_SERVICE_STACK_DOES_NOT_SUPPORT_HTTP",
	116: "NO_PUBLIC_HTTP_ROUTING_IN_L7_HTTP_BALANCING",
	117: "SSL_NOT_SUPPORTED",
	118: "REGISTERED_DOMAIN_HOST_LIMIT_REACHED",
	119: "PUBLIC_SUFFIX_LIST_CONTROL_FAILED",
	120: "PORT_NOT_SUPPORTED",
	121: "PUBLIC_HTTP_ROUTING_SYNC_RUNNING",
	169: "PUBLIC_HTTP_ROUTING_VERSION_MISMATCH",
	122: "PORT_OUT_OF_RANGE",
	123: "PORT_PROTOCOL_INVALID",
	124: "PORT_SCHEME_INVALID",
	125: "UDP_PROTOCOL_SCHEME_MISMATCH",
	126: "PUBLIC_IP_REQUEST_NOT_FOUND",
	127: "PUBLIC_IP_REQUEST_ALREADY_EXISTS",
	128: "PUBLIC_IP_REQUEST_ONLY_ONE",
	129: "PUBLIC_IP_REQUEST_DISABLED_TILL",
	130: "PUBLIC_IP_REQUEST_RELEASE_RUNNING",
	131: "USER_NOTIFICATION_NOT_FOUND",
	132: "PUBLIC_PORT_ROUTING_NOT_FOUND",
	133: "PUBLIC_IP_TYPE_NOT_SUPPORTED",
	134: "PORT_AND_PROTOCOL_COMBINATION_NOT_SUPPORTED",
	135: "PUBLIC_PORT_ROUTING_DUPLICATE_RULE",
	136: "PUBLIC_PORT_ROUTING_SYNC_RUNNING",
	137: "PUBLIC_PORT_ROUTING_INVALID_IP_FORMAT",
	138: "PUBLIC_PORT_ROUTING_FIREWALL_POLICY_CONFLICT",
	170: "PUBLIC_PORT_ROUTING_VERSION_MISMATCH",
	139: "PUBLIC_PORT_ROUTING_UNABLE_TO_EDIT_DELETED_RECORD",
	140: "DRIVER_NOT_FOUND",
	141: "DRIVER_ENTITY_IS_NOT_SERVICE_STACK",
	142: "DRIVER_ALREADY_SET",
	143: "CLIENT_USER_CONNECTION_ALREADY_EXISTS",
	144: "USER_ALREADY_ASSIGNED",
	145: "SERVICE_STACK_TYPE_USER_STORAGE_REQUIRED",
	146: "APP_VERSION_NOT_FOUND",
	147: "APP_VERSION_INVALID_STATUS",
	148: "DEPLOY_PROCESS_ALREADY_CREATED",
	149: "OBJECT_CONTENT_LENGTH_ZERO",
	150: "OBJECT_MIME_TYPE_NOT_SUPPORTED",
	151: "OBJECT_NOT_FOUND",
	152: "MAX_OBJECT_DISK_SIZE_ESTIMATE_EXCEEDED",
	153: "SHARED_STORAGE_NOT_FOUND",
	154: "SHARED_STORAGE_INVALID_PROJECT",
	155: "SERVICE_STACK_CONNECTION_NOT_FOUND",
	156: "SHARED_STORAGE_INVALID_CATEGORY",
	157: "USER_SERVICE_STACK_INVALID_CATEGORY",
	158: "IDENTICAL_SHARED_STORAGE_AND_SERVICE_STACK",
	159: "CLIENT_ID_PROJECT_SERVICE_STACK_MISSING",
	160: "DIFFERENT_PROJECT_IDS",
	161: "USER_ID_WAS_NOT_FOUND",
	162: "AUTHOR_ID_WAS_NOT_FOUND",
	163: "USER_DOES_NOT_HAVE_ACTIVE_CONNECTION_TO_ANY_CLIENT",
	164: "USER_HAS_NOT_ACCESS_TO_ZEROPS",
}

var ErrorCode_value = map[string]int32{
	"NO_ERROR":                                                     0,
	"INTERNAL_SERVER_ERROR":                                        1,
	"INVALID_USER_INPUT":                                           2,
	"INVALID_USER_INPUT_WITH_TEXT":                                 3,
	"NOT_AUTHORIZED":                                               4,
	"INSUFFICIENT_PRIVILEGES":                                      5,
	"REFRESH_TOKEN_INVALID":                                        6,
	"ENDPOINT_NOT_FOUND":                                           7,
	"POTENTIALLY_FRAUD_BEHAVIOR_DETECTED":                          8,
	"RE_CAPTCHA_RESPONSE_INVALID":                                  9,
	"DOWNLOAD_TOKEN_INVALID_OR_EXPIRED":                            10,
	"INCORRECT_USER_CREDENTIALS":                                   11,
	"NO_RIGHTS_TO_SELECTED_ACTION":                                 12,
	"FILE_SIZE_LIMIT_EXCEEDED":                                     13,
	"ADDITIONAL_VERIFICATION_FAILED":                               14,
	"ACTIVE_USER_MUST_BE_CONNECTED_TO_AT_LEAST_ONE_CLIENT":         15,
	"INVALID_CREDENTIALS":                                          16,
	"PASSWORD_TOO_WEAK":                                            17,
	"NO_ACTIVE_CONNECTION_TO_ANY_CLIENT":                           18,
	"NO_ACTIVE_CONNECTION_TO_CURRENT_CLIENT":                       19,
	"TOKEN_EXPIRED":                                                20,
	"CLIENT_NOT_FOUND":                                             21,
	"NO_ACCESS_TO_ZEROPS":                                          22,
	"USER_NOT_FOUND":                                               23,
	"INVALID_DOCUMENT_ROOT":                                        24,
	"INVALID_ENTRYPOINT":                                           25,
	"DOWNLOAD_EXPIRED":                                             26,
	"USER_DATA_NOT_FOUND":                                          27,
	"USER_DATA_KEY_INVALID":                                        28,
	"USER_DATA_CONTENT_INVALID":                                    29,
	"USER_DATA_DELETE_FORBIDDEN":                                   30,
	"USER_DATA_DUPLICATE_KEY":                                      31,
	"USER_DATA_SYNC_RUNNING":                                       32,
	"USER_DATA_VERSION_MISMATCH":                                   168,
	"USER_CERTIFICATE_NOT_FOUND":                                   33,
	"USER_ACCOUNT_NOT_FOUND":                                       34,
	"TEMPLATE_NOT_FOUND":                                           35,
	"COUNTRY_CALLING_CODE_DOES_NOT_MATCH_PHONE_NUMBER":             36,
	"INVALID_PHONE_NUMBER":                                         37,
	"INVALID_USER_ROLE":                                            38,
	"INVALID_CLIENT_USER_GROUP_COMBINATION":                        39,
	"EMAIL_EXISTS":                                                 40,
	"USER_ALREADY_CONNECTED_TO_COMPANY":                            41,
	"COUNTRY_NOT_FOUND":                                            42,
	"RECORD_NOT_FOUND":                                             43,
	"MAXIMUM_NUMBER_OF_CLIENT_EXCEEDED":                            44,
	"USER_IS_NOT_IN_BEING_DELETED_STATUS":                          45,
	"UNABLE_TO_DELETE_YOUR_OWN_ACCOUNT":                            46,
	"CLIENT_USER_CONNECTION_NOT_FOUND":                             47,
	"CLIENT_USER_CONNECTION_HAS_BEEN_DELETED":                      48,
	"BAD_OR_EXPIRED_ACTIVATION_LINK":                               49,
	"UNABLE_TO_EDIT_DELETED_USER":                                  50,
	"CLIENT_USER_ALREADY_BEEN_DELETED":                             51,
	"LANGUAGE_NOT_FOUND":                                           52,
	"LANGUAGE_NOT_SUPPORTED":                                       53,
	"DUPLICATED_USER":                                              54,
	"RECORD_IS_READ_ONLY":                                          55,
	"RECORD_IS_DELETED":                                            56,
	"RECORD_COMMON_KEY_EDIT":                                       57,
	"IS_NOT_POSSIBLE_TO_EDIT_ANOTHER_USER":                         58,
	"MANUAL_REPAIR_REQUIRED":                                       59,
	"NOTHING_TO_SYNC":                                              60,
	"SERVICE_STACK_NOT_FOUND":                                      61,
	"SERVICE_STACK_TYPE_NOT_FOUND":                                 62,
	"SERVICE_STACK_TYPE_VERSION_NOT_FOUND":                         63,
	"SERVICE_STACK_TYPE_VERSION_IS_NOT_ACTIVE":                     64,
	"SERVICE_STACK_TYPE_VERSION_REMOVE_DEFAULT":                    65,
	"SERVICE_STACK_TYPE_INVALID_VERSION":                           66,
	"SERVICE_STACK_IS_FAILED":                                      67,
	"SERVICE_STACK_IS_SYSTEM_NOT_SUPPORTED":                        68,
	"SERVICE_STACK_CUSTOM_PORTS_ENABLED_REQUIRED":                  69,
	"SERVICE_STACK_TYPE_VERSION_NOT_MATCH_WITH_STACK_TYPE":         70,
	"SERVICE_STACK_STORAGE_DISK_MAX_LIMIT":                         71,
	"SERVICE_STACK_STORAGE_DISK_MIN_LIMIT":                         72,
	"SERVICE_STACK_OBJECT_STORAGE_QUOTA_NOT_FOUND":                 73,
	"SERVICE_STACK_TYPE_OBJECT_STORAGE_REQUIRED":                   74,
	"SERVICE_STACK_TYPE_OBJECT_STORAGE_FORBIDDEN":                  75,
	"SERVICE_STACK_TYPE_SHARED_STORAGE_FORBIDDEN":                  76,
	"SERVICE_STACK_IS_READY_TO_DEPLOY":                             77,
	"SERVICE_STACK_IS_NOT_HTTP":                                    78,
	"SERVICE_STACK_RELOAD_NOT_AVAILABLE":                           79,
	"SERVICE_STACK_NGINX_VIRTUALHOST_CONFIG":                       80,
	"SERVICE_STACK_SUBDOMAIN_ACCESS_ALREADY_DISABLED":              81,
	"PROCESS_NOT_FOUND":                                            82,
	"PROCESS_IS_ALREADY_OVER":                                      83,
	"PROCESS_IS_ALREADY_CANCELED":                                  84,
	"PROCESS_IS_ALREADY_RUNNING":                                   85,
	"UNABLE_TO_CANCEL_PROCESS":                                     86,
	"UNABLE_TO_CREATE_PROCESS":                                     87,
	"ACTIVE_SERVICE_STACK_EXISTS_IN_PROJECT":                       88,
	"INVALID_OLD_PASSWORD":                                         89,
	"PROJECT_STATUS_NOT_SUPPORTED":                                 90,
	"PROJECT_NOT_FOUND":                                            91,
	"PROJECT_IS_NOT_ACTIVE":                                        167,
	"SERVICE_STACK_NAME_UNAVAILABLE":                               92,
	"SERVICE_STACK_NAME_INVALID":                                   93,
	"CORE_SERVICE_STACK_TYPE_VERSION_NOT_FOUND":                    94,
	"L7_HTTP_BALANCER_SERVICE_STACK_TYPE_VERSION_NOT_FOUND":        95,
	"PROJECT_WILL_BE_DELETED":                                      96,
	"STACK_WILL_BE_DELETED":                                        97,
	"PUBLIC_HTTP_ROUTING_NOT_FOUND":                                98,
	"PUBLIC_HTTP_ROUTING_AT_LEAST_ONE_DOMAIN_REQUIRED":             99,
	"PUBLIC_HTTP_ROUTING_DUPLICATE_DOMAIN_NAME":                    100,
	"PUBLIC_HTTP_ROUTING_DUPLICATE_FALLBACK":                       101,
	"PUBLIC_HTTP_ROUTING_DUPLICATE_DOMAIN_NAME_IN_ANOTHER_ROUTING": 102,
	"PUBLIC_HTTP_ROUTING_DUPLICATE_FALLBACK_IN_ANOTHER_ROUTING":    103,
	"PUBLIC_HTTP_ROUTING_DUPLICATE_LOCATION_PATHS":                 104,
	"PUBLIC_HTTP_ROUTING_ITEMS_LIMIT":                              105,
	"PUBLIC_HTTP_ROUTING_LOCATIONS_LIMIT":                          106,
	"PUBLIC_HTTP_ROUTING_DOMAINS_LIMIT":                            107,
	"PUBLIC_HTTP_ROUTING_INVALID_DOMAIN_NAME_FQDN":                 108,
	"PUBLIC_HTTP_ROUTING_SSL_FALLBACK":                             109,
	"PUBLIC_HTTP_ROUTING_LOCATION_DOES_NOT_FOUND":                  110,
	"PUBLIC_HTTP_ROUTING_INVALID_LOCATIONS_PREFIX":                 111,
	"PUBLIC_HTTP_ROUTING_MULTIPLE_SERVICE_STACK_ACCESS_POINTS":     112,
	"PUBLIC_HTTP_ROUTING_SERVICE_STACK_ACCESS_POINT_NOT_FOUND":     113,
	"PUBLIC_HTTP_ROUTING_REQUEST_ONLY_TCP_PORT":                    114,
	"PUBLIC_HTTP_ROUTING_SERVICE_STACK_DOES_NOT_SUPPORT_HTTP":      115,
	"NO_PUBLIC_HTTP_ROUTING_IN_L7_HTTP_BALANCING":                  116,
	"SSL_NOT_SUPPORTED":                                            117,
	"REGISTERED_DOMAIN_HOST_LIMIT_REACHED":                         118,
	"PUBLIC_SUFFIX_LIST_CONTROL_FAILED":                            119,
	"PORT_NOT_SUPPORTED":                                           120,
	"PUBLIC_HTTP_ROUTING_SYNC_RUNNING":                             121,
	"PUBLIC_HTTP_ROUTING_VERSION_MISMATCH":                         169,
	"PORT_OUT_OF_RANGE":                                            122,
	"PORT_PROTOCOL_INVALID":                                        123,
	"PORT_SCHEME_INVALID":                                          124,
	"UDP_PROTOCOL_SCHEME_MISMATCH":                                 125,
	"PUBLIC_IP_REQUEST_NOT_FOUND":                                  126,
	"PUBLIC_IP_REQUEST_ALREADY_EXISTS":                             127,
	"PUBLIC_IP_REQUEST_ONLY_ONE":                                   128,
	"PUBLIC_IP_REQUEST_DISABLED_TILL":                              129,
	"PUBLIC_IP_REQUEST_RELEASE_RUNNING":                            130,
	"USER_NOTIFICATION_NOT_FOUND":                                  131,
	"PUBLIC_PORT_ROUTING_NOT_FOUND":                                132,
	"PUBLIC_IP_TYPE_NOT_SUPPORTED":                                 133,
	"PORT_AND_PROTOCOL_COMBINATION_NOT_SUPPORTED":                  134,
	"PUBLIC_PORT_ROUTING_DUPLICATE_RULE":                           135,
	"PUBLIC_PORT_ROUTING_SYNC_RUNNING":                             136,
	"PUBLIC_PORT_ROUTING_INVALID_IP_FORMAT":                        137,
	"PUBLIC_PORT_ROUTING_FIREWALL_POLICY_CONFLICT":                 138,
	"PUBLIC_PORT_ROUTING_VERSION_MISMATCH":                         170,
	"PUBLIC_PORT_ROUTING_UNABLE_TO_EDIT_DELETED_RECORD":            139,
	"DRIVER_NOT_FOUND":                                             140,
	"DRIVER_ENTITY_IS_NOT_SERVICE_STACK":                           141,
	"DRIVER_ALREADY_SET":                                           142,
	"CLIENT_USER_CONNECTION_ALREADY_EXISTS":                        143,
	"USER_ALREADY_ASSIGNED":                                        144,
	"SERVICE_STACK_TYPE_USER_STORAGE_REQUIRED":                     145,
	"APP_VERSION_NOT_FOUND":                                        146,
	"APP_VERSION_INVALID_STATUS":                                   147,
	"DEPLOY_PROCESS_ALREADY_CREATED":                               148,
	"OBJECT_CONTENT_LENGTH_ZERO":                                   149,
	"OBJECT_MIME_TYPE_NOT_SUPPORTED":                               150,
	"OBJECT_NOT_FOUND":                                             151,
	"MAX_OBJECT_DISK_SIZE_ESTIMATE_EXCEEDED":                       152,
	"SHARED_STORAGE_NOT_FOUND":                                     153,
	"SHARED_STORAGE_INVALID_PROJECT":                               154,
	"SERVICE_STACK_CONNECTION_NOT_FOUND":                           155,
	"SHARED_STORAGE_INVALID_CATEGORY":                              156,
	"USER_SERVICE_STACK_INVALID_CATEGORY":                          157,
	"IDENTICAL_SHARED_STORAGE_AND_SERVICE_STACK":                   158,
	"CLIENT_ID_PROJECT_SERVICE_STACK_MISSING":                      159,
	"DIFFERENT_PROJECT_IDS":                                        160,
	"USER_ID_WAS_NOT_FOUND":                                        161,
	"AUTHOR_ID_WAS_NOT_FOUND":                                      162,
	"USER_DOES_NOT_HAVE_ACTIVE_CONNECTION_TO_ANY_CLIENT":           163,
	"USER_HAS_NOT_ACCESS_TO_ZEROPS":                                164,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0}
}

type AppVersionStatus int32

const (
	AppVersionStatus_APP_VERSION_STATUS_UNKNOWN           AppVersionStatus = 0
	AppVersionStatus_APP_VERSION_STATUS_UPLOADING         AppVersionStatus = 1
	AppVersionStatus_APP_VERSION_STATUS_WAITING_TO_DEPLOY AppVersionStatus = 2
	AppVersionStatus_APP_VERSION_STATUS_DEPLOYING         AppVersionStatus = 3
	AppVersionStatus_APP_VERSION_STATUS_DEPLOY_FAILED     AppVersionStatus = 4
	AppVersionStatus_APP_VERSION_STATUS_ACTIVE            AppVersionStatus = 5
	AppVersionStatus_APP_VERSION_STATUS_BACKUP            AppVersionStatus = 6
)

var AppVersionStatus_name = map[int32]string{
	0: "APP_VERSION_STATUS_UNKNOWN",
	1: "APP_VERSION_STATUS_UPLOADING",
	2: "APP_VERSION_STATUS_WAITING_TO_DEPLOY",
	3: "APP_VERSION_STATUS_DEPLOYING",
	4: "APP_VERSION_STATUS_DEPLOY_FAILED",
	5: "APP_VERSION_STATUS_ACTIVE",
	6: "APP_VERSION_STATUS_BACKUP",
}

var AppVersionStatus_value = map[string]int32{
	"APP_VERSION_STATUS_UNKNOWN":           0,
	"APP_VERSION_STATUS_UPLOADING":         1,
	"APP_VERSION_STATUS_WAITING_TO_DEPLOY": 2,
	"APP_VERSION_STATUS_DEPLOYING":         3,
	"APP_VERSION_STATUS_DEPLOY_FAILED":     4,
	"APP_VERSION_STATUS_ACTIVE":            5,
	"APP_VERSION_STATUS_BACKUP":            6,
}

func (x AppVersionStatus) String() string {
	return proto.EnumName(AppVersionStatus_name, int32(x))
}

func (AppVersionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{1}
}

type ClientUserLightRoleCode int32

const (
	ClientUserLightRoleCode_CLIENT_USER_LIGHT_ROLE_CODE_UNKNOWN ClientUserLightRoleCode = 0
	ClientUserLightRoleCode_CLIENT_USER_LIGHT_ROLE_CODE_MANAGER ClientUserLightRoleCode = 1
)

var ClientUserLightRoleCode_name = map[int32]string{
	0: "CLIENT_USER_LIGHT_ROLE_CODE_UNKNOWN",
	1: "CLIENT_USER_LIGHT_ROLE_CODE_MANAGER",
}

var ClientUserLightRoleCode_value = map[string]int32{
	"CLIENT_USER_LIGHT_ROLE_CODE_UNKNOWN": 0,
	"CLIENT_USER_LIGHT_ROLE_CODE_MANAGER": 1,
}

func (x ClientUserLightRoleCode) String() string {
	return proto.EnumName(ClientUserLightRoleCode_name, int32(x))
}

func (ClientUserLightRoleCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{2}
}

type ClientUserLightStatus int32

const (
	ClientUserLightStatus_CLIENT_USER_LIGHT_STATUS_UNKNOWN               ClientUserLightStatus = 0
	ClientUserLightStatus_CLIENT_USER_LIGHT_STATUS_ACTIVE                ClientUserLightStatus = 1
	ClientUserLightStatus_CLIENT_USER_LIGHT_STATUS_WAITING_AUTHORIZATION ClientUserLightStatus = 2
	ClientUserLightStatus_CLIENT_USER_LIGHT_STATUS_BEING_DELETED         ClientUserLightStatus = 3
)

var ClientUserLightStatus_name = map[int32]string{
	0: "CLIENT_USER_LIGHT_STATUS_UNKNOWN",
	1: "CLIENT_USER_LIGHT_STATUS_ACTIVE",
	2: "CLIENT_USER_LIGHT_STATUS_WAITING_AUTHORIZATION",
	3: "CLIENT_USER_LIGHT_STATUS_BEING_DELETED",
}

var ClientUserLightStatus_value = map[string]int32{
	"CLIENT_USER_LIGHT_STATUS_UNKNOWN":               0,
	"CLIENT_USER_LIGHT_STATUS_ACTIVE":                1,
	"CLIENT_USER_LIGHT_STATUS_WAITING_AUTHORIZATION": 2,
	"CLIENT_USER_LIGHT_STATUS_BEING_DELETED":         3,
}

func (x ClientUserLightStatus) String() string {
	return proto.EnumName(ClientUserLightStatus_name, int32(x))
}

func (ClientUserLightStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{3}
}

type ProcessStatus int32

const (
	ProcessStatus_PROCESS_STATUS_UNKNOWN     ProcessStatus = 0
	ProcessStatus_PROCESS_STATUS_PENDING     ProcessStatus = 1
	ProcessStatus_PROCESS_STATUS_RUNNING     ProcessStatus = 2
	ProcessStatus_PROCESS_STATUS_ROLLBACKING ProcessStatus = 3
	ProcessStatus_PROCESS_STATUS_CANCELING   ProcessStatus = 4
	ProcessStatus_PROCESS_STATUS_FINISHED    ProcessStatus = 5
	ProcessStatus_PROCESS_STATUS_FAILED      ProcessStatus = 6
	ProcessStatus_PROCESS_STATUS_CANCELED    ProcessStatus = 7
	ProcessStatus_PROCESS_STATUS_DELETED     ProcessStatus = 8
)

var ProcessStatus_name = map[int32]string{
	0: "PROCESS_STATUS_UNKNOWN",
	1: "PROCESS_STATUS_PENDING",
	2: "PROCESS_STATUS_RUNNING",
	3: "PROCESS_STATUS_ROLLBACKING",
	4: "PROCESS_STATUS_CANCELING",
	5: "PROCESS_STATUS_FINISHED",
	6: "PROCESS_STATUS_FAILED",
	7: "PROCESS_STATUS_CANCELED",
	8: "PROCESS_STATUS_DELETED",
}

var ProcessStatus_value = map[string]int32{
	"PROCESS_STATUS_UNKNOWN":     0,
	"PROCESS_STATUS_PENDING":     1,
	"PROCESS_STATUS_RUNNING":     2,
	"PROCESS_STATUS_ROLLBACKING": 3,
	"PROCESS_STATUS_CANCELING":   4,
	"PROCESS_STATUS_FINISHED":    5,
	"PROCESS_STATUS_FAILED":      6,
	"PROCESS_STATUS_CANCELED":    7,
	"PROCESS_STATUS_DELETED":     8,
}

func (x ProcessStatus) String() string {
	return proto.EnumName(ProcessStatus_name, int32(x))
}

func (ProcessStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{4}
}

type ProjectStatus int32

const (
	ProjectStatus_PROJECT_STATUS_UNKNOWN  ProjectStatus = 0
	ProjectStatus_PROJECT_STATUS_NEW      ProjectStatus = 1
	ProjectStatus_PROJECT_STATUS_CREATING ProjectStatus = 2
	ProjectStatus_PROJECT_STATUS_ACTIVE   ProjectStatus = 3
	ProjectStatus_PROJECT_STATUS_DELETING ProjectStatus = 4
	ProjectStatus_PROJECT_STATUS_FAILED   ProjectStatus = 5
)

var ProjectStatus_name = map[int32]string{
	0: "PROJECT_STATUS_UNKNOWN",
	1: "PROJECT_STATUS_NEW",
	2: "PROJECT_STATUS_CREATING",
	3: "PROJECT_STATUS_ACTIVE",
	4: "PROJECT_STATUS_DELETING",
	5: "PROJECT_STATUS_FAILED",
}

var ProjectStatus_value = map[string]int32{
	"PROJECT_STATUS_UNKNOWN":  0,
	"PROJECT_STATUS_NEW":      1,
	"PROJECT_STATUS_CREATING": 2,
	"PROJECT_STATUS_ACTIVE":   3,
	"PROJECT_STATUS_DELETING": 4,
	"PROJECT_STATUS_FAILED":   5,
}

func (x ProjectStatus) String() string {
	return proto.EnumName(ProjectStatus_name, int32(x))
}

func (ProjectStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{5}
}

type PublicHttpRoutingDomainDnsCheckStatus int32

const (
	PublicHttpRoutingDomainDnsCheckStatus_PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_UNKNOWN  PublicHttpRoutingDomainDnsCheckStatus = 0
	PublicHttpRoutingDomainDnsCheckStatus_PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_PENDING  PublicHttpRoutingDomainDnsCheckStatus = 1
	PublicHttpRoutingDomainDnsCheckStatus_PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_CHECKING PublicHttpRoutingDomainDnsCheckStatus = 2
	PublicHttpRoutingDomainDnsCheckStatus_PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_OK       PublicHttpRoutingDomainDnsCheckStatus = 3
	PublicHttpRoutingDomainDnsCheckStatus_PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_FAILED   PublicHttpRoutingDomainDnsCheckStatus = 4
	PublicHttpRoutingDomainDnsCheckStatus_PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_IGNORED  PublicHttpRoutingDomainDnsCheckStatus = 5
)

var PublicHttpRoutingDomainDnsCheckStatus_name = map[int32]string{
	0: "PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_UNKNOWN",
	1: "PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_PENDING",
	2: "PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_CHECKING",
	3: "PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_OK",
	4: "PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_FAILED",
	5: "PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_IGNORED",
}

var PublicHttpRoutingDomainDnsCheckStatus_value = map[string]int32{
	"PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_UNKNOWN":  0,
	"PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_PENDING":  1,
	"PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_CHECKING": 2,
	"PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_OK":       3,
	"PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_FAILED":   4,
	"PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_IGNORED":  5,
}

func (x PublicHttpRoutingDomainDnsCheckStatus) String() string {
	return proto.EnumName(PublicHttpRoutingDomainDnsCheckStatus_name, int32(x))
}

func (PublicHttpRoutingDomainDnsCheckStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{6}
}

type PublicHttpRoutingDomainSslStatus int32

const (
	PublicHttpRoutingDomainSslStatus_PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_UNKNOWN             PublicHttpRoutingDomainSslStatus = 0
	PublicHttpRoutingDomainSslStatus_PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_INACTIVE            PublicHttpRoutingDomainSslStatus = 1
	PublicHttpRoutingDomainSslStatus_PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_BEING_INSTALLED     PublicHttpRoutingDomainSslStatus = 2
	PublicHttpRoutingDomainSslStatus_PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_WAITING_FOR_DNS     PublicHttpRoutingDomainSslStatus = 3
	PublicHttpRoutingDomainSslStatus_PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_ACTIVE              PublicHttpRoutingDomainSslStatus = 4
	PublicHttpRoutingDomainSslStatus_PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_INSTALLATION_FAILED PublicHttpRoutingDomainSslStatus = 5
)

var PublicHttpRoutingDomainSslStatus_name = map[int32]string{
	0: "PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_UNKNOWN",
	1: "PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_INACTIVE",
	2: "PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_BEING_INSTALLED",
	3: "PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_WAITING_FOR_DNS",
	4: "PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_ACTIVE",
	5: "PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_INSTALLATION_FAILED",
}

var PublicHttpRoutingDomainSslStatus_value = map[string]int32{
	"PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_UNKNOWN":             0,
	"PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_INACTIVE":            1,
	"PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_BEING_INSTALLED":     2,
	"PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_WAITING_FOR_DNS":     3,
	"PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_ACTIVE":              4,
	"PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_INSTALLATION_FAILED": 5,
}

func (x PublicHttpRoutingDomainSslStatus) String() string {
	return proto.EnumName(PublicHttpRoutingDomainSslStatus_name, int32(x))
}

func (PublicHttpRoutingDomainSslStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{7}
}

type ServicePortProtocol int32

const (
	ServicePortProtocol_SERVICE_PORT_PROTOCOL_UNKNOWN ServicePortProtocol = 0
	ServicePortProtocol_SERVICE_PORT_PROTOCOL_tcp     ServicePortProtocol = 1
	ServicePortProtocol_SERVICE_PORT_PROTOCOL_udp     ServicePortProtocol = 2
)

var ServicePortProtocol_name = map[int32]string{
	0: "SERVICE_PORT_PROTOCOL_UNKNOWN",
	1: "SERVICE_PORT_PROTOCOL_tcp",
	2: "SERVICE_PORT_PROTOCOL_udp",
}

var ServicePortProtocol_value = map[string]int32{
	"SERVICE_PORT_PROTOCOL_UNKNOWN": 0,
	"SERVICE_PORT_PROTOCOL_tcp":     1,
	"SERVICE_PORT_PROTOCOL_udp":     2,
}

func (x ServicePortProtocol) String() string {
	return proto.EnumName(ServicePortProtocol_name, int32(x))
}

func (ServicePortProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{8}
}

type ServicePortScheme int32

const (
	ServicePortScheme_SERVICE_PORT_SCHEME_UNKNOWN   ServicePortScheme = 0
	ServicePortScheme_SERVICE_PORT_SCHEME_tcp       ServicePortScheme = 1
	ServicePortScheme_SERVICE_PORT_SCHEME_udp       ServicePortScheme = 2
	ServicePortScheme_SERVICE_PORT_SCHEME_http      ServicePortScheme = 3
	ServicePortScheme_SERVICE_PORT_SCHEME_https     ServicePortScheme = 4
	ServicePortScheme_SERVICE_PORT_SCHEME_redis     ServicePortScheme = 5
	ServicePortScheme_SERVICE_PORT_SCHEME_rabbitmq  ServicePortScheme = 6
	ServicePortScheme_SERVICE_PORT_SCHEME_mysql     ServicePortScheme = 7
	ServicePortScheme_SERVICE_PORT_SCHEME_udpinflux ServicePortScheme = 8
)

var ServicePortScheme_name = map[int32]string{
	0: "SERVICE_PORT_SCHEME_UNKNOWN",
	1: "SERVICE_PORT_SCHEME_tcp",
	2: "SERVICE_PORT_SCHEME_udp",
	3: "SERVICE_PORT_SCHEME_http",
	4: "SERVICE_PORT_SCHEME_https",
	5: "SERVICE_PORT_SCHEME_redis",
	6: "SERVICE_PORT_SCHEME_rabbitmq",
	7: "SERVICE_PORT_SCHEME_mysql",
	8: "SERVICE_PORT_SCHEME_udpinflux",
}

var ServicePortScheme_value = map[string]int32{
	"SERVICE_PORT_SCHEME_UNKNOWN":   0,
	"SERVICE_PORT_SCHEME_tcp":       1,
	"SERVICE_PORT_SCHEME_udp":       2,
	"SERVICE_PORT_SCHEME_http":      3,
	"SERVICE_PORT_SCHEME_https":     4,
	"SERVICE_PORT_SCHEME_redis":     5,
	"SERVICE_PORT_SCHEME_rabbitmq":  6,
	"SERVICE_PORT_SCHEME_mysql":     7,
	"SERVICE_PORT_SCHEME_udpinflux": 8,
}

func (x ServicePortScheme) String() string {
	return proto.EnumName(ServicePortScheme_name, int32(x))
}

func (ServicePortScheme) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{9}
}

type ServiceStackConnectionStatus int32

const (
	ServiceStackConnectionStatus_SERVICE_STACK_CONNECTION_STATUS_UNKNOWN  ServiceStackConnectionStatus = 0
	ServiceStackConnectionStatus_SERVICE_STACK_CONNECTION_STATUS_CREATING ServiceStackConnectionStatus = 1
	ServiceStackConnectionStatus_SERVICE_STACK_CONNECTION_STATUS_ACTIVE   ServiceStackConnectionStatus = 2
	ServiceStackConnectionStatus_SERVICE_STACK_CONNECTION_STATUS_DELETING ServiceStackConnectionStatus = 3
)

var ServiceStackConnectionStatus_name = map[int32]string{
	0: "SERVICE_STACK_CONNECTION_STATUS_UNKNOWN",
	1: "SERVICE_STACK_CONNECTION_STATUS_CREATING",
	2: "SERVICE_STACK_CONNECTION_STATUS_ACTIVE",
	3: "SERVICE_STACK_CONNECTION_STATUS_DELETING",
}

var ServiceStackConnectionStatus_value = map[string]int32{
	"SERVICE_STACK_CONNECTION_STATUS_UNKNOWN":  0,
	"SERVICE_STACK_CONNECTION_STATUS_CREATING": 1,
	"SERVICE_STACK_CONNECTION_STATUS_ACTIVE":   2,
	"SERVICE_STACK_CONNECTION_STATUS_DELETING": 3,
}

func (x ServiceStackConnectionStatus) String() string {
	return proto.EnumName(ServiceStackConnectionStatus_name, int32(x))
}

func (ServiceStackConnectionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{10}
}

type ServiceStackInfoJsonObjectServiceStackTypeCategory int32

const (
	ServiceStackInfoJsonObjectServiceStackTypeCategory_SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_UNKNOWN          ServiceStackInfoJsonObjectServiceStackTypeCategory = 0
	ServiceStackInfoJsonObjectServiceStackTypeCategory_SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_CORE             ServiceStackInfoJsonObjectServiceStackTypeCategory = 1
	ServiceStackInfoJsonObjectServiceStackTypeCategory_SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_HTTP_L7_BALANCER ServiceStackInfoJsonObjectServiceStackTypeCategory = 2
	ServiceStackInfoJsonObjectServiceStackTypeCategory_SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_STANDARD         ServiceStackInfoJsonObjectServiceStackTypeCategory = 3
	ServiceStackInfoJsonObjectServiceStackTypeCategory_SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_USER             ServiceStackInfoJsonObjectServiceStackTypeCategory = 4
	ServiceStackInfoJsonObjectServiceStackTypeCategory_SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_SHARED_STORAGE   ServiceStackInfoJsonObjectServiceStackTypeCategory = 5
	ServiceStackInfoJsonObjectServiceStackTypeCategory_SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_OBJECT_STORAGE   ServiceStackInfoJsonObjectServiceStackTypeCategory = 6
)

var ServiceStackInfoJsonObjectServiceStackTypeCategory_name = map[int32]string{
	0: "SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_UNKNOWN",
	1: "SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_CORE",
	2: "SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_HTTP_L7_BALANCER",
	3: "SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_STANDARD",
	4: "SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_USER",
	5: "SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_SHARED_STORAGE",
	6: "SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_OBJECT_STORAGE",
}

var ServiceStackInfoJsonObjectServiceStackTypeCategory_value = map[string]int32{
	"SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_UNKNOWN":          0,
	"SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_CORE":             1,
	"SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_HTTP_L7_BALANCER": 2,
	"SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_STANDARD":         3,
	"SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_USER":             4,
	"SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_SHARED_STORAGE":   5,
	"SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_OBJECT_STORAGE":   6,
}

func (x ServiceStackInfoJsonObjectServiceStackTypeCategory) String() string {
	return proto.EnumName(ServiceStackInfoJsonObjectServiceStackTypeCategory_name, int32(x))
}

func (ServiceStackInfoJsonObjectServiceStackTypeCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{11}
}

type ServiceStackMode int32

const (
	ServiceStackMode_SERVICE_STACK_MODE_UNKNOWN ServiceStackMode = 0
	ServiceStackMode_SERVICE_STACK_MODE_HA      ServiceStackMode = 1
	ServiceStackMode_SERVICE_STACK_MODE_NON_HA  ServiceStackMode = 2
)

var ServiceStackMode_name = map[int32]string{
	0: "SERVICE_STACK_MODE_UNKNOWN",
	1: "SERVICE_STACK_MODE_HA",
	2: "SERVICE_STACK_MODE_NON_HA",
}

var ServiceStackMode_value = map[string]int32{
	"SERVICE_STACK_MODE_UNKNOWN": 0,
	"SERVICE_STACK_MODE_HA":      1,
	"SERVICE_STACK_MODE_NON_HA":  2,
}

func (x ServiceStackMode) String() string {
	return proto.EnumName(ServiceStackMode_name, int32(x))
}

func (ServiceStackMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{12}
}

type ServiceStackStatus int32

const (
	ServiceStackStatus_SERVICE_STACK_STATUS_UNKNOWN                  ServiceStackStatus = 0
	ServiceStackStatus_SERVICE_STACK_STATUS_NEW                      ServiceStackStatus = 1
	ServiceStackStatus_SERVICE_STACK_STATUS_CREATING                 ServiceStackStatus = 2
	ServiceStackStatus_SERVICE_STACK_STATUS_ACTIVE                   ServiceStackStatus = 3
	ServiceStackStatus_SERVICE_STACK_STATUS_STOPPING                 ServiceStackStatus = 4
	ServiceStackStatus_SERVICE_STACK_STATUS_STOPPED                  ServiceStackStatus = 5
	ServiceStackStatus_SERVICE_STACK_STATUS_STARTING                 ServiceStackStatus = 6
	ServiceStackStatus_SERVICE_STACK_STATUS_RESTARTING               ServiceStackStatus = 7
	ServiceStackStatus_SERVICE_STACK_STATUS_RELOADING                ServiceStackStatus = 8
	ServiceStackStatus_SERVICE_STACK_STATUS_DELETING                 ServiceStackStatus = 9
	ServiceStackStatus_SERVICE_STACK_STATUS_DELETED                  ServiceStackStatus = 10
	ServiceStackStatus_SERVICE_STACK_STATUS_FAILED                   ServiceStackStatus = 11
	ServiceStackStatus_SERVICE_STACK_STATUS_UPGRADE_FAILED           ServiceStackStatus = 12
	ServiceStackStatus_SERVICE_STACK_STATUS_UPGRADING                ServiceStackStatus = 13
	ServiceStackStatus_SERVICE_STACK_STATUS_READY_TO_DEPLOY          ServiceStackStatus = 14
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_DELETING         ServiceStackStatus = 15
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_FAILED           ServiceStackStatus = 16
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_REPAIRING        ServiceStackStatus = 17
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_CREATING         ServiceStackStatus = 18
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_CONTAINER_FAILED ServiceStackStatus = 19
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_MOVING_CONTAINER ServiceStackStatus = 20
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_STOPPING         ServiceStackStatus = 21
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_STOPPED          ServiceStackStatus = 22
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_STARTING         ServiceStackStatus = 23
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_RESTARTING       ServiceStackStatus = 24
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_RELOADING        ServiceStackStatus = 25
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_UPGRADING        ServiceStackStatus = 26
	ServiceStackStatus_SERVICE_STACK_STATUS_SERVICE_UPGRADE_FAILED   ServiceStackStatus = 27
)

var ServiceStackStatus_name = map[int32]string{
	0:  "SERVICE_STACK_STATUS_UNKNOWN",
	1:  "SERVICE_STACK_STATUS_NEW",
	2:  "SERVICE_STACK_STATUS_CREATING",
	3:  "SERVICE_STACK_STATUS_ACTIVE",
	4:  "SERVICE_STACK_STATUS_STOPPING",
	5:  "SERVICE_STACK_STATUS_STOPPED",
	6:  "SERVICE_STACK_STATUS_STARTING",
	7:  "SERVICE_STACK_STATUS_RESTARTING",
	8:  "SERVICE_STACK_STATUS_RELOADING",
	9:  "SERVICE_STACK_STATUS_DELETING",
	10: "SERVICE_STACK_STATUS_DELETED",
	11: "SERVICE_STACK_STATUS_FAILED",
	12: "SERVICE_STACK_STATUS_UPGRADE_FAILED",
	13: "SERVICE_STACK_STATUS_UPGRADING",
	14: "SERVICE_STACK_STATUS_READY_TO_DEPLOY",
	15: "SERVICE_STACK_STATUS_SERVICE_DELETING",
	16: "SERVICE_STACK_STATUS_SERVICE_FAILED",
	17: "SERVICE_STACK_STATUS_SERVICE_REPAIRING",
	18: "SERVICE_STACK_STATUS_SERVICE_CREATING",
	19: "SERVICE_STACK_STATUS_SERVICE_CONTAINER_FAILED",
	20: "SERVICE_STACK_STATUS_SERVICE_MOVING_CONTAINER",
	21: "SERVICE_STACK_STATUS_SERVICE_STOPPING",
	22: "SERVICE_STACK_STATUS_SERVICE_STOPPED",
	23: "SERVICE_STACK_STATUS_SERVICE_STARTING",
	24: "SERVICE_STACK_STATUS_SERVICE_RESTARTING",
	25: "SERVICE_STACK_STATUS_SERVICE_RELOADING",
	26: "SERVICE_STACK_STATUS_SERVICE_UPGRADING",
	27: "SERVICE_STACK_STATUS_SERVICE_UPGRADE_FAILED",
}

var ServiceStackStatus_value = map[string]int32{
	"SERVICE_STACK_STATUS_UNKNOWN":                  0,
	"SERVICE_STACK_STATUS_NEW":                      1,
	"SERVICE_STACK_STATUS_CREATING":                 2,
	"SERVICE_STACK_STATUS_ACTIVE":                   3,
	"SERVICE_STACK_STATUS_STOPPING":                 4,
	"SERVICE_STACK_STATUS_STOPPED":                  5,
	"SERVICE_STACK_STATUS_STARTING":                 6,
	"SERVICE_STACK_STATUS_RESTARTING":               7,
	"SERVICE_STACK_STATUS_RELOADING":                8,
	"SERVICE_STACK_STATUS_DELETING":                 9,
	"SERVICE_STACK_STATUS_DELETED":                  10,
	"SERVICE_STACK_STATUS_FAILED":                   11,
	"SERVICE_STACK_STATUS_UPGRADE_FAILED":           12,
	"SERVICE_STACK_STATUS_UPGRADING":                13,
	"SERVICE_STACK_STATUS_READY_TO_DEPLOY":          14,
	"SERVICE_STACK_STATUS_SERVICE_DELETING":         15,
	"SERVICE_STACK_STATUS_SERVICE_FAILED":           16,
	"SERVICE_STACK_STATUS_SERVICE_REPAIRING":        17,
	"SERVICE_STACK_STATUS_SERVICE_CREATING":         18,
	"SERVICE_STACK_STATUS_SERVICE_CONTAINER_FAILED": 19,
	"SERVICE_STACK_STATUS_SERVICE_MOVING_CONTAINER": 20,
	"SERVICE_STACK_STATUS_SERVICE_STOPPING":         21,
	"SERVICE_STACK_STATUS_SERVICE_STOPPED":          22,
	"SERVICE_STACK_STATUS_SERVICE_STARTING":         23,
	"SERVICE_STACK_STATUS_SERVICE_RESTARTING":       24,
	"SERVICE_STACK_STATUS_SERVICE_RELOADING":        25,
	"SERVICE_STACK_STATUS_SERVICE_UPGRADING":        26,
	"SERVICE_STACK_STATUS_SERVICE_UPGRADE_FAILED":   27,
}

func (x ServiceStackStatus) String() string {
	return proto.EnumName(ServiceStackStatus_name, int32(x))
}

func (ServiceStackStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{13}
}

type UserDataType int32

const (
	UserDataType_USER_DATA_TYPE_UNKNOWN    UserDataType = 0
	UserDataType_USER_DATA_TYPE_RESTRICTED UserDataType = 1
	UserDataType_USER_DATA_TYPE_COMMON     UserDataType = 2
	UserDataType_USER_DATA_TYPE_USER       UserDataType = 3
	UserDataType_USER_DATA_TYPE_INTERNAL   UserDataType = 4
)

var UserDataType_name = map[int32]string{
	0: "USER_DATA_TYPE_UNKNOWN",
	1: "USER_DATA_TYPE_RESTRICTED",
	2: "USER_DATA_TYPE_COMMON",
	3: "USER_DATA_TYPE_USER",
	4: "USER_DATA_TYPE_INTERNAL",
}

var UserDataType_value = map[string]int32{
	"USER_DATA_TYPE_UNKNOWN":    0,
	"USER_DATA_TYPE_RESTRICTED": 1,
	"USER_DATA_TYPE_COMMON":     2,
	"USER_DATA_TYPE_USER":       3,
	"USER_DATA_TYPE_INTERNAL":   4,
}

func (x UserDataType) String() string {
	return proto.EnumName(UserDataType_name, int32(x))
}

func (UserDataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{14}
}

type UserStatus int32

const (
	UserStatus_USER_STATUS_UNKNOWN UserStatus = 0
	UserStatus_USER_STATUS_ACTIVE  UserStatus = 1
	UserStatus_USER_STATUS_DELETED UserStatus = 2
)

var UserStatus_name = map[int32]string{
	0: "USER_STATUS_UNKNOWN",
	1: "USER_STATUS_ACTIVE",
	2: "USER_STATUS_DELETED",
}

var UserStatus_value = map[string]int32{
	"USER_STATUS_UNKNOWN": 0,
	"USER_STATUS_ACTIVE":  1,
	"USER_STATUS_DELETED": 2,
}

func (x UserStatus) String() string {
	return proto.EnumName(UserStatus_name, int32(x))
}

func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{15}
}

type Error struct {
	Code                 ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=zeropsApiProtocol.ErrorCode" json:"code,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() ErrorCode {
	if m != nil {
		return m.Code
	}
	return ErrorCode_NO_ERROR
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Timestamp struct {
	IsSet                bool     `protobuf:"varint,1,opt,name=isSet,proto3" json:"isSet,omitempty"`
	Seconds              int64    `protobuf:"varint,2,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos                int32    `protobuf:"varint,3,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{1}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetIsSet() bool {
	if m != nil {
		return m.IsSet
	}
	return false
}

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type GetProcessRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProcessRequest) Reset()         { *m = GetProcessRequest{} }
func (m *GetProcessRequest) String() string { return proto.CompactTextString(m) }
func (*GetProcessRequest) ProtoMessage()    {}
func (*GetProcessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{2}
}

func (m *GetProcessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProcessRequest.Unmarshal(m, b)
}
func (m *GetProcessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProcessRequest.Marshal(b, m, deterministic)
}
func (m *GetProcessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProcessRequest.Merge(m, src)
}
func (m *GetProcessRequest) XXX_Size() int {
	return xxx_messageInfo_GetProcessRequest.Size(m)
}
func (m *GetProcessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProcessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProcessRequest proto.InternalMessageInfo

func (m *GetProcessRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetProjectLogRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectLogRequest) Reset()         { *m = GetProjectLogRequest{} }
func (m *GetProjectLogRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectLogRequest) ProtoMessage()    {}
func (*GetProjectLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{3}
}

func (m *GetProjectLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectLogRequest.Unmarshal(m, b)
}
func (m *GetProjectLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectLogRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectLogRequest.Merge(m, src)
}
func (m *GetProjectLogRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectLogRequest.Size(m)
}
func (m *GetProjectLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectLogRequest proto.InternalMessageInfo

func (m *GetProjectLogRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetProjectsByNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectsByNameRequest) Reset()         { *m = GetProjectsByNameRequest{} }
func (m *GetProjectsByNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectsByNameRequest) ProtoMessage()    {}
func (*GetProjectsByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{4}
}

func (m *GetProjectsByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectsByNameRequest.Unmarshal(m, b)
}
func (m *GetProjectsByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectsByNameRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectsByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectsByNameRequest.Merge(m, src)
}
func (m *GetProjectsByNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectsByNameRequest.Size(m)
}
func (m *GetProjectsByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectsByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectsByNameRequest proto.InternalMessageInfo

func (m *GetProjectsByNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetServiceStackRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceStackRequest) Reset()         { *m = GetServiceStackRequest{} }
func (m *GetServiceStackRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceStackRequest) ProtoMessage()    {}
func (*GetServiceStackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{5}
}

func (m *GetServiceStackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceStackRequest.Unmarshal(m, b)
}
func (m *GetServiceStackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceStackRequest.Marshal(b, m, deterministic)
}
func (m *GetServiceStackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceStackRequest.Merge(m, src)
}
func (m *GetServiceStackRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceStackRequest.Size(m)
}
func (m *GetServiceStackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceStackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceStackRequest proto.InternalMessageInfo

func (m *GetServiceStackRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetServiceStackByNameRequest struct {
	ProjectId            string   `protobuf:"bytes,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceStackByNameRequest) Reset()         { *m = GetServiceStackByNameRequest{} }
func (m *GetServiceStackByNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceStackByNameRequest) ProtoMessage()    {}
func (*GetServiceStackByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{6}
}

func (m *GetServiceStackByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceStackByNameRequest.Unmarshal(m, b)
}
func (m *GetServiceStackByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceStackByNameRequest.Marshal(b, m, deterministic)
}
func (m *GetServiceStackByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceStackByNameRequest.Merge(m, src)
}
func (m *GetServiceStackByNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceStackByNameRequest.Size(m)
}
func (m *GetServiceStackByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceStackByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceStackByNameRequest proto.InternalMessageInfo

func (m *GetServiceStackByNameRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GetServiceStackByNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetUserInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserInfoRequest) Reset()         { *m = GetUserInfoRequest{} }
func (m *GetUserInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoRequest) ProtoMessage()    {}
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{7}
}

func (m *GetUserInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoRequest.Unmarshal(m, b)
}
func (m *GetUserInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetUserInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoRequest.Merge(m, src)
}
func (m *GetUserInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoRequest.Size(m)
}
func (m *GetUserInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoRequest proto.InternalMessageInfo

type PostAppVersionRequest struct {
	ServiceStackId       string   `protobuf:"bytes,1,opt,name=serviceStackId,proto3" json:"serviceStackId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostAppVersionRequest) Reset()         { *m = PostAppVersionRequest{} }
func (m *PostAppVersionRequest) String() string { return proto.CompactTextString(m) }
func (*PostAppVersionRequest) ProtoMessage()    {}
func (*PostAppVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{8}
}

func (m *PostAppVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostAppVersionRequest.Unmarshal(m, b)
}
func (m *PostAppVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostAppVersionRequest.Marshal(b, m, deterministic)
}
func (m *PostAppVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostAppVersionRequest.Merge(m, src)
}
func (m *PostAppVersionRequest) XXX_Size() int {
	return xxx_messageInfo_PostAppVersionRequest.Size(m)
}
func (m *PostAppVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostAppVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostAppVersionRequest proto.InternalMessageInfo

func (m *PostAppVersionRequest) GetServiceStackId() string {
	if m != nil {
		return m.ServiceStackId
	}
	return ""
}

type PostPublicHttpRoutingRequest struct {
	ProjectId            string                           `protobuf:"bytes,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	SslEnabled           bool                             `protobuf:"varint,2,opt,name=sslEnabled,proto3" json:"sslEnabled,omitempty"`
	Domains              []string                         `protobuf:"bytes,3,rep,name=domains,proto3" json:"domains,omitempty"`
	Locations            []*PublicHttpRoutingLocationPost `protobuf:"bytes,4,rep,name=locations,proto3" json:"locations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *PostPublicHttpRoutingRequest) Reset()         { *m = PostPublicHttpRoutingRequest{} }
func (m *PostPublicHttpRoutingRequest) String() string { return proto.CompactTextString(m) }
func (*PostPublicHttpRoutingRequest) ProtoMessage()    {}
func (*PostPublicHttpRoutingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{9}
}

func (m *PostPublicHttpRoutingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostPublicHttpRoutingRequest.Unmarshal(m, b)
}
func (m *PostPublicHttpRoutingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostPublicHttpRoutingRequest.Marshal(b, m, deterministic)
}
func (m *PostPublicHttpRoutingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostPublicHttpRoutingRequest.Merge(m, src)
}
func (m *PostPublicHttpRoutingRequest) XXX_Size() int {
	return xxx_messageInfo_PostPublicHttpRoutingRequest.Size(m)
}
func (m *PostPublicHttpRoutingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostPublicHttpRoutingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostPublicHttpRoutingRequest proto.InternalMessageInfo

func (m *PostPublicHttpRoutingRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *PostPublicHttpRoutingRequest) GetSslEnabled() bool {
	if m != nil {
		return m.SslEnabled
	}
	return false
}

func (m *PostPublicHttpRoutingRequest) GetDomains() []string {
	if m != nil {
		return m.Domains
	}
	return nil
}

func (m *PostPublicHttpRoutingRequest) GetLocations() []*PublicHttpRoutingLocationPost {
	if m != nil {
		return m.Locations
	}
	return nil
}

type PostVpnRequestRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientPublicKey      string   `protobuf:"bytes,2,opt,name=clientPublicKey,proto3" json:"clientPublicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostVpnRequestRequest) Reset()         { *m = PostVpnRequestRequest{} }
func (m *PostVpnRequestRequest) String() string { return proto.CompactTextString(m) }
func (*PostVpnRequestRequest) ProtoMessage()    {}
func (*PostVpnRequestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{10}
}

func (m *PostVpnRequestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostVpnRequestRequest.Unmarshal(m, b)
}
func (m *PostVpnRequestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostVpnRequestRequest.Marshal(b, m, deterministic)
}
func (m *PostVpnRequestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostVpnRequestRequest.Merge(m, src)
}
func (m *PostVpnRequestRequest) XXX_Size() int {
	return xxx_messageInfo_PostVpnRequestRequest.Size(m)
}
func (m *PostVpnRequestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostVpnRequestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostVpnRequestRequest proto.InternalMessageInfo

func (m *PostVpnRequestRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PostVpnRequestRequest) GetClientPublicKey() string {
	if m != nil {
		return m.ClientPublicKey
	}
	return ""
}

type PublicHttpRoutingLocationPost struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	ServiceStackId       string   `protobuf:"bytes,3,opt,name=serviceStackId,proto3" json:"serviceStackId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicHttpRoutingLocationPost) Reset()         { *m = PublicHttpRoutingLocationPost{} }
func (m *PublicHttpRoutingLocationPost) String() string { return proto.CompactTextString(m) }
func (*PublicHttpRoutingLocationPost) ProtoMessage()    {}
func (*PublicHttpRoutingLocationPost) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{11}
}

func (m *PublicHttpRoutingLocationPost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicHttpRoutingLocationPost.Unmarshal(m, b)
}
func (m *PublicHttpRoutingLocationPost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicHttpRoutingLocationPost.Marshal(b, m, deterministic)
}
func (m *PublicHttpRoutingLocationPost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicHttpRoutingLocationPost.Merge(m, src)
}
func (m *PublicHttpRoutingLocationPost) XXX_Size() int {
	return xxx_messageInfo_PublicHttpRoutingLocationPost.Size(m)
}
func (m *PublicHttpRoutingLocationPost) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicHttpRoutingLocationPost.DiscardUnknown(m)
}

var xxx_messageInfo_PublicHttpRoutingLocationPost proto.InternalMessageInfo

func (m *PublicHttpRoutingLocationPost) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *PublicHttpRoutingLocationPost) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *PublicHttpRoutingLocationPost) GetServiceStackId() string {
	if m != nil {
		return m.ServiceStackId
	}
	return ""
}

type PutAppVersionDeployRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TemporaryShutdown    bool     `protobuf:"varint,2,opt,name=temporaryShutdown,proto3" json:"temporaryShutdown,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutAppVersionDeployRequest) Reset()         { *m = PutAppVersionDeployRequest{} }
func (m *PutAppVersionDeployRequest) String() string { return proto.CompactTextString(m) }
func (*PutAppVersionDeployRequest) ProtoMessage()    {}
func (*PutAppVersionDeployRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{12}
}

func (m *PutAppVersionDeployRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutAppVersionDeployRequest.Unmarshal(m, b)
}
func (m *PutAppVersionDeployRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutAppVersionDeployRequest.Marshal(b, m, deterministic)
}
func (m *PutAppVersionDeployRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutAppVersionDeployRequest.Merge(m, src)
}
func (m *PutAppVersionDeployRequest) XXX_Size() int {
	return xxx_messageInfo_PutAppVersionDeployRequest.Size(m)
}
func (m *PutAppVersionDeployRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutAppVersionDeployRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutAppVersionDeployRequest proto.InternalMessageInfo

func (m *PutAppVersionDeployRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutAppVersionDeployRequest) GetTemporaryShutdown() bool {
	if m != nil {
		return m.TemporaryShutdown
	}
	return false
}

type GetProcessResponse struct {
	Error                *Error                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Output               *GetProcessResponseDto `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetProcessResponse) Reset()         { *m = GetProcessResponse{} }
func (m *GetProcessResponse) String() string { return proto.CompactTextString(m) }
func (*GetProcessResponse) ProtoMessage()    {}
func (*GetProcessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{13}
}

func (m *GetProcessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProcessResponse.Unmarshal(m, b)
}
func (m *GetProcessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProcessResponse.Marshal(b, m, deterministic)
}
func (m *GetProcessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProcessResponse.Merge(m, src)
}
func (m *GetProcessResponse) XXX_Size() int {
	return xxx_messageInfo_GetProcessResponse.Size(m)
}
func (m *GetProcessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProcessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProcessResponse proto.InternalMessageInfo

func (m *GetProcessResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetProcessResponse) GetOutput() *GetProcessResponseDto {
	if m != nil {
		return m.Output
	}
	return nil
}

type GetProcessResponseDto struct {
	Id                   string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId             string                         `protobuf:"bytes,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Project              *ProjectLightJsonObject        `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	ServiceStacks        []*ServiceStackLightJsonObject `protobuf:"bytes,4,rep,name=serviceStacks,proto3" json:"serviceStacks,omitempty"`
	Status               ProcessStatus                  `protobuf:"varint,5,opt,name=status,proto3,enum=zeropsApiProtocol.ProcessStatus" json:"status,omitempty"`
	CreatedByUser        *UserJsonObject                `protobuf:"bytes,6,opt,name=createdByUser,proto3" json:"createdByUser,omitempty"`
	CanceledByUser       *UserJsonObject                `protobuf:"bytes,7,opt,name=canceledByUser,proto3" json:"canceledByUser,omitempty"`
	ActionName           string                         `protobuf:"bytes,8,opt,name=actionName,proto3" json:"actionName,omitempty"`
	BlockedByProcessId   string                         `protobuf:"bytes,9,opt,name=blockedByProcessId,proto3" json:"blockedByProcessId,omitempty"`
	Created              *Timestamp                     `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate           *Timestamp                     `protobuf:"bytes,11,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	CreatedBySystem      bool                           `protobuf:"varint,12,opt,name=createdBySystem,proto3" json:"createdBySystem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *GetProcessResponseDto) Reset()         { *m = GetProcessResponseDto{} }
func (m *GetProcessResponseDto) String() string { return proto.CompactTextString(m) }
func (*GetProcessResponseDto) ProtoMessage()    {}
func (*GetProcessResponseDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{14}
}

func (m *GetProcessResponseDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProcessResponseDto.Unmarshal(m, b)
}
func (m *GetProcessResponseDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProcessResponseDto.Marshal(b, m, deterministic)
}
func (m *GetProcessResponseDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProcessResponseDto.Merge(m, src)
}
func (m *GetProcessResponseDto) XXX_Size() int {
	return xxx_messageInfo_GetProcessResponseDto.Size(m)
}
func (m *GetProcessResponseDto) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProcessResponseDto.DiscardUnknown(m)
}

var xxx_messageInfo_GetProcessResponseDto proto.InternalMessageInfo

func (m *GetProcessResponseDto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetProcessResponseDto) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *GetProcessResponseDto) GetProject() *ProjectLightJsonObject {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *GetProcessResponseDto) GetServiceStacks() []*ServiceStackLightJsonObject {
	if m != nil {
		return m.ServiceStacks
	}
	return nil
}

func (m *GetProcessResponseDto) GetStatus() ProcessStatus {
	if m != nil {
		return m.Status
	}
	return ProcessStatus_PROCESS_STATUS_UNKNOWN
}

func (m *GetProcessResponseDto) GetCreatedByUser() *UserJsonObject {
	if m != nil {
		return m.CreatedByUser
	}
	return nil
}

func (m *GetProcessResponseDto) GetCanceledByUser() *UserJsonObject {
	if m != nil {
		return m.CanceledByUser
	}
	return nil
}

func (m *GetProcessResponseDto) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *GetProcessResponseDto) GetBlockedByProcessId() string {
	if m != nil {
		return m.BlockedByProcessId
	}
	return ""
}

func (m *GetProcessResponseDto) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *GetProcessResponseDto) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *GetProcessResponseDto) GetCreatedBySystem() bool {
	if m != nil {
		return m.CreatedBySystem
	}
	return false
}

type GetProjectLogResponse struct {
	Error                *Error                    `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Output               *GetProjectLogResponseDto `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetProjectLogResponse) Reset()         { *m = GetProjectLogResponse{} }
func (m *GetProjectLogResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectLogResponse) ProtoMessage()    {}
func (*GetProjectLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{15}
}

func (m *GetProjectLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectLogResponse.Unmarshal(m, b)
}
func (m *GetProjectLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectLogResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectLogResponse.Merge(m, src)
}
func (m *GetProjectLogResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectLogResponse.Size(m)
}
func (m *GetProjectLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectLogResponse proto.InternalMessageInfo

func (m *GetProjectLogResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetProjectLogResponse) GetOutput() *GetProjectLogResponseDto {
	if m != nil {
		return m.Output
	}
	return nil
}

type GetProjectLogResponseDto struct {
	Url                  string     `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Signature            string     `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Expiry               *Timestamp `protobuf:"bytes,3,opt,name=expiry,proto3" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetProjectLogResponseDto) Reset()         { *m = GetProjectLogResponseDto{} }
func (m *GetProjectLogResponseDto) String() string { return proto.CompactTextString(m) }
func (*GetProjectLogResponseDto) ProtoMessage()    {}
func (*GetProjectLogResponseDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{16}
}

func (m *GetProjectLogResponseDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectLogResponseDto.Unmarshal(m, b)
}
func (m *GetProjectLogResponseDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectLogResponseDto.Marshal(b, m, deterministic)
}
func (m *GetProjectLogResponseDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectLogResponseDto.Merge(m, src)
}
func (m *GetProjectLogResponseDto) XXX_Size() int {
	return xxx_messageInfo_GetProjectLogResponseDto.Size(m)
}
func (m *GetProjectLogResponseDto) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectLogResponseDto.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectLogResponseDto proto.InternalMessageInfo

func (m *GetProjectLogResponseDto) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *GetProjectLogResponseDto) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *GetProjectLogResponseDto) GetExpiry() *Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

type GetProjectsByNameResponse struct {
	Error                *Error                        `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Output               *GetProjectsByNameResponseDto `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetProjectsByNameResponse) Reset()         { *m = GetProjectsByNameResponse{} }
func (m *GetProjectsByNameResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectsByNameResponse) ProtoMessage()    {}
func (*GetProjectsByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{17}
}

func (m *GetProjectsByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectsByNameResponse.Unmarshal(m, b)
}
func (m *GetProjectsByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectsByNameResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectsByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectsByNameResponse.Merge(m, src)
}
func (m *GetProjectsByNameResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectsByNameResponse.Size(m)
}
func (m *GetProjectsByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectsByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectsByNameResponse proto.InternalMessageInfo

func (m *GetProjectsByNameResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetProjectsByNameResponse) GetOutput() *GetProjectsByNameResponseDto {
	if m != nil {
		return m.Output
	}
	return nil
}

type GetProjectsByNameResponseDto struct {
	Projects             []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetProjectsByNameResponseDto) Reset()         { *m = GetProjectsByNameResponseDto{} }
func (m *GetProjectsByNameResponseDto) String() string { return proto.CompactTextString(m) }
func (*GetProjectsByNameResponseDto) ProtoMessage()    {}
func (*GetProjectsByNameResponseDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{18}
}

func (m *GetProjectsByNameResponseDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectsByNameResponseDto.Unmarshal(m, b)
}
func (m *GetProjectsByNameResponseDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectsByNameResponseDto.Marshal(b, m, deterministic)
}
func (m *GetProjectsByNameResponseDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectsByNameResponseDto.Merge(m, src)
}
func (m *GetProjectsByNameResponseDto) XXX_Size() int {
	return xxx_messageInfo_GetProjectsByNameResponseDto.Size(m)
}
func (m *GetProjectsByNameResponseDto) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectsByNameResponseDto.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectsByNameResponseDto proto.InternalMessageInfo

func (m *GetProjectsByNameResponseDto) GetProjects() []*Project {
	if m != nil {
		return m.Projects
	}
	return nil
}

type GetServiceStackResponse struct {
	Error                *Error                      `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Output               *GetServiceStackResponseDto `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetServiceStackResponse) Reset()         { *m = GetServiceStackResponse{} }
func (m *GetServiceStackResponse) String() string { return proto.CompactTextString(m) }
func (*GetServiceStackResponse) ProtoMessage()    {}
func (*GetServiceStackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{19}
}

func (m *GetServiceStackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceStackResponse.Unmarshal(m, b)
}
func (m *GetServiceStackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceStackResponse.Marshal(b, m, deterministic)
}
func (m *GetServiceStackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceStackResponse.Merge(m, src)
}
func (m *GetServiceStackResponse) XXX_Size() int {
	return xxx_messageInfo_GetServiceStackResponse.Size(m)
}
func (m *GetServiceStackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceStackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceStackResponse proto.InternalMessageInfo

func (m *GetServiceStackResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetServiceStackResponse) GetOutput() *GetServiceStackResponseDto {
	if m != nil {
		return m.Output
	}
	return nil
}

type GetServiceStackResponseDto struct {
	Id                                 string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status                             ServiceStackStatus                   `protobuf:"varint,2,opt,name=status,proto3,enum=zeropsApiProtocol.ServiceStackStatus" json:"status,omitempty"`
	Name                               string                               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ServiceStackTypeInfo               *ServiceStackInfoJsonObject          `protobuf:"bytes,4,opt,name=serviceStackTypeInfo,proto3" json:"serviceStackTypeInfo,omitempty"`
	ServiceStackTypeId                 string                               `protobuf:"bytes,5,opt,name=serviceStackTypeId,proto3" json:"serviceStackTypeId,omitempty"`
	ServiceStackTypeVersionId          string                               `protobuf:"bytes,6,opt,name=serviceStackTypeVersionId,proto3" json:"serviceStackTypeVersionId,omitempty"`
	IsSystem                           bool                                 `protobuf:"varint,7,opt,name=isSystem,proto3" json:"isSystem,omitempty"`
	Ports                              []*ServicePort                       `protobuf:"bytes,8,rep,name=ports,proto3" json:"ports,omitempty"`
	RequestedPorts                     *RequestedPortsJsonObject            `protobuf:"bytes,9,opt,name=requestedPorts,proto3" json:"requestedPorts,omitempty"`
	Created                            *Timestamp                           `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate                         *Timestamp                           `protobuf:"bytes,11,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	Mode                               ServiceStackMode                     `protobuf:"varint,12,opt,name=mode,proto3,enum=zeropsApiProtocol.ServiceStackMode" json:"mode,omitempty"`
	CustomPortsEnabled                 bool                                 `protobuf:"varint,13,opt,name=customPortsEnabled,proto3" json:"customPortsEnabled,omitempty"`
	SubdomainAccess                    bool                                 `protobuf:"varint,14,opt,name=subdomainAccess,proto3" json:"subdomainAccess,omitempty"`
	ReloadAvailable                    bool                                 `protobuf:"varint,15,opt,name=reloadAvailable,proto3" json:"reloadAvailable,omitempty"`
	VersionNumber                      string                               `protobuf:"bytes,16,opt,name=versionNumber,proto3" json:"versionNumber,omitempty"`
	Project                            *ProjectLight                        `protobuf:"bytes,17,opt,name=project,proto3" json:"project,omitempty"`
	ConnectedStacks                    []*ServiceStackConnectedServiceStack `protobuf:"bytes,18,rep,name=connectedStacks,proto3" json:"connectedStacks,omitempty"`
	ActiveAppVersion                   *AppVersionLight                     `protobuf:"bytes,19,opt,name=activeAppVersion,proto3" json:"activeAppVersion,omitempty"`
	HasUnsyncedUserDataRecord          bool                                 `protobuf:"varint,20,opt,name=hasUnsyncedUserDataRecord,proto3" json:"hasUnsyncedUserDataRecord,omitempty"`
	HasUnsyncedPublicHttpRoutingRecord bool                                 `protobuf:"varint,21,opt,name=hasUnsyncedPublicHttpRoutingRecord,proto3" json:"hasUnsyncedPublicHttpRoutingRecord,omitempty"`
	HasUnsyncedPublicPortRecord        bool                                 `protobuf:"varint,22,opt,name=hasUnsyncedPublicPortRecord,proto3" json:"hasUnsyncedPublicPortRecord,omitempty"`
	HasPublicAccess                    bool                                 `protobuf:"varint,23,opt,name=hasPublicAccess,proto3" json:"hasPublicAccess,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}                             `json:"-"`
	XXX_unrecognized                   []byte                               `json:"-"`
	XXX_sizecache                      int32                                `json:"-"`
}

func (m *GetServiceStackResponseDto) Reset()         { *m = GetServiceStackResponseDto{} }
func (m *GetServiceStackResponseDto) String() string { return proto.CompactTextString(m) }
func (*GetServiceStackResponseDto) ProtoMessage()    {}
func (*GetServiceStackResponseDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{20}
}

func (m *GetServiceStackResponseDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceStackResponseDto.Unmarshal(m, b)
}
func (m *GetServiceStackResponseDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceStackResponseDto.Marshal(b, m, deterministic)
}
func (m *GetServiceStackResponseDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceStackResponseDto.Merge(m, src)
}
func (m *GetServiceStackResponseDto) XXX_Size() int {
	return xxx_messageInfo_GetServiceStackResponseDto.Size(m)
}
func (m *GetServiceStackResponseDto) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceStackResponseDto.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceStackResponseDto proto.InternalMessageInfo

func (m *GetServiceStackResponseDto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetServiceStackResponseDto) GetStatus() ServiceStackStatus {
	if m != nil {
		return m.Status
	}
	return ServiceStackStatus_SERVICE_STACK_STATUS_UNKNOWN
}

func (m *GetServiceStackResponseDto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetServiceStackResponseDto) GetServiceStackTypeInfo() *ServiceStackInfoJsonObject {
	if m != nil {
		return m.ServiceStackTypeInfo
	}
	return nil
}

func (m *GetServiceStackResponseDto) GetServiceStackTypeId() string {
	if m != nil {
		return m.ServiceStackTypeId
	}
	return ""
}

func (m *GetServiceStackResponseDto) GetServiceStackTypeVersionId() string {
	if m != nil {
		return m.ServiceStackTypeVersionId
	}
	return ""
}

func (m *GetServiceStackResponseDto) GetIsSystem() bool {
	if m != nil {
		return m.IsSystem
	}
	return false
}

func (m *GetServiceStackResponseDto) GetPorts() []*ServicePort {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *GetServiceStackResponseDto) GetRequestedPorts() *RequestedPortsJsonObject {
	if m != nil {
		return m.RequestedPorts
	}
	return nil
}

func (m *GetServiceStackResponseDto) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *GetServiceStackResponseDto) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *GetServiceStackResponseDto) GetMode() ServiceStackMode {
	if m != nil {
		return m.Mode
	}
	return ServiceStackMode_SERVICE_STACK_MODE_UNKNOWN
}

func (m *GetServiceStackResponseDto) GetCustomPortsEnabled() bool {
	if m != nil {
		return m.CustomPortsEnabled
	}
	return false
}

func (m *GetServiceStackResponseDto) GetSubdomainAccess() bool {
	if m != nil {
		return m.SubdomainAccess
	}
	return false
}

func (m *GetServiceStackResponseDto) GetReloadAvailable() bool {
	if m != nil {
		return m.ReloadAvailable
	}
	return false
}

func (m *GetServiceStackResponseDto) GetVersionNumber() string {
	if m != nil {
		return m.VersionNumber
	}
	return ""
}

func (m *GetServiceStackResponseDto) GetProject() *ProjectLight {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *GetServiceStackResponseDto) GetConnectedStacks() []*ServiceStackConnectedServiceStack {
	if m != nil {
		return m.ConnectedStacks
	}
	return nil
}

func (m *GetServiceStackResponseDto) GetActiveAppVersion() *AppVersionLight {
	if m != nil {
		return m.ActiveAppVersion
	}
	return nil
}

func (m *GetServiceStackResponseDto) GetHasUnsyncedUserDataRecord() bool {
	if m != nil {
		return m.HasUnsyncedUserDataRecord
	}
	return false
}

func (m *GetServiceStackResponseDto) GetHasUnsyncedPublicHttpRoutingRecord() bool {
	if m != nil {
		return m.HasUnsyncedPublicHttpRoutingRecord
	}
	return false
}

func (m *GetServiceStackResponseDto) GetHasUnsyncedPublicPortRecord() bool {
	if m != nil {
		return m.HasUnsyncedPublicPortRecord
	}
	return false
}

func (m *GetServiceStackResponseDto) GetHasPublicAccess() bool {
	if m != nil {
		return m.HasPublicAccess
	}
	return false
}

type GetServiceStackByNameResponse struct {
	Error                *Error                            `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Output               *GetServiceStackByNameResponseDto `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *GetServiceStackByNameResponse) Reset()         { *m = GetServiceStackByNameResponse{} }
func (m *GetServiceStackByNameResponse) String() string { return proto.CompactTextString(m) }
func (*GetServiceStackByNameResponse) ProtoMessage()    {}
func (*GetServiceStackByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{21}
}

func (m *GetServiceStackByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceStackByNameResponse.Unmarshal(m, b)
}
func (m *GetServiceStackByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceStackByNameResponse.Marshal(b, m, deterministic)
}
func (m *GetServiceStackByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceStackByNameResponse.Merge(m, src)
}
func (m *GetServiceStackByNameResponse) XXX_Size() int {
	return xxx_messageInfo_GetServiceStackByNameResponse.Size(m)
}
func (m *GetServiceStackByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceStackByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceStackByNameResponse proto.InternalMessageInfo

func (m *GetServiceStackByNameResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetServiceStackByNameResponse) GetOutput() *GetServiceStackByNameResponseDto {
	if m != nil {
		return m.Output
	}
	return nil
}

type GetServiceStackByNameResponseDto struct {
	Id                                 string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status                             ServiceStackStatus                   `protobuf:"varint,2,opt,name=status,proto3,enum=zeropsApiProtocol.ServiceStackStatus" json:"status,omitempty"`
	Name                               string                               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ServiceStackTypeInfo               *ServiceStackInfoJsonObject          `protobuf:"bytes,4,opt,name=serviceStackTypeInfo,proto3" json:"serviceStackTypeInfo,omitempty"`
	ServiceStackTypeId                 string                               `protobuf:"bytes,5,opt,name=serviceStackTypeId,proto3" json:"serviceStackTypeId,omitempty"`
	ServiceStackTypeVersionId          string                               `protobuf:"bytes,6,opt,name=serviceStackTypeVersionId,proto3" json:"serviceStackTypeVersionId,omitempty"`
	IsSystem                           bool                                 `protobuf:"varint,7,opt,name=isSystem,proto3" json:"isSystem,omitempty"`
	Ports                              []*ServicePort                       `protobuf:"bytes,8,rep,name=ports,proto3" json:"ports,omitempty"`
	RequestedPorts                     *RequestedPortsJsonObject            `protobuf:"bytes,9,opt,name=requestedPorts,proto3" json:"requestedPorts,omitempty"`
	Created                            *Timestamp                           `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate                         *Timestamp                           `protobuf:"bytes,11,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	Mode                               ServiceStackMode                     `protobuf:"varint,12,opt,name=mode,proto3,enum=zeropsApiProtocol.ServiceStackMode" json:"mode,omitempty"`
	CustomPortsEnabled                 bool                                 `protobuf:"varint,13,opt,name=customPortsEnabled,proto3" json:"customPortsEnabled,omitempty"`
	SubdomainAccess                    bool                                 `protobuf:"varint,14,opt,name=subdomainAccess,proto3" json:"subdomainAccess,omitempty"`
	ReloadAvailable                    bool                                 `protobuf:"varint,15,opt,name=reloadAvailable,proto3" json:"reloadAvailable,omitempty"`
	VersionNumber                      string                               `protobuf:"bytes,16,opt,name=versionNumber,proto3" json:"versionNumber,omitempty"`
	Project                            *ProjectLight                        `protobuf:"bytes,17,opt,name=project,proto3" json:"project,omitempty"`
	ConnectedStacks                    []*ServiceStackConnectedServiceStack `protobuf:"bytes,18,rep,name=connectedStacks,proto3" json:"connectedStacks,omitempty"`
	ActiveAppVersion                   *AppVersionLight                     `protobuf:"bytes,19,opt,name=activeAppVersion,proto3" json:"activeAppVersion,omitempty"`
	HasUnsyncedUserDataRecord          bool                                 `protobuf:"varint,20,opt,name=hasUnsyncedUserDataRecord,proto3" json:"hasUnsyncedUserDataRecord,omitempty"`
	HasUnsyncedPublicHttpRoutingRecord bool                                 `protobuf:"varint,21,opt,name=hasUnsyncedPublicHttpRoutingRecord,proto3" json:"hasUnsyncedPublicHttpRoutingRecord,omitempty"`
	HasUnsyncedPublicPortRecord        bool                                 `protobuf:"varint,22,opt,name=hasUnsyncedPublicPortRecord,proto3" json:"hasUnsyncedPublicPortRecord,omitempty"`
	HasPublicAccess                    bool                                 `protobuf:"varint,23,opt,name=hasPublicAccess,proto3" json:"hasPublicAccess,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}                             `json:"-"`
	XXX_unrecognized                   []byte                               `json:"-"`
	XXX_sizecache                      int32                                `json:"-"`
}

func (m *GetServiceStackByNameResponseDto) Reset()         { *m = GetServiceStackByNameResponseDto{} }
func (m *GetServiceStackByNameResponseDto) String() string { return proto.CompactTextString(m) }
func (*GetServiceStackByNameResponseDto) ProtoMessage()    {}
func (*GetServiceStackByNameResponseDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{22}
}

func (m *GetServiceStackByNameResponseDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceStackByNameResponseDto.Unmarshal(m, b)
}
func (m *GetServiceStackByNameResponseDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceStackByNameResponseDto.Marshal(b, m, deterministic)
}
func (m *GetServiceStackByNameResponseDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceStackByNameResponseDto.Merge(m, src)
}
func (m *GetServiceStackByNameResponseDto) XXX_Size() int {
	return xxx_messageInfo_GetServiceStackByNameResponseDto.Size(m)
}
func (m *GetServiceStackByNameResponseDto) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceStackByNameResponseDto.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceStackByNameResponseDto proto.InternalMessageInfo

func (m *GetServiceStackByNameResponseDto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetServiceStackByNameResponseDto) GetStatus() ServiceStackStatus {
	if m != nil {
		return m.Status
	}
	return ServiceStackStatus_SERVICE_STACK_STATUS_UNKNOWN
}

func (m *GetServiceStackByNameResponseDto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetServiceStackByNameResponseDto) GetServiceStackTypeInfo() *ServiceStackInfoJsonObject {
	if m != nil {
		return m.ServiceStackTypeInfo
	}
	return nil
}

func (m *GetServiceStackByNameResponseDto) GetServiceStackTypeId() string {
	if m != nil {
		return m.ServiceStackTypeId
	}
	return ""
}

func (m *GetServiceStackByNameResponseDto) GetServiceStackTypeVersionId() string {
	if m != nil {
		return m.ServiceStackTypeVersionId
	}
	return ""
}

func (m *GetServiceStackByNameResponseDto) GetIsSystem() bool {
	if m != nil {
		return m.IsSystem
	}
	return false
}

func (m *GetServiceStackByNameResponseDto) GetPorts() []*ServicePort {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *GetServiceStackByNameResponseDto) GetRequestedPorts() *RequestedPortsJsonObject {
	if m != nil {
		return m.RequestedPorts
	}
	return nil
}

func (m *GetServiceStackByNameResponseDto) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *GetServiceStackByNameResponseDto) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *GetServiceStackByNameResponseDto) GetMode() ServiceStackMode {
	if m != nil {
		return m.Mode
	}
	return ServiceStackMode_SERVICE_STACK_MODE_UNKNOWN
}

func (m *GetServiceStackByNameResponseDto) GetCustomPortsEnabled() bool {
	if m != nil {
		return m.CustomPortsEnabled
	}
	return false
}

func (m *GetServiceStackByNameResponseDto) GetSubdomainAccess() bool {
	if m != nil {
		return m.SubdomainAccess
	}
	return false
}

func (m *GetServiceStackByNameResponseDto) GetReloadAvailable() bool {
	if m != nil {
		return m.ReloadAvailable
	}
	return false
}

func (m *GetServiceStackByNameResponseDto) GetVersionNumber() string {
	if m != nil {
		return m.VersionNumber
	}
	return ""
}

func (m *GetServiceStackByNameResponseDto) GetProject() *ProjectLight {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *GetServiceStackByNameResponseDto) GetConnectedStacks() []*ServiceStackConnectedServiceStack {
	if m != nil {
		return m.ConnectedStacks
	}
	return nil
}

func (m *GetServiceStackByNameResponseDto) GetActiveAppVersion() *AppVersionLight {
	if m != nil {
		return m.ActiveAppVersion
	}
	return nil
}

func (m *GetServiceStackByNameResponseDto) GetHasUnsyncedUserDataRecord() bool {
	if m != nil {
		return m.HasUnsyncedUserDataRecord
	}
	return false
}

func (m *GetServiceStackByNameResponseDto) GetHasUnsyncedPublicHttpRoutingRecord() bool {
	if m != nil {
		return m.HasUnsyncedPublicHttpRoutingRecord
	}
	return false
}

func (m *GetServiceStackByNameResponseDto) GetHasUnsyncedPublicPortRecord() bool {
	if m != nil {
		return m.HasUnsyncedPublicPortRecord
	}
	return false
}

func (m *GetServiceStackByNameResponseDto) GetHasPublicAccess() bool {
	if m != nil {
		return m.HasPublicAccess
	}
	return false
}

type GetUserInfoResponse struct {
	Error                *Error                  `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Output               *GetUserInfoResponseDto `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetUserInfoResponse) Reset()         { *m = GetUserInfoResponse{} }
func (m *GetUserInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoResponse) ProtoMessage()    {}
func (*GetUserInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{23}
}

func (m *GetUserInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoResponse.Unmarshal(m, b)
}
func (m *GetUserInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetUserInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoResponse.Merge(m, src)
}
func (m *GetUserInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoResponse.Size(m)
}
func (m *GetUserInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoResponse proto.InternalMessageInfo

func (m *GetUserInfoResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetUserInfoResponse) GetOutput() *GetUserInfoResponseDto {
	if m != nil {
		return m.Output
	}
	return nil
}

type GetUserInfoResponseDto struct {
	Id                   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string        `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FullName             string        `protobuf:"bytes,3,opt,name=fullName,proto3" json:"fullName,omitempty"`
	FirstName            string        `protobuf:"bytes,4,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string        `protobuf:"bytes,5,opt,name=lastName,proto3" json:"lastName,omitempty"`
	CountryCallingCode   int32         `protobuf:"varint,6,opt,name=countryCallingCode,proto3" json:"countryCallingCode,omitempty"`
	PhoneNumber          int32         `protobuf:"varint,7,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Language             *Language     `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
	Created              *Timestamp    `protobuf:"bytes,9,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate           *Timestamp    `protobuf:"bytes,10,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	Status               UserStatus    `protobuf:"varint,11,opt,name=status,proto3,enum=zeropsApiProtocol.UserStatus" json:"status,omitempty"`
	ClientUserList       []*ClientUser `protobuf:"bytes,12,rep,name=clientUserList,proto3" json:"clientUserList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetUserInfoResponseDto) Reset()         { *m = GetUserInfoResponseDto{} }
func (m *GetUserInfoResponseDto) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoResponseDto) ProtoMessage()    {}
func (*GetUserInfoResponseDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{24}
}

func (m *GetUserInfoResponseDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoResponseDto.Unmarshal(m, b)
}
func (m *GetUserInfoResponseDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoResponseDto.Marshal(b, m, deterministic)
}
func (m *GetUserInfoResponseDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoResponseDto.Merge(m, src)
}
func (m *GetUserInfoResponseDto) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoResponseDto.Size(m)
}
func (m *GetUserInfoResponseDto) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoResponseDto.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoResponseDto proto.InternalMessageInfo

func (m *GetUserInfoResponseDto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetUserInfoResponseDto) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetUserInfoResponseDto) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *GetUserInfoResponseDto) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *GetUserInfoResponseDto) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *GetUserInfoResponseDto) GetCountryCallingCode() int32 {
	if m != nil {
		return m.CountryCallingCode
	}
	return 0
}

func (m *GetUserInfoResponseDto) GetPhoneNumber() int32 {
	if m != nil {
		return m.PhoneNumber
	}
	return 0
}

func (m *GetUserInfoResponseDto) GetLanguage() *Language {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *GetUserInfoResponseDto) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *GetUserInfoResponseDto) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *GetUserInfoResponseDto) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_USER_STATUS_UNKNOWN
}

func (m *GetUserInfoResponseDto) GetClientUserList() []*ClientUser {
	if m != nil {
		return m.ClientUserList
	}
	return nil
}

type PostAppVersionResponse struct {
	Error                *Error                     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Output               *PostAppVersionResponseDto `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *PostAppVersionResponse) Reset()         { *m = PostAppVersionResponse{} }
func (m *PostAppVersionResponse) String() string { return proto.CompactTextString(m) }
func (*PostAppVersionResponse) ProtoMessage()    {}
func (*PostAppVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{25}
}

func (m *PostAppVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostAppVersionResponse.Unmarshal(m, b)
}
func (m *PostAppVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostAppVersionResponse.Marshal(b, m, deterministic)
}
func (m *PostAppVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostAppVersionResponse.Merge(m, src)
}
func (m *PostAppVersionResponse) XXX_Size() int {
	return xxx_messageInfo_PostAppVersionResponse.Size(m)
}
func (m *PostAppVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostAppVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostAppVersionResponse proto.InternalMessageInfo

func (m *PostAppVersionResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PostAppVersionResponse) GetOutput() *PostAppVersionResponseDto {
	if m != nil {
		return m.Output
	}
	return nil
}

type PostAppVersionResponseDto struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId             string                `protobuf:"bytes,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ProjectId            string                `protobuf:"bytes,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceStackId       string                `protobuf:"bytes,4,opt,name=serviceStackId,proto3" json:"serviceStackId,omitempty"`
	Sequence             int32                 `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Status               AppVersionStatus      `protobuf:"varint,6,opt,name=status,proto3,enum=zeropsApiProtocol.AppVersionStatus" json:"status,omitempty"`
	UserDataList         []*AppVersionUserData `protobuf:"bytes,7,rep,name=userDataList,proto3" json:"userDataList,omitempty"`
	Created              *Timestamp            `protobuf:"bytes,8,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate           *Timestamp            `protobuf:"bytes,9,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	UploadUrl            string                `protobuf:"bytes,10,opt,name=uploadUrl,proto3" json:"uploadUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PostAppVersionResponseDto) Reset()         { *m = PostAppVersionResponseDto{} }
func (m *PostAppVersionResponseDto) String() string { return proto.CompactTextString(m) }
func (*PostAppVersionResponseDto) ProtoMessage()    {}
func (*PostAppVersionResponseDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{26}
}

func (m *PostAppVersionResponseDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostAppVersionResponseDto.Unmarshal(m, b)
}
func (m *PostAppVersionResponseDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostAppVersionResponseDto.Marshal(b, m, deterministic)
}
func (m *PostAppVersionResponseDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostAppVersionResponseDto.Merge(m, src)
}
func (m *PostAppVersionResponseDto) XXX_Size() int {
	return xxx_messageInfo_PostAppVersionResponseDto.Size(m)
}
func (m *PostAppVersionResponseDto) XXX_DiscardUnknown() {
	xxx_messageInfo_PostAppVersionResponseDto.DiscardUnknown(m)
}

var xxx_messageInfo_PostAppVersionResponseDto proto.InternalMessageInfo

func (m *PostAppVersionResponseDto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PostAppVersionResponseDto) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *PostAppVersionResponseDto) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *PostAppVersionResponseDto) GetServiceStackId() string {
	if m != nil {
		return m.ServiceStackId
	}
	return ""
}

func (m *PostAppVersionResponseDto) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *PostAppVersionResponseDto) GetStatus() AppVersionStatus {
	if m != nil {
		return m.Status
	}
	return AppVersionStatus_APP_VERSION_STATUS_UNKNOWN
}

func (m *PostAppVersionResponseDto) GetUserDataList() []*AppVersionUserData {
	if m != nil {
		return m.UserDataList
	}
	return nil
}

func (m *PostAppVersionResponseDto) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *PostAppVersionResponseDto) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *PostAppVersionResponseDto) GetUploadUrl() string {
	if m != nil {
		return m.UploadUrl
	}
	return ""
}

type PostPublicHttpRoutingResponse struct {
	Error                *Error                            `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Output               *PostPublicHttpRoutingResponseDto `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *PostPublicHttpRoutingResponse) Reset()         { *m = PostPublicHttpRoutingResponse{} }
func (m *PostPublicHttpRoutingResponse) String() string { return proto.CompactTextString(m) }
func (*PostPublicHttpRoutingResponse) ProtoMessage()    {}
func (*PostPublicHttpRoutingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{27}
}

func (m *PostPublicHttpRoutingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostPublicHttpRoutingResponse.Unmarshal(m, b)
}
func (m *PostPublicHttpRoutingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostPublicHttpRoutingResponse.Marshal(b, m, deterministic)
}
func (m *PostPublicHttpRoutingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostPublicHttpRoutingResponse.Merge(m, src)
}
func (m *PostPublicHttpRoutingResponse) XXX_Size() int {
	return xxx_messageInfo_PostPublicHttpRoutingResponse.Size(m)
}
func (m *PostPublicHttpRoutingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostPublicHttpRoutingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostPublicHttpRoutingResponse proto.InternalMessageInfo

func (m *PostPublicHttpRoutingResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PostPublicHttpRoutingResponse) GetOutput() *PostPublicHttpRoutingResponseDto {
	if m != nil {
		return m.Output
	}
	return nil
}

type PostPublicHttpRoutingResponseDto struct {
	Id                   string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId             string                       `protobuf:"bytes,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ProjectId            string                       `protobuf:"bytes,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	SslEnabled           bool                         `protobuf:"varint,4,opt,name=sslEnabled,proto3" json:"sslEnabled,omitempty"`
	Domains              []*PublicHttpRoutingDomain   `protobuf:"bytes,5,rep,name=domains,proto3" json:"domains,omitempty"`
	Locations            []*PublicHttpRoutingLocation `protobuf:"bytes,6,rep,name=locations,proto3" json:"locations,omitempty"`
	Created              *Timestamp                   `protobuf:"bytes,7,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate           *Timestamp                   `protobuf:"bytes,8,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	IsSynced             bool                         `protobuf:"varint,9,opt,name=isSynced,proto3" json:"isSynced,omitempty"`
	IsDeleted            bool                         `protobuf:"varint,10,opt,name=isDeleted,proto3" json:"isDeleted,omitempty"`
	IsEditable           bool                         `protobuf:"varint,11,opt,name=isEditable,proto3" json:"isEditable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *PostPublicHttpRoutingResponseDto) Reset()         { *m = PostPublicHttpRoutingResponseDto{} }
func (m *PostPublicHttpRoutingResponseDto) String() string { return proto.CompactTextString(m) }
func (*PostPublicHttpRoutingResponseDto) ProtoMessage()    {}
func (*PostPublicHttpRoutingResponseDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{28}
}

func (m *PostPublicHttpRoutingResponseDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostPublicHttpRoutingResponseDto.Unmarshal(m, b)
}
func (m *PostPublicHttpRoutingResponseDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostPublicHttpRoutingResponseDto.Marshal(b, m, deterministic)
}
func (m *PostPublicHttpRoutingResponseDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostPublicHttpRoutingResponseDto.Merge(m, src)
}
func (m *PostPublicHttpRoutingResponseDto) XXX_Size() int {
	return xxx_messageInfo_PostPublicHttpRoutingResponseDto.Size(m)
}
func (m *PostPublicHttpRoutingResponseDto) XXX_DiscardUnknown() {
	xxx_messageInfo_PostPublicHttpRoutingResponseDto.DiscardUnknown(m)
}

var xxx_messageInfo_PostPublicHttpRoutingResponseDto proto.InternalMessageInfo

func (m *PostPublicHttpRoutingResponseDto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PostPublicHttpRoutingResponseDto) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *PostPublicHttpRoutingResponseDto) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *PostPublicHttpRoutingResponseDto) GetSslEnabled() bool {
	if m != nil {
		return m.SslEnabled
	}
	return false
}

func (m *PostPublicHttpRoutingResponseDto) GetDomains() []*PublicHttpRoutingDomain {
	if m != nil {
		return m.Domains
	}
	return nil
}

func (m *PostPublicHttpRoutingResponseDto) GetLocations() []*PublicHttpRoutingLocation {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *PostPublicHttpRoutingResponseDto) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *PostPublicHttpRoutingResponseDto) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *PostPublicHttpRoutingResponseDto) GetIsSynced() bool {
	if m != nil {
		return m.IsSynced
	}
	return false
}

func (m *PostPublicHttpRoutingResponseDto) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *PostPublicHttpRoutingResponseDto) GetIsEditable() bool {
	if m != nil {
		return m.IsEditable
	}
	return false
}

type PostVpnRequestResponse struct {
	Error                *Error                     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Output               *PostVpnRequestResponseDto `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *PostVpnRequestResponse) Reset()         { *m = PostVpnRequestResponse{} }
func (m *PostVpnRequestResponse) String() string { return proto.CompactTextString(m) }
func (*PostVpnRequestResponse) ProtoMessage()    {}
func (*PostVpnRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{29}
}

func (m *PostVpnRequestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostVpnRequestResponse.Unmarshal(m, b)
}
func (m *PostVpnRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostVpnRequestResponse.Marshal(b, m, deterministic)
}
func (m *PostVpnRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostVpnRequestResponse.Merge(m, src)
}
func (m *PostVpnRequestResponse) XXX_Size() int {
	return xxx_messageInfo_PostVpnRequestResponse.Size(m)
}
func (m *PostVpnRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostVpnRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostVpnRequestResponse proto.InternalMessageInfo

func (m *PostVpnRequestResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PostVpnRequestResponse) GetOutput() *PostVpnRequestResponseDto {
	if m != nil {
		return m.Output
	}
	return nil
}

type PostVpnRequestResponseDto struct {
	Signature            string     `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Expiry               *Timestamp `protobuf:"bytes,2,opt,name=expiry,proto3" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PostVpnRequestResponseDto) Reset()         { *m = PostVpnRequestResponseDto{} }
func (m *PostVpnRequestResponseDto) String() string { return proto.CompactTextString(m) }
func (*PostVpnRequestResponseDto) ProtoMessage()    {}
func (*PostVpnRequestResponseDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{30}
}

func (m *PostVpnRequestResponseDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostVpnRequestResponseDto.Unmarshal(m, b)
}
func (m *PostVpnRequestResponseDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostVpnRequestResponseDto.Marshal(b, m, deterministic)
}
func (m *PostVpnRequestResponseDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostVpnRequestResponseDto.Merge(m, src)
}
func (m *PostVpnRequestResponseDto) XXX_Size() int {
	return xxx_messageInfo_PostVpnRequestResponseDto.Size(m)
}
func (m *PostVpnRequestResponseDto) XXX_DiscardUnknown() {
	xxx_messageInfo_PostVpnRequestResponseDto.DiscardUnknown(m)
}

var xxx_messageInfo_PostVpnRequestResponseDto proto.InternalMessageInfo

func (m *PostVpnRequestResponseDto) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *PostVpnRequestResponseDto) GetExpiry() *Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

type PutAppVersionDeployResponse struct {
	Error                *Error                          `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Output               *PutAppVersionDeployResponseDto `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *PutAppVersionDeployResponse) Reset()         { *m = PutAppVersionDeployResponse{} }
func (m *PutAppVersionDeployResponse) String() string { return proto.CompactTextString(m) }
func (*PutAppVersionDeployResponse) ProtoMessage()    {}
func (*PutAppVersionDeployResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{31}
}

func (m *PutAppVersionDeployResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutAppVersionDeployResponse.Unmarshal(m, b)
}
func (m *PutAppVersionDeployResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutAppVersionDeployResponse.Marshal(b, m, deterministic)
}
func (m *PutAppVersionDeployResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutAppVersionDeployResponse.Merge(m, src)
}
func (m *PutAppVersionDeployResponse) XXX_Size() int {
	return xxx_messageInfo_PutAppVersionDeployResponse.Size(m)
}
func (m *PutAppVersionDeployResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutAppVersionDeployResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutAppVersionDeployResponse proto.InternalMessageInfo

func (m *PutAppVersionDeployResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PutAppVersionDeployResponse) GetOutput() *PutAppVersionDeployResponseDto {
	if m != nil {
		return m.Output
	}
	return nil
}

type PutAppVersionDeployResponseDto struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutAppVersionDeployResponseDto) Reset()         { *m = PutAppVersionDeployResponseDto{} }
func (m *PutAppVersionDeployResponseDto) String() string { return proto.CompactTextString(m) }
func (*PutAppVersionDeployResponseDto) ProtoMessage()    {}
func (*PutAppVersionDeployResponseDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{32}
}

func (m *PutAppVersionDeployResponseDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutAppVersionDeployResponseDto.Unmarshal(m, b)
}
func (m *PutAppVersionDeployResponseDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutAppVersionDeployResponseDto.Marshal(b, m, deterministic)
}
func (m *PutAppVersionDeployResponseDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutAppVersionDeployResponseDto.Merge(m, src)
}
func (m *PutAppVersionDeployResponseDto) XXX_Size() int {
	return xxx_messageInfo_PutAppVersionDeployResponseDto.Size(m)
}
func (m *PutAppVersionDeployResponseDto) XXX_DiscardUnknown() {
	xxx_messageInfo_PutAppVersionDeployResponseDto.DiscardUnknown(m)
}

var xxx_messageInfo_PutAppVersionDeployResponseDto proto.InternalMessageInfo

func (m *PutAppVersionDeployResponseDto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AppVersionLight struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               AppVersionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=zeropsApiProtocol.AppVersionStatus" json:"status,omitempty"`
	Created              *Timestamp       `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate           *Timestamp       `protobuf:"bytes,4,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AppVersionLight) Reset()         { *m = AppVersionLight{} }
func (m *AppVersionLight) String() string { return proto.CompactTextString(m) }
func (*AppVersionLight) ProtoMessage()    {}
func (*AppVersionLight) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{33}
}

func (m *AppVersionLight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppVersionLight.Unmarshal(m, b)
}
func (m *AppVersionLight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppVersionLight.Marshal(b, m, deterministic)
}
func (m *AppVersionLight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppVersionLight.Merge(m, src)
}
func (m *AppVersionLight) XXX_Size() int {
	return xxx_messageInfo_AppVersionLight.Size(m)
}
func (m *AppVersionLight) XXX_DiscardUnknown() {
	xxx_messageInfo_AppVersionLight.DiscardUnknown(m)
}

var xxx_messageInfo_AppVersionLight proto.InternalMessageInfo

func (m *AppVersionLight) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppVersionLight) GetStatus() AppVersionStatus {
	if m != nil {
		return m.Status
	}
	return AppVersionStatus_APP_VERSION_STATUS_UNKNOWN
}

func (m *AppVersionLight) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *AppVersionLight) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

type AppVersionUserData struct {
	Key                  string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Content              string       `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Type                 UserDataType `protobuf:"varint,3,opt,name=type,proto3,enum=zeropsApiProtocol.UserDataType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AppVersionUserData) Reset()         { *m = AppVersionUserData{} }
func (m *AppVersionUserData) String() string { return proto.CompactTextString(m) }
func (*AppVersionUserData) ProtoMessage()    {}
func (*AppVersionUserData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{34}
}

func (m *AppVersionUserData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppVersionUserData.Unmarshal(m, b)
}
func (m *AppVersionUserData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppVersionUserData.Marshal(b, m, deterministic)
}
func (m *AppVersionUserData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppVersionUserData.Merge(m, src)
}
func (m *AppVersionUserData) XXX_Size() int {
	return xxx_messageInfo_AppVersionUserData.Size(m)
}
func (m *AppVersionUserData) XXX_DiscardUnknown() {
	xxx_messageInfo_AppVersionUserData.DiscardUnknown(m)
}

var xxx_messageInfo_AppVersionUserData proto.InternalMessageInfo

func (m *AppVersionUserData) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AppVersionUserData) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *AppVersionUserData) GetType() UserDataType {
	if m != nil {
		return m.Type
	}
	return UserDataType_USER_DATA_TYPE_UNKNOWN
}

type ClientLight struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyName          string   `protobuf:"bytes,2,opt,name=companyName,proto3" json:"companyName,omitempty"`
	CompanyNumber        string   `protobuf:"bytes,3,opt,name=companyNumber,proto3" json:"companyNumber,omitempty"`
	VatNumber            string   `protobuf:"bytes,4,opt,name=vatNumber,proto3" json:"vatNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientLight) Reset()         { *m = ClientLight{} }
func (m *ClientLight) String() string { return proto.CompactTextString(m) }
func (*ClientLight) ProtoMessage()    {}
func (*ClientLight) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{35}
}

func (m *ClientLight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLight.Unmarshal(m, b)
}
func (m *ClientLight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLight.Marshal(b, m, deterministic)
}
func (m *ClientLight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLight.Merge(m, src)
}
func (m *ClientLight) XXX_Size() int {
	return xxx_messageInfo_ClientLight.Size(m)
}
func (m *ClientLight) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLight.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLight proto.InternalMessageInfo

func (m *ClientLight) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientLight) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *ClientLight) GetCompanyNumber() string {
	if m != nil {
		return m.CompanyNumber
	}
	return ""
}

func (m *ClientLight) GetVatNumber() string {
	if m != nil {
		return m.VatNumber
	}
	return ""
}

type ClientUser struct {
	Id                   string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId             string                  `protobuf:"bytes,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	UserId               string                  `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Status               ClientUserLightStatus   `protobuf:"varint,4,opt,name=status,proto3,enum=zeropsApiProtocol.ClientUserLightStatus" json:"status,omitempty"`
	RoleCode             ClientUserLightRoleCode `protobuf:"varint,5,opt,name=roleCode,proto3,enum=zeropsApiProtocol.ClientUserLightRoleCode" json:"roleCode,omitempty"`
	Client               *ClientLight            `protobuf:"bytes,6,opt,name=client,proto3" json:"client,omitempty"`
	User                 *UserLight              `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ClientUser) Reset()         { *m = ClientUser{} }
func (m *ClientUser) String() string { return proto.CompactTextString(m) }
func (*ClientUser) ProtoMessage()    {}
func (*ClientUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{36}
}

func (m *ClientUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientUser.Unmarshal(m, b)
}
func (m *ClientUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientUser.Marshal(b, m, deterministic)
}
func (m *ClientUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientUser.Merge(m, src)
}
func (m *ClientUser) XXX_Size() int {
	return xxx_messageInfo_ClientUser.Size(m)
}
func (m *ClientUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientUser.DiscardUnknown(m)
}

var xxx_messageInfo_ClientUser proto.InternalMessageInfo

func (m *ClientUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientUser) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ClientUser) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ClientUser) GetStatus() ClientUserLightStatus {
	if m != nil {
		return m.Status
	}
	return ClientUserLightStatus_CLIENT_USER_LIGHT_STATUS_UNKNOWN
}

func (m *ClientUser) GetRoleCode() ClientUserLightRoleCode {
	if m != nil {
		return m.RoleCode
	}
	return ClientUserLightRoleCode_CLIENT_USER_LIGHT_ROLE_CODE_UNKNOWN
}

func (m *ClientUser) GetClient() *ClientLight {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *ClientUser) GetUser() *UserLight {
	if m != nil {
		return m.User
	}
	return nil
}

type Language struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Language) Reset()         { *m = Language{} }
func (m *Language) String() string { return proto.CompactTextString(m) }
func (*Language) ProtoMessage()    {}
func (*Language) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{37}
}

func (m *Language) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Language.Unmarshal(m, b)
}
func (m *Language) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Language.Marshal(b, m, deterministic)
}
func (m *Language) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Language.Merge(m, src)
}
func (m *Language) XXX_Size() int {
	return xxx_messageInfo_Language.Size(m)
}
func (m *Language) XXX_DiscardUnknown() {
	xxx_messageInfo_Language.DiscardUnknown(m)
}

var xxx_messageInfo_Language proto.InternalMessageInfo

func (m *Language) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Language) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LocationServiceStackInfo struct {
	ServiceStackName            string   `protobuf:"bytes,1,opt,name=serviceStackName,proto3" json:"serviceStackName,omitempty"`
	ServiceStackTypeName        string   `protobuf:"bytes,2,opt,name=serviceStackTypeName,proto3" json:"serviceStackTypeName,omitempty"`
	ServiceStackTypeVersionName string   `protobuf:"bytes,3,opt,name=serviceStackTypeVersionName,proto3" json:"serviceStackTypeVersionName,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *LocationServiceStackInfo) Reset()         { *m = LocationServiceStackInfo{} }
func (m *LocationServiceStackInfo) String() string { return proto.CompactTextString(m) }
func (*LocationServiceStackInfo) ProtoMessage()    {}
func (*LocationServiceStackInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{38}
}

func (m *LocationServiceStackInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationServiceStackInfo.Unmarshal(m, b)
}
func (m *LocationServiceStackInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationServiceStackInfo.Marshal(b, m, deterministic)
}
func (m *LocationServiceStackInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationServiceStackInfo.Merge(m, src)
}
func (m *LocationServiceStackInfo) XXX_Size() int {
	return xxx_messageInfo_LocationServiceStackInfo.Size(m)
}
func (m *LocationServiceStackInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationServiceStackInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LocationServiceStackInfo proto.InternalMessageInfo

func (m *LocationServiceStackInfo) GetServiceStackName() string {
	if m != nil {
		return m.ServiceStackName
	}
	return ""
}

func (m *LocationServiceStackInfo) GetServiceStackTypeName() string {
	if m != nil {
		return m.ServiceStackTypeName
	}
	return ""
}

func (m *LocationServiceStackInfo) GetServiceStackTypeVersionName() string {
	if m != nil {
		return m.ServiceStackTypeVersionName
	}
	return ""
}

type Project struct {
	Id                            string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId                      string        `protobuf:"bytes,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Name                          string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description                   string        `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	TagList                       []string      `protobuf:"bytes,5,rep,name=tagList,proto3" json:"tagList,omitempty"`
	Status                        ProjectStatus `protobuf:"varint,6,opt,name=status,proto3,enum=zeropsApiProtocol.ProjectStatus" json:"status,omitempty"`
	Created                       *Timestamp    `protobuf:"bytes,7,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate                    *Timestamp    `protobuf:"bytes,8,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	PublicIpV4                    string        `protobuf:"bytes,9,opt,name=publicIpV4,proto3" json:"publicIpV4,omitempty"`
	PublicIpV6                    string        `protobuf:"bytes,10,opt,name=publicIpV6,proto3" json:"publicIpV6,omitempty"`
	PublicIpV4PendingRequest      bool          `protobuf:"varint,11,opt,name=publicIpV4PendingRequest,proto3" json:"publicIpV4PendingRequest,omitempty"`
	PublicIpV4RequestDisabledTill *Timestamp    `protobuf:"bytes,12,opt,name=publicIpV4RequestDisabledTill,proto3" json:"publicIpV4RequestDisabledTill,omitempty"`
	ZeropsSubdomainHost           string        `protobuf:"bytes,13,opt,name=zeropsSubdomainHost,proto3" json:"zeropsSubdomainHost,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}      `json:"-"`
	XXX_unrecognized              []byte        `json:"-"`
	XXX_sizecache                 int32         `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{39}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Project) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Project) GetTagList() []string {
	if m != nil {
		return m.TagList
	}
	return nil
}

func (m *Project) GetStatus() ProjectStatus {
	if m != nil {
		return m.Status
	}
	return ProjectStatus_PROJECT_STATUS_UNKNOWN
}

func (m *Project) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Project) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *Project) GetPublicIpV4() string {
	if m != nil {
		return m.PublicIpV4
	}
	return ""
}

func (m *Project) GetPublicIpV6() string {
	if m != nil {
		return m.PublicIpV6
	}
	return ""
}

func (m *Project) GetPublicIpV4PendingRequest() bool {
	if m != nil {
		return m.PublicIpV4PendingRequest
	}
	return false
}

func (m *Project) GetPublicIpV4RequestDisabledTill() *Timestamp {
	if m != nil {
		return m.PublicIpV4RequestDisabledTill
	}
	return nil
}

func (m *Project) GetZeropsSubdomainHost() string {
	if m != nil {
		return m.ZeropsSubdomainHost
	}
	return ""
}

type ProjectLight struct {
	Id                   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId             string        `protobuf:"bytes,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Name                 string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string        `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	TagList              []string      `protobuf:"bytes,5,rep,name=tagList,proto3" json:"tagList,omitempty"`
	Status               ProjectStatus `protobuf:"varint,6,opt,name=status,proto3,enum=zeropsApiProtocol.ProjectStatus" json:"status,omitempty"`
	Created              *Timestamp    `protobuf:"bytes,7,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate           *Timestamp    `protobuf:"bytes,8,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ProjectLight) Reset()         { *m = ProjectLight{} }
func (m *ProjectLight) String() string { return proto.CompactTextString(m) }
func (*ProjectLight) ProtoMessage()    {}
func (*ProjectLight) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{40}
}

func (m *ProjectLight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectLight.Unmarshal(m, b)
}
func (m *ProjectLight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectLight.Marshal(b, m, deterministic)
}
func (m *ProjectLight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectLight.Merge(m, src)
}
func (m *ProjectLight) XXX_Size() int {
	return xxx_messageInfo_ProjectLight.Size(m)
}
func (m *ProjectLight) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectLight.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectLight proto.InternalMessageInfo

func (m *ProjectLight) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectLight) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ProjectLight) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProjectLight) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ProjectLight) GetTagList() []string {
	if m != nil {
		return m.TagList
	}
	return nil
}

func (m *ProjectLight) GetStatus() ProjectStatus {
	if m != nil {
		return m.Status
	}
	return ProjectStatus_PROJECT_STATUS_UNKNOWN
}

func (m *ProjectLight) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ProjectLight) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

type ProjectLightJsonObject struct {
	Id                   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId             string        `protobuf:"bytes,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Name                 string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string        `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	TagList              []string      `protobuf:"bytes,5,rep,name=tagList,proto3" json:"tagList,omitempty"`
	Status               ProjectStatus `protobuf:"varint,6,opt,name=status,proto3,enum=zeropsApiProtocol.ProjectStatus" json:"status,omitempty"`
	Created              *Timestamp    `protobuf:"bytes,7,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate           *Timestamp    `protobuf:"bytes,8,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ProjectLightJsonObject) Reset()         { *m = ProjectLightJsonObject{} }
func (m *ProjectLightJsonObject) String() string { return proto.CompactTextString(m) }
func (*ProjectLightJsonObject) ProtoMessage()    {}
func (*ProjectLightJsonObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{41}
}

func (m *ProjectLightJsonObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectLightJsonObject.Unmarshal(m, b)
}
func (m *ProjectLightJsonObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectLightJsonObject.Marshal(b, m, deterministic)
}
func (m *ProjectLightJsonObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectLightJsonObject.Merge(m, src)
}
func (m *ProjectLightJsonObject) XXX_Size() int {
	return xxx_messageInfo_ProjectLightJsonObject.Size(m)
}
func (m *ProjectLightJsonObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectLightJsonObject.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectLightJsonObject proto.InternalMessageInfo

func (m *ProjectLightJsonObject) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectLightJsonObject) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ProjectLightJsonObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProjectLightJsonObject) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ProjectLightJsonObject) GetTagList() []string {
	if m != nil {
		return m.TagList
	}
	return nil
}

func (m *ProjectLightJsonObject) GetStatus() ProjectStatus {
	if m != nil {
		return m.Status
	}
	return ProjectStatus_PROJECT_STATUS_UNKNOWN
}

func (m *ProjectLightJsonObject) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ProjectLightJsonObject) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

type PublicHttpRoutingDomain struct {
	DomainName           string                                `protobuf:"bytes,1,opt,name=domainName,proto3" json:"domainName,omitempty"`
	DnsCheckStatus       PublicHttpRoutingDomainDnsCheckStatus `protobuf:"varint,2,opt,name=dnsCheckStatus,proto3,enum=zeropsApiProtocol.PublicHttpRoutingDomainDnsCheckStatus" json:"dnsCheckStatus,omitempty"`
	SslStatus            PublicHttpRoutingDomainSslStatus      `protobuf:"varint,3,opt,name=sslStatus,proto3,enum=zeropsApiProtocol.PublicHttpRoutingDomainSslStatus" json:"sslStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *PublicHttpRoutingDomain) Reset()         { *m = PublicHttpRoutingDomain{} }
func (m *PublicHttpRoutingDomain) String() string { return proto.CompactTextString(m) }
func (*PublicHttpRoutingDomain) ProtoMessage()    {}
func (*PublicHttpRoutingDomain) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{42}
}

func (m *PublicHttpRoutingDomain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicHttpRoutingDomain.Unmarshal(m, b)
}
func (m *PublicHttpRoutingDomain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicHttpRoutingDomain.Marshal(b, m, deterministic)
}
func (m *PublicHttpRoutingDomain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicHttpRoutingDomain.Merge(m, src)
}
func (m *PublicHttpRoutingDomain) XXX_Size() int {
	return xxx_messageInfo_PublicHttpRoutingDomain.Size(m)
}
func (m *PublicHttpRoutingDomain) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicHttpRoutingDomain.DiscardUnknown(m)
}

var xxx_messageInfo_PublicHttpRoutingDomain proto.InternalMessageInfo

func (m *PublicHttpRoutingDomain) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *PublicHttpRoutingDomain) GetDnsCheckStatus() PublicHttpRoutingDomainDnsCheckStatus {
	if m != nil {
		return m.DnsCheckStatus
	}
	return PublicHttpRoutingDomainDnsCheckStatus_PUBLIC_HTTP_ROUTING_DOMAIN_DNS_CHECK_STATUS_UNKNOWN
}

func (m *PublicHttpRoutingDomain) GetSslStatus() PublicHttpRoutingDomainSslStatus {
	if m != nil {
		return m.SslStatus
	}
	return PublicHttpRoutingDomainSslStatus_PUBLIC_HTTP_ROUTING_DOMAIN_SSL_STATUS_UNKNOWN
}

type PublicHttpRoutingLocation struct {
	Path                 string                    `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Port                 int32                     `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	ServiceStackId       string                    `protobuf:"bytes,3,opt,name=serviceStackId,proto3" json:"serviceStackId,omitempty"`
	ServiceStackInfo     *LocationServiceStackInfo `protobuf:"bytes,4,opt,name=serviceStackInfo,proto3" json:"serviceStackInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PublicHttpRoutingLocation) Reset()         { *m = PublicHttpRoutingLocation{} }
func (m *PublicHttpRoutingLocation) String() string { return proto.CompactTextString(m) }
func (*PublicHttpRoutingLocation) ProtoMessage()    {}
func (*PublicHttpRoutingLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{43}
}

func (m *PublicHttpRoutingLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicHttpRoutingLocation.Unmarshal(m, b)
}
func (m *PublicHttpRoutingLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicHttpRoutingLocation.Marshal(b, m, deterministic)
}
func (m *PublicHttpRoutingLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicHttpRoutingLocation.Merge(m, src)
}
func (m *PublicHttpRoutingLocation) XXX_Size() int {
	return xxx_messageInfo_PublicHttpRoutingLocation.Size(m)
}
func (m *PublicHttpRoutingLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicHttpRoutingLocation.DiscardUnknown(m)
}

var xxx_messageInfo_PublicHttpRoutingLocation proto.InternalMessageInfo

func (m *PublicHttpRoutingLocation) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *PublicHttpRoutingLocation) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *PublicHttpRoutingLocation) GetServiceStackId() string {
	if m != nil {
		return m.ServiceStackId
	}
	return ""
}

func (m *PublicHttpRoutingLocation) GetServiceStackInfo() *LocationServiceStackInfo {
	if m != nil {
		return m.ServiceStackInfo
	}
	return nil
}

type RequestedPortsJsonObject struct {
	IsActive             bool           `protobuf:"varint,1,opt,name=isActive,proto3" json:"isActive,omitempty"`
	RequestedPorts       []*ServicePort `protobuf:"bytes,2,rep,name=requestedPorts,proto3" json:"requestedPorts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RequestedPortsJsonObject) Reset()         { *m = RequestedPortsJsonObject{} }
func (m *RequestedPortsJsonObject) String() string { return proto.CompactTextString(m) }
func (*RequestedPortsJsonObject) ProtoMessage()    {}
func (*RequestedPortsJsonObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{44}
}

func (m *RequestedPortsJsonObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestedPortsJsonObject.Unmarshal(m, b)
}
func (m *RequestedPortsJsonObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestedPortsJsonObject.Marshal(b, m, deterministic)
}
func (m *RequestedPortsJsonObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestedPortsJsonObject.Merge(m, src)
}
func (m *RequestedPortsJsonObject) XXX_Size() int {
	return xxx_messageInfo_RequestedPortsJsonObject.Size(m)
}
func (m *RequestedPortsJsonObject) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestedPortsJsonObject.DiscardUnknown(m)
}

var xxx_messageInfo_RequestedPortsJsonObject proto.InternalMessageInfo

func (m *RequestedPortsJsonObject) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *RequestedPortsJsonObject) GetRequestedPorts() []*ServicePort {
	if m != nil {
		return m.RequestedPorts
	}
	return nil
}

type ServicePort struct {
	Protocol             ServicePortProtocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=zeropsApiProtocol.ServicePortProtocol" json:"protocol,omitempty"`
	Port                 int32               `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Description          string              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Scheme               ServicePortScheme   `protobuf:"varint,4,opt,name=scheme,proto3,enum=zeropsApiProtocol.ServicePortScheme" json:"scheme,omitempty"`
	ServiceId            string              `protobuf:"bytes,5,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ServicePort) Reset()         { *m = ServicePort{} }
func (m *ServicePort) String() string { return proto.CompactTextString(m) }
func (*ServicePort) ProtoMessage()    {}
func (*ServicePort) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{45}
}

func (m *ServicePort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServicePort.Unmarshal(m, b)
}
func (m *ServicePort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServicePort.Marshal(b, m, deterministic)
}
func (m *ServicePort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServicePort.Merge(m, src)
}
func (m *ServicePort) XXX_Size() int {
	return xxx_messageInfo_ServicePort.Size(m)
}
func (m *ServicePort) XXX_DiscardUnknown() {
	xxx_messageInfo_ServicePort.DiscardUnknown(m)
}

var xxx_messageInfo_ServicePort proto.InternalMessageInfo

func (m *ServicePort) GetProtocol() ServicePortProtocol {
	if m != nil {
		return m.Protocol
	}
	return ServicePortProtocol_SERVICE_PORT_PROTOCOL_UNKNOWN
}

func (m *ServicePort) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ServicePort) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ServicePort) GetScheme() ServicePortScheme {
	if m != nil {
		return m.Scheme
	}
	return ServicePortScheme_SERVICE_PORT_SCHEME_UNKNOWN
}

func (m *ServicePort) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

type ServiceStackConnectedServiceStack struct {
	ServiceStack         *ServiceStackLight           `protobuf:"bytes,1,opt,name=serviceStack,proto3" json:"serviceStack,omitempty"`
	Status               ServiceStackConnectionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=zeropsApiProtocol.ServiceStackConnectionStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ServiceStackConnectedServiceStack) Reset()         { *m = ServiceStackConnectedServiceStack{} }
func (m *ServiceStackConnectedServiceStack) String() string { return proto.CompactTextString(m) }
func (*ServiceStackConnectedServiceStack) ProtoMessage()    {}
func (*ServiceStackConnectedServiceStack) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{46}
}

func (m *ServiceStackConnectedServiceStack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceStackConnectedServiceStack.Unmarshal(m, b)
}
func (m *ServiceStackConnectedServiceStack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceStackConnectedServiceStack.Marshal(b, m, deterministic)
}
func (m *ServiceStackConnectedServiceStack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceStackConnectedServiceStack.Merge(m, src)
}
func (m *ServiceStackConnectedServiceStack) XXX_Size() int {
	return xxx_messageInfo_ServiceStackConnectedServiceStack.Size(m)
}
func (m *ServiceStackConnectedServiceStack) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceStackConnectedServiceStack.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceStackConnectedServiceStack proto.InternalMessageInfo

func (m *ServiceStackConnectedServiceStack) GetServiceStack() *ServiceStackLight {
	if m != nil {
		return m.ServiceStack
	}
	return nil
}

func (m *ServiceStackConnectedServiceStack) GetStatus() ServiceStackConnectionStatus {
	if m != nil {
		return m.Status
	}
	return ServiceStackConnectionStatus_SERVICE_STACK_CONNECTION_STATUS_UNKNOWN
}

type ServiceStackInfoJsonObject struct {
	ServiceStackTypeName        string                                             `protobuf:"bytes,1,opt,name=serviceStackTypeName,proto3" json:"serviceStackTypeName,omitempty"`
	ServiceStackTypeCategory    ServiceStackInfoJsonObjectServiceStackTypeCategory `protobuf:"varint,2,opt,name=serviceStackTypeCategory,proto3,enum=zeropsApiProtocol.ServiceStackInfoJsonObjectServiceStackTypeCategory" json:"serviceStackTypeCategory,omitempty"`
	ServiceStackTypeVersionName string                                             `protobuf:"bytes,3,opt,name=serviceStackTypeVersionName,proto3" json:"serviceStackTypeVersionName,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                                           `json:"-"`
	XXX_unrecognized            []byte                                             `json:"-"`
	XXX_sizecache               int32                                              `json:"-"`
}

func (m *ServiceStackInfoJsonObject) Reset()         { *m = ServiceStackInfoJsonObject{} }
func (m *ServiceStackInfoJsonObject) String() string { return proto.CompactTextString(m) }
func (*ServiceStackInfoJsonObject) ProtoMessage()    {}
func (*ServiceStackInfoJsonObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{47}
}

func (m *ServiceStackInfoJsonObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceStackInfoJsonObject.Unmarshal(m, b)
}
func (m *ServiceStackInfoJsonObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceStackInfoJsonObject.Marshal(b, m, deterministic)
}
func (m *ServiceStackInfoJsonObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceStackInfoJsonObject.Merge(m, src)
}
func (m *ServiceStackInfoJsonObject) XXX_Size() int {
	return xxx_messageInfo_ServiceStackInfoJsonObject.Size(m)
}
func (m *ServiceStackInfoJsonObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceStackInfoJsonObject.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceStackInfoJsonObject proto.InternalMessageInfo

func (m *ServiceStackInfoJsonObject) GetServiceStackTypeName() string {
	if m != nil {
		return m.ServiceStackTypeName
	}
	return ""
}

func (m *ServiceStackInfoJsonObject) GetServiceStackTypeCategory() ServiceStackInfoJsonObjectServiceStackTypeCategory {
	if m != nil {
		return m.ServiceStackTypeCategory
	}
	return ServiceStackInfoJsonObjectServiceStackTypeCategory_SERVICE_STACK_INFO_JSON_OBJECT_SERVICE_STACK_TYPE_CATEGORY_UNKNOWN
}

func (m *ServiceStackInfoJsonObject) GetServiceStackTypeVersionName() string {
	if m != nil {
		return m.ServiceStackTypeVersionName
	}
	return ""
}

type ServiceStackLight struct {
	Id                        string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status                    ServiceStackStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=zeropsApiProtocol.ServiceStackStatus" json:"status,omitempty"`
	Name                      string                      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ServiceStackTypeInfo      *ServiceStackInfoJsonObject `protobuf:"bytes,4,opt,name=serviceStackTypeInfo,proto3" json:"serviceStackTypeInfo,omitempty"`
	ServiceStackTypeId        string                      `protobuf:"bytes,5,opt,name=serviceStackTypeId,proto3" json:"serviceStackTypeId,omitempty"`
	ServiceStackTypeVersionId string                      `protobuf:"bytes,6,opt,name=serviceStackTypeVersionId,proto3" json:"serviceStackTypeVersionId,omitempty"`
	IsSystem                  bool                        `protobuf:"varint,7,opt,name=isSystem,proto3" json:"isSystem,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                    `json:"-"`
	XXX_unrecognized          []byte                      `json:"-"`
	XXX_sizecache             int32                       `json:"-"`
}

func (m *ServiceStackLight) Reset()         { *m = ServiceStackLight{} }
func (m *ServiceStackLight) String() string { return proto.CompactTextString(m) }
func (*ServiceStackLight) ProtoMessage()    {}
func (*ServiceStackLight) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{48}
}

func (m *ServiceStackLight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceStackLight.Unmarshal(m, b)
}
func (m *ServiceStackLight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceStackLight.Marshal(b, m, deterministic)
}
func (m *ServiceStackLight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceStackLight.Merge(m, src)
}
func (m *ServiceStackLight) XXX_Size() int {
	return xxx_messageInfo_ServiceStackLight.Size(m)
}
func (m *ServiceStackLight) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceStackLight.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceStackLight proto.InternalMessageInfo

func (m *ServiceStackLight) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceStackLight) GetStatus() ServiceStackStatus {
	if m != nil {
		return m.Status
	}
	return ServiceStackStatus_SERVICE_STACK_STATUS_UNKNOWN
}

func (m *ServiceStackLight) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceStackLight) GetServiceStackTypeInfo() *ServiceStackInfoJsonObject {
	if m != nil {
		return m.ServiceStackTypeInfo
	}
	return nil
}

func (m *ServiceStackLight) GetServiceStackTypeId() string {
	if m != nil {
		return m.ServiceStackTypeId
	}
	return ""
}

func (m *ServiceStackLight) GetServiceStackTypeVersionId() string {
	if m != nil {
		return m.ServiceStackTypeVersionId
	}
	return ""
}

func (m *ServiceStackLight) GetIsSystem() bool {
	if m != nil {
		return m.IsSystem
	}
	return false
}

type ServiceStackLightJsonObject struct {
	Id                        string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created                   *Timestamp                  `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdate                *Timestamp                  `protobuf:"bytes,3,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	ProjectId                 string                      `protobuf:"bytes,4,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ServiceStackTypeId        string                      `protobuf:"bytes,5,opt,name=serviceStackTypeId,proto3" json:"serviceStackTypeId,omitempty"`
	ServiceStackTypeVersionId string                      `protobuf:"bytes,6,opt,name=serviceStackTypeVersionId,proto3" json:"serviceStackTypeVersionId,omitempty"`
	DriverId                  string                      `protobuf:"bytes,7,opt,name=driverId,proto3" json:"driverId,omitempty"`
	Name                      string                      `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	ServiceStackTypeInfo      *ServiceStackInfoJsonObject `protobuf:"bytes,9,opt,name=serviceStackTypeInfo,proto3" json:"serviceStackTypeInfo,omitempty"`
	Ports                     []*ServicePort              `protobuf:"bytes,10,rep,name=ports,proto3" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                    `json:"-"`
	XXX_unrecognized          []byte                      `json:"-"`
	XXX_sizecache             int32                       `json:"-"`
}

func (m *ServiceStackLightJsonObject) Reset()         { *m = ServiceStackLightJsonObject{} }
func (m *ServiceStackLightJsonObject) String() string { return proto.CompactTextString(m) }
func (*ServiceStackLightJsonObject) ProtoMessage()    {}
func (*ServiceStackLightJsonObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{49}
}

func (m *ServiceStackLightJsonObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceStackLightJsonObject.Unmarshal(m, b)
}
func (m *ServiceStackLightJsonObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceStackLightJsonObject.Marshal(b, m, deterministic)
}
func (m *ServiceStackLightJsonObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceStackLightJsonObject.Merge(m, src)
}
func (m *ServiceStackLightJsonObject) XXX_Size() int {
	return xxx_messageInfo_ServiceStackLightJsonObject.Size(m)
}
func (m *ServiceStackLightJsonObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceStackLightJsonObject.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceStackLightJsonObject proto.InternalMessageInfo

func (m *ServiceStackLightJsonObject) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceStackLightJsonObject) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ServiceStackLightJsonObject) GetLastUpdate() *Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *ServiceStackLightJsonObject) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *ServiceStackLightJsonObject) GetServiceStackTypeId() string {
	if m != nil {
		return m.ServiceStackTypeId
	}
	return ""
}

func (m *ServiceStackLightJsonObject) GetServiceStackTypeVersionId() string {
	if m != nil {
		return m.ServiceStackTypeVersionId
	}
	return ""
}

func (m *ServiceStackLightJsonObject) GetDriverId() string {
	if m != nil {
		return m.DriverId
	}
	return ""
}

func (m *ServiceStackLightJsonObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceStackLightJsonObject) GetServiceStackTypeInfo() *ServiceStackInfoJsonObject {
	if m != nil {
		return m.ServiceStackTypeInfo
	}
	return nil
}

func (m *ServiceStackLightJsonObject) GetPorts() []*ServicePort {
	if m != nil {
		return m.Ports
	}
	return nil
}

type UserJsonObject struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	FullName             string   `protobuf:"bytes,4,opt,name=fullName,proto3" json:"fullName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserJsonObject) Reset()         { *m = UserJsonObject{} }
func (m *UserJsonObject) String() string { return proto.CompactTextString(m) }
func (*UserJsonObject) ProtoMessage()    {}
func (*UserJsonObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{50}
}

func (m *UserJsonObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserJsonObject.Unmarshal(m, b)
}
func (m *UserJsonObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserJsonObject.Marshal(b, m, deterministic)
}
func (m *UserJsonObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserJsonObject.Merge(m, src)
}
func (m *UserJsonObject) XXX_Size() int {
	return xxx_messageInfo_UserJsonObject.Size(m)
}
func (m *UserJsonObject) XXX_DiscardUnknown() {
	xxx_messageInfo_UserJsonObject.DiscardUnknown(m)
}

var xxx_messageInfo_UserJsonObject proto.InternalMessageInfo

func (m *UserJsonObject) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserJsonObject) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserJsonObject) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UserJsonObject) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

type UserLight struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FullName             string   `protobuf:"bytes,3,opt,name=fullName,proto3" json:"fullName,omitempty"`
	FirstName            string   `protobuf:"bytes,4,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string   `protobuf:"bytes,5,opt,name=lastName,proto3" json:"lastName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserLight) Reset()         { *m = UserLight{} }
func (m *UserLight) String() string { return proto.CompactTextString(m) }
func (*UserLight) ProtoMessage()    {}
func (*UserLight) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{51}
}

func (m *UserLight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLight.Unmarshal(m, b)
}
func (m *UserLight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLight.Marshal(b, m, deterministic)
}
func (m *UserLight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLight.Merge(m, src)
}
func (m *UserLight) XXX_Size() int {
	return xxx_messageInfo_UserLight.Size(m)
}
func (m *UserLight) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLight.DiscardUnknown(m)
}

var xxx_messageInfo_UserLight proto.InternalMessageInfo

func (m *UserLight) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserLight) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserLight) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *UserLight) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UserLight) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func init() {
	proto.RegisterEnum("zeropsApiProtocol.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("zeropsApiProtocol.AppVersionStatus", AppVersionStatus_name, AppVersionStatus_value)
	proto.RegisterEnum("zeropsApiProtocol.ClientUserLightRoleCode", ClientUserLightRoleCode_name, ClientUserLightRoleCode_value)
	proto.RegisterEnum("zeropsApiProtocol.ClientUserLightStatus", ClientUserLightStatus_name, ClientUserLightStatus_value)
	proto.RegisterEnum("zeropsApiProtocol.ProcessStatus", ProcessStatus_name, ProcessStatus_value)
	proto.RegisterEnum("zeropsApiProtocol.ProjectStatus", ProjectStatus_name, ProjectStatus_value)
	proto.RegisterEnum("zeropsApiProtocol.PublicHttpRoutingDomainDnsCheckStatus", PublicHttpRoutingDomainDnsCheckStatus_name, PublicHttpRoutingDomainDnsCheckStatus_value)
	proto.RegisterEnum("zeropsApiProtocol.PublicHttpRoutingDomainSslStatus", PublicHttpRoutingDomainSslStatus_name, PublicHttpRoutingDomainSslStatus_value)
	proto.RegisterEnum("zeropsApiProtocol.ServicePortProtocol", ServicePortProtocol_name, ServicePortProtocol_value)
	proto.RegisterEnum("zeropsApiProtocol.ServicePortScheme", ServicePortScheme_name, ServicePortScheme_value)
	proto.RegisterEnum("zeropsApiProtocol.ServiceStackConnectionStatus", ServiceStackConnectionStatus_name, ServiceStackConnectionStatus_value)
	proto.RegisterEnum("zeropsApiProtocol.ServiceStackInfoJsonObjectServiceStackTypeCategory", ServiceStackInfoJsonObjectServiceStackTypeCategory_name, ServiceStackInfoJsonObjectServiceStackTypeCategory_value)
	proto.RegisterEnum("zeropsApiProtocol.ServiceStackMode", ServiceStackMode_name, ServiceStackMode_value)
	proto.RegisterEnum("zeropsApiProtocol.ServiceStackStatus", ServiceStackStatus_name, ServiceStackStatus_value)
	proto.RegisterEnum("zeropsApiProtocol.UserDataType", UserDataType_name, UserDataType_value)
	proto.RegisterEnum("zeropsApiProtocol.UserStatus", UserStatus_name, UserStatus_value)
	proto.RegisterType((*Error)(nil), "zeropsApiProtocol.Error")
	proto.RegisterType((*Timestamp)(nil), "zeropsApiProtocol.Timestamp")
	proto.RegisterType((*GetProcessRequest)(nil), "zeropsApiProtocol.GetProcessRequest")
	proto.RegisterType((*GetProjectLogRequest)(nil), "zeropsApiProtocol.GetProjectLogRequest")
	proto.RegisterType((*GetProjectsByNameRequest)(nil), "zeropsApiProtocol.GetProjectsByNameRequest")
	proto.RegisterType((*GetServiceStackRequest)(nil), "zeropsApiProtocol.GetServiceStackRequest")
	proto.RegisterType((*GetServiceStackByNameRequest)(nil), "zeropsApiProtocol.GetServiceStackByNameRequest")
	proto.RegisterType((*GetUserInfoRequest)(nil), "zeropsApiProtocol.GetUserInfoRequest")
	proto.RegisterType((*PostAppVersionRequest)(nil), "zeropsApiProtocol.PostAppVersionRequest")
	proto.RegisterType((*PostPublicHttpRoutingRequest)(nil), "zeropsApiProtocol.PostPublicHttpRoutingRequest")
	proto.RegisterType((*PostVpnRequestRequest)(nil), "zeropsApiProtocol.PostVpnRequestRequest")
	proto.RegisterType((*PublicHttpRoutingLocationPost)(nil), "zeropsApiProtocol.PublicHttpRoutingLocationPost")
	proto.RegisterType((*PutAppVersionDeployRequest)(nil), "zeropsApiProtocol.PutAppVersionDeployRequest")
	proto.RegisterType((*GetProcessResponse)(nil), "zeropsApiProtocol.GetProcessResponse")
	proto.RegisterType((*GetProcessResponseDto)(nil), "zeropsApiProtocol.GetProcessResponseDto")
	proto.RegisterType((*GetProjectLogResponse)(nil), "zeropsApiProtocol.GetProjectLogResponse")
	proto.RegisterType((*GetProjectLogResponseDto)(nil), "zeropsApiProtocol.GetProjectLogResponseDto")
	proto.RegisterType((*GetProjectsByNameResponse)(nil), "zeropsApiProtocol.GetProjectsByNameResponse")
	proto.RegisterType((*GetProjectsByNameResponseDto)(nil), "zeropsApiProtocol.GetProjectsByNameResponseDto")
	proto.RegisterType((*GetServiceStackResponse)(nil), "zeropsApiProtocol.GetServiceStackResponse")
	proto.RegisterType((*GetServiceStackResponseDto)(nil), "zeropsApiProtocol.GetServiceStackResponseDto")
	proto.RegisterType((*GetServiceStackByNameResponse)(nil), "zeropsApiProtocol.GetServiceStackByNameResponse")
	proto.RegisterType((*GetServiceStackByNameResponseDto)(nil), "zeropsApiProtocol.GetServiceStackByNameResponseDto")
	proto.RegisterType((*GetUserInfoResponse)(nil), "zeropsApiProtocol.GetUserInfoResponse")
	proto.RegisterType((*GetUserInfoResponseDto)(nil), "zeropsApiProtocol.GetUserInfoResponseDto")
	proto.RegisterType((*PostAppVersionResponse)(nil), "zeropsApiProtocol.PostAppVersionResponse")
	proto.RegisterType((*PostAppVersionResponseDto)(nil), "zeropsApiProtocol.PostAppVersionResponseDto")
	proto.RegisterType((*PostPublicHttpRoutingResponse)(nil), "zeropsApiProtocol.PostPublicHttpRoutingResponse")
	proto.RegisterType((*PostPublicHttpRoutingResponseDto)(nil), "zeropsApiProtocol.PostPublicHttpRoutingResponseDto")
	proto.RegisterType((*PostVpnRequestResponse)(nil), "zeropsApiProtocol.PostVpnRequestResponse")
	proto.RegisterType((*PostVpnRequestResponseDto)(nil), "zeropsApiProtocol.PostVpnRequestResponseDto")
	proto.RegisterType((*PutAppVersionDeployResponse)(nil), "zeropsApiProtocol.PutAppVersionDeployResponse")
	proto.RegisterType((*PutAppVersionDeployResponseDto)(nil), "zeropsApiProtocol.PutAppVersionDeployResponseDto")
	proto.RegisterType((*AppVersionLight)(nil), "zeropsApiProtocol.AppVersionLight")
	proto.RegisterType((*AppVersionUserData)(nil), "zeropsApiProtocol.AppVersionUserData")
	proto.RegisterType((*ClientLight)(nil), "zeropsApiProtocol.ClientLight")
	proto.RegisterType((*ClientUser)(nil), "zeropsApiProtocol.ClientUser")
	proto.RegisterType((*Language)(nil), "zeropsApiProtocol.Language")
	proto.RegisterType((*LocationServiceStackInfo)(nil), "zeropsApiProtocol.LocationServiceStackInfo")
	proto.RegisterType((*Project)(nil), "zeropsApiProtocol.Project")
	proto.RegisterType((*ProjectLight)(nil), "zeropsApiProtocol.ProjectLight")
	proto.RegisterType((*ProjectLightJsonObject)(nil), "zeropsApiProtocol.ProjectLightJsonObject")
	proto.RegisterType((*PublicHttpRoutingDomain)(nil), "zeropsApiProtocol.PublicHttpRoutingDomain")
	proto.RegisterType((*PublicHttpRoutingLocation)(nil), "zeropsApiProtocol.PublicHttpRoutingLocation")
	proto.RegisterType((*RequestedPortsJsonObject)(nil), "zeropsApiProtocol.RequestedPortsJsonObject")
	proto.RegisterType((*ServicePort)(nil), "zeropsApiProtocol.ServicePort")
	proto.RegisterType((*ServiceStackConnectedServiceStack)(nil), "zeropsApiProtocol.ServiceStackConnectedServiceStack")
	proto.RegisterType((*ServiceStackInfoJsonObject)(nil), "zeropsApiProtocol.ServiceStackInfoJsonObject")
	proto.RegisterType((*ServiceStackLight)(nil), "zeropsApiProtocol.ServiceStackLight")
	proto.RegisterType((*ServiceStackLightJsonObject)(nil), "zeropsApiProtocol.ServiceStackLightJsonObject")
	proto.RegisterType((*UserJsonObject)(nil), "zeropsApiProtocol.UserJsonObject")
	proto.RegisterType((*UserLight)(nil), "zeropsApiProtocol.UserLight")
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor_2bc2336598a3f7e0) }

var fileDescriptor_2bc2336598a3f7e0 = []byte{
	// 6064 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x3c, 0x5b, 0x77, 0x1c, 0xc9,
	0x59, 0xe9, 0xd1, 0xfd, 0x93, 0x2d, 0x97, 0xcb, 0xb7, 0xf1, 0x75, 0xe5, 0xf1, 0x65, 0x65, 0xd9,
	0x6b, 0x7b, 0x65, 0xaf, 0xbd, 0x9b, 0xdd, 0x90, 0x6d, 0x75, 0x97, 0xa4, 0x5e, 0xf7, 0x74, 0x8f,
	0xab, 0x7b, 0x64, 0x6b, 0x09, 0xe9, 0x8c, 0x47, 0xbd, 0xf6, 0x64, 0x47, 0x33, 0xb3, 0x33, 0x23,
	0x27, 0x0a, 0x10, 0x12, 0x12, 0x92, 0x00, 0x21, 0x84, 0x24, 0x84, 0x10, 0xc2, 0x9d, 0x73, 0xb8,
	0x3c, 0xf0, 0xc2, 0x81, 0x07, 0xe0, 0xf0, 0xc0, 0x59, 0xc2, 0x0f, 0x80, 0x7f, 0x90, 0x67, 0x72,
	0x78, 0x23, 0x8f, 0x9c, 0xba, 0xf4, 0xbd, 0x5b, 0x1a, 0x79, 0x37, 0xc9, 0x8b, 0xdf, 0xa6, 0xab,
	0xbe, 0x4b, 0xd5, 0x57, 0xdf, 0xbd, 0x7a, 0x1a, 0xe6, 0x7a, 0xfd, 0xee, 0xb0, 0xdb, 0xec, 0xb6,
	0xaf, 0xf3, 0x1f, 0xf8, 0xf0, 0xe7, 0xfc, 0x7e, 0xb7, 0x37, 0x50, 0x7b, 0xad, 0x9a, 0x9c, 0xa8,
	0x38, 0x30, 0x41, 0xfa, 0xfd, 0x6e, 0x1f, 0xdf, 0x84, 0xf1, 0x66, 0x77, 0xd3, 0x2f, 0x2b, 0xf3,
	0xca, 0xc2, 0xdc, 0xd2, 0x99, 0xeb, 0x19, 0xd0, 0xeb, 0x1c, 0x4e, 0xeb, 0x6e, 0xfa, 0x94, 0x43,
	0xe2, 0x32, 0x4c, 0x6d, 0xf9, 0x83, 0x41, 0xe3, 0xb1, 0x5f, 0x2e, 0xcd, 0x2b, 0x0b, 0x33, 0x34,
	0x78, 0xac, 0xdc, 0x87, 0x19, 0xb7, 0xb5, 0xe5, 0x0f, 0x86, 0x8d, 0xad, 0x1e, 0x3e, 0x0a, 0x13,
	0xad, 0x81, 0xe3, 0x0f, 0x39, 0xe5, 0x69, 0x2a, 0x1e, 0x18, 0xf2, 0xc0, 0x6f, 0x76, 0x3b, 0x9b,
	0x03, 0x8e, 0x3c, 0x46, 0x83, 0x47, 0x06, 0xdf, 0x69, 0x74, 0xba, 0x83, 0xf2, 0xd8, 0xbc, 0xb2,
	0x30, 0x41, 0xc5, 0x43, 0xe5, 0x02, 0x1c, 0x5e, 0xf5, 0x87, 0xb5, 0x7e, 0xb7, 0xe9, 0x0f, 0x06,
	0xd4, 0x7f, 0x6f, 0xdb, 0x1f, 0x0c, 0xf1, 0x1c, 0x94, 0x5a, 0x9b, 0x9c, 0xee, 0x0c, 0x2d, 0xb5,
	0x36, 0x2b, 0x97, 0xe1, 0xa8, 0x00, 0xfa, 0xb4, 0xdf, 0x1c, 0x9a, 0xdd, 0xc7, 0x45, 0x70, 0xd7,
	0xa1, 0x1c, 0xc1, 0x0d, 0x96, 0x77, 0xac, 0xc6, 0x96, 0x1f, 0xc0, 0x62, 0x18, 0xef, 0x34, 0xb6,
	0x7c, 0x09, 0xcd, 0x7f, 0x57, 0x16, 0xe0, 0xf8, 0xaa, 0x3f, 0x74, 0xfc, 0xfe, 0xd3, 0x56, 0xd3,
	0x77, 0x86, 0x8d, 0xe6, 0xbb, 0x45, 0x94, 0x6b, 0x70, 0x26, 0x05, 0x99, 0xa4, 0x7e, 0x06, 0x66,
	0x7a, 0x82, 0xad, 0xb1, 0x29, 0xa5, 0x16, 0x0d, 0xe4, 0xf2, 0x3e, 0x0a, 0x78, 0xd5, 0x1f, 0xd6,
	0x07, 0x7e, 0xdf, 0xe8, 0xbc, 0xd3, 0x95, 0x74, 0x2a, 0x1f, 0x87, 0x63, 0xb5, 0xee, 0x60, 0xa8,
	0xf6, 0x7a, 0xeb, 0x7e, 0x7f, 0xd0, 0xea, 0x76, 0x02, 0x06, 0x97, 0x61, 0x6e, 0x10, 0xe3, 0x6e,
	0x04, 0x8b, 0x4b, 0x8d, 0x56, 0x7e, 0xa8, 0xc0, 0x19, 0x46, 0xa1, 0xb6, 0xfd, 0xa8, 0xdd, 0x6a,
	0xae, 0x0d, 0x87, 0x3d, 0xda, 0xdd, 0x1e, 0xb6, 0x3a, 0x8f, 0x73, 0x57, 0xaa, 0xa4, 0x57, 0x7a,
	0x0e, 0x60, 0x30, 0x68, 0x93, 0x4e, 0xe3, 0x51, 0xdb, 0x17, 0x1b, 0x99, 0xa6, 0xb1, 0x11, 0x76,
	0xbc, 0x9b, 0xdd, 0xad, 0x46, 0xab, 0xc3, 0x8e, 0x71, 0x8c, 0xe9, 0x86, 0x7c, 0xc4, 0x16, 0xcc,
	0xb4, 0xbb, 0xcd, 0xc6, 0xb0, 0xd5, 0xed, 0x0c, 0xca, 0xe3, 0xf3, 0x63, 0x0b, 0xb3, 0x4b, 0x37,
	0x73, 0x94, 0x2d, 0xb3, 0x2e, 0x53, 0x22, 0xb1, 0x45, 0xd3, 0x88, 0x44, 0xe5, 0xbe, 0x90, 0xc4,
	0x7a, 0x2f, 0x10, 0x41, 0xc1, 0xd1, 0xe0, 0x05, 0x38, 0xd4, 0x6c, 0xb7, 0xfc, 0x8e, 0xdc, 0xf2,
	0x3d, 0x7f, 0x47, 0x1e, 0x40, 0x7a, 0xb8, 0xd2, 0x85, 0xb3, 0xbb, 0xb2, 0x67, 0xe7, 0xd4, 0x6b,
	0x0c, 0x9f, 0x04, 0xe7, 0xc4, 0x7e, 0xf3, 0xb1, 0x6e, 0x7f, 0xc8, 0x69, 0x4e, 0x50, 0xfe, 0x3b,
	0xe7, 0x30, 0xc6, 0x72, 0x0f, 0xe3, 0x6d, 0x38, 0x55, 0xdb, 0x8e, 0x1d, 0xa6, 0xee, 0xf7, 0xda,
	0xdd, 0x9d, 0xa2, 0x8d, 0x5c, 0x83, 0xc3, 0x43, 0x7f, 0xab, 0xd7, 0xed, 0x37, 0xfa, 0x3b, 0xce,
	0x93, 0xed, 0xe1, 0x66, 0xf7, 0x33, 0x1d, 0x79, 0x04, 0xd9, 0x89, 0xca, 0x57, 0x14, 0xae, 0x40,
	0xa1, 0xe5, 0x0c, 0x7a, 0xdd, 0xce, 0xc0, 0xc7, 0xd7, 0x61, 0xc2, 0x67, 0xf6, 0xcc, 0xe9, 0xce,
	0x2e, 0x95, 0x8b, 0xec, 0x9d, 0x0a, 0x30, 0xfc, 0x26, 0x4c, 0x76, 0xb7, 0x87, 0xbd, 0x6d, 0xb1,
	0xc1, 0xd9, 0xa5, 0x85, 0x1c, 0x84, 0x2c, 0x1b, 0x7d, 0xd8, 0xa5, 0x12, 0xaf, 0xf2, 0x83, 0x09,
	0x38, 0x96, 0x0b, 0x91, 0xd9, 0xe0, 0x29, 0x98, 0x16, 0x47, 0x12, 0xda, 0x48, 0xf8, 0x8c, 0x35,
	0x98, 0x92, 0x5a, 0xc8, 0x65, 0x39, 0xbb, 0x74, 0x25, 0x4f, 0x79, 0xa4, 0x07, 0x68, 0x3d, 0x7e,
	0x32, 0x7c, 0x6b, 0xd0, 0xed, 0xd8, 0x8f, 0xd8, 0x23, 0x0d, 0x30, 0xb1, 0x0b, 0x07, 0xe3, 0x27,
	0x10, 0xe8, 0xe1, 0xf5, 0x1c, 0x52, 0x71, 0x53, 0x4e, 0xd3, 0x4b, 0x12, 0xc1, 0xaf, 0xc2, 0xe4,
	0x60, 0xd8, 0x18, 0x6e, 0x0f, 0xca, 0x13, 0xdc, 0x87, 0xce, 0xe7, 0xaf, 0x8c, 0xed, 0xde, 0xe1,
	0x70, 0x54, 0xc2, 0xe3, 0x55, 0x38, 0xd8, 0xec, 0xfb, 0x8d, 0xa1, 0xbf, 0xb9, 0xbc, 0xc3, 0x2c,
	0xbd, 0x3c, 0xc9, 0xb7, 0x76, 0x3e, 0x87, 0x00, 0x9b, 0x8e, 0x2f, 0x21, 0x81, 0x87, 0x0d, 0x98,
	0x6b, 0x36, 0x3a, 0x4d, 0xbf, 0x1d, 0x52, 0x9a, 0x1a, 0x95, 0x52, 0x0a, 0x91, 0x59, 0x78, 0xa3,
	0xc9, 0x34, 0x9e, 0xb9, 0xaf, 0xf2, 0x34, 0x3f, 0x86, 0xd8, 0x08, 0xbe, 0x0e, 0xf8, 0x51, 0xbb,
	0xdb, 0x7c, 0x97, 0x21, 0xc8, 0x5d, 0x19, 0x9b, 0xe5, 0x19, 0x0e, 0x97, 0x33, 0x83, 0xef, 0xc0,
	0x94, 0x5c, 0x6b, 0x19, 0xf8, 0x9a, 0xf2, 0x42, 0x4c, 0x18, 0x35, 0x68, 0x00, 0x8c, 0xdf, 0x00,
	0x68, 0x37, 0x06, 0xc3, 0x7a, 0x6f, 0xb3, 0x31, 0xf4, 0xcb, 0xb3, 0x23, 0xa0, 0xc6, 0xe0, 0xb9,
	0xd1, 0x07, 0x12, 0x72, 0x76, 0x06, 0x43, 0x7f, 0xab, 0x7c, 0x80, 0x5b, 0x4a, 0x7a, 0xb8, 0xf2,
	0x75, 0x25, 0x50, 0xcf, 0x30, 0x78, 0x3c, 0xa3, 0xa9, 0x68, 0x29, 0x53, 0xb9, 0x5a, 0x68, 0x2a,
	0x29, 0x4e, 0x71, 0x6b, 0xf9, 0x82, 0x12, 0x8f, 0x51, 0x49, 0x20, 0x8c, 0x60, 0x6c, 0xbb, 0xdf,
	0x96, 0x16, 0xc3, 0x7e, 0x32, 0x6f, 0x3d, 0x68, 0x3d, 0xee, 0x34, 0x86, 0xdb, 0xfd, 0x20, 0x1a,
	0x47, 0x03, 0xf8, 0x36, 0x4c, 0xfa, 0x9f, 0xed, 0xb5, 0xfa, 0x3b, 0xd2, 0x66, 0x76, 0x97, 0x9f,
	0x84, 0xad, 0x7c, 0x47, 0x81, 0x93, 0x39, 0x61, 0xf2, 0x19, 0xa5, 0xb2, 0x9a, 0x92, 0xca, 0x8d,
	0x5d, 0xa5, 0x92, 0xe2, 0x16, 0x97, 0xcc, 0x3a, 0x0f, 0xb1, 0x85, 0x70, 0xf8, 0x0e, 0x4c, 0x4b,
	0x3b, 0x1f, 0x94, 0x15, 0x6e, 0xd7, 0xa7, 0x8a, 0x5d, 0x04, 0x0d, 0x61, 0x2b, 0xdf, 0x54, 0xe0,
	0x44, 0x26, 0xca, 0x3f, 0xe3, 0x66, 0x49, 0x6a, 0xb3, 0x2f, 0xe5, 0x6f, 0x36, 0x8f, 0x57, 0x7c,
	0xab, 0xff, 0x08, 0x70, 0xaa, 0x18, 0x2c, 0xe3, 0x37, 0x3f, 0x16, 0x3a, 0xa0, 0x12, 0x77, 0x40,
	0x97, 0xf6, 0xf0, 0x67, 0x29, 0x2f, 0x14, 0x64, 0x1f, 0x63, 0x51, 0xf6, 0x81, 0x1b, 0x70, 0x34,
	0xee, 0xe4, 0xdc, 0x9d, 0x9e, 0xcf, 0xd2, 0x90, 0xf2, 0x78, 0xe1, 0xb6, 0xe2, 0x0c, 0x18, 0x68,
	0xcc, 0xc5, 0xe4, 0x92, 0x62, 0x8e, 0x24, 0x33, 0xbe, 0xc9, 0x5d, 0xe8, 0x0c, 0xcd, 0x99, 0xc1,
	0x6f, 0xc0, 0xc9, 0xf4, 0xa8, 0x0c, 0x9b, 0xc6, 0x26, 0x77, 0x9c, 0x33, 0xb4, 0x18, 0x80, 0xc5,
	0x96, 0xd6, 0x40, 0x7a, 0x82, 0x29, 0xee, 0x09, 0xc2, 0x67, 0x7c, 0x1b, 0x26, 0x58, 0xd8, 0x1e,
	0x94, 0xa7, 0xb9, 0xda, 0x9c, 0x2b, 0xde, 0x5d, 0xad, 0xdb, 0x1f, 0x52, 0x01, 0x8c, 0x1d, 0x98,
	0xeb, 0x8b, 0x48, 0xed, 0x6f, 0xd6, 0x38, 0xfa, 0x4c, 0xa1, 0xd9, 0xd3, 0x04, 0x60, 0xdc, 0xfb,
	0x26, 0x49, 0xfc, 0x9c, 0xbc, 0xe5, 0x5d, 0x18, 0xdf, 0x62, 0x35, 0xc0, 0x01, 0xae, 0x3e, 0x17,
	0xf6, 0x38, 0xdd, 0x2a, 0x2f, 0x05, 0x18, 0x02, 0x3b, 0xc3, 0xe6, 0xf6, 0x60, 0xd8, 0xdd, 0xe2,
	0xab, 0x0f, 0xd2, 0xc2, 0x83, 0x5c, 0xbe, 0x39, 0x33, 0xcc, 0x2d, 0x0f, 0xb6, 0x1f, 0x89, 0x94,
	0x50, 0x6d, 0xb2, 0x08, 0x51, 0x9e, 0x13, 0x6e, 0x39, 0x35, 0xcc, 0x20, 0xfb, 0x7e, 0xbb, 0xdb,
	0xd8, 0x54, 0x9f, 0x36, 0x5a, 0x6d, 0x86, 0x5d, 0x3e, 0x24, 0x20, 0x53, 0xc3, 0xf8, 0x22, 0x1c,
	0x7c, 0x2a, 0x8e, 0xd9, 0xda, 0xde, 0x7a, 0xe4, 0xf7, 0xcb, 0x88, 0xeb, 0x42, 0x72, 0x10, 0xbf,
	0x16, 0xe5, 0x0f, 0x87, 0xb9, 0x74, 0x5e, 0xd8, 0x23, 0x7f, 0x88, 0xb2, 0x86, 0x4f, 0xc2, 0xa1,
	0x66, 0xb7, 0xd3, 0xf1, 0x9b, 0x43, 0x7f, 0x53, 0xe6, 0x0d, 0x98, 0x2b, 0xca, 0xed, 0x3d, 0x04,
	0xa5, 0x85, 0x58, 0x71, 0x43, 0x4e, 0x13, 0xc3, 0x16, 0x20, 0x16, 0x5f, 0x9f, 0xfa, 0x51, 0x22,
	0x58, 0x3e, 0xc2, 0xd7, 0x58, 0xc9, 0x61, 0x10, 0x01, 0x89, 0x65, 0x66, 0x70, 0x99, 0xa1, 0x3c,
	0x69, 0x0c, 0xea, 0x9d, 0xc1, 0x4e, 0xa7, 0xe9, 0x6f, 0xb2, 0xa0, 0xae, 0x37, 0x86, 0x0d, 0xea,
	0x37, 0xbb, 0xfd, 0xcd, 0xf2, 0x51, 0x2e, 0xc4, 0x62, 0x00, 0x6c, 0x41, 0x25, 0x36, 0x99, 0x53,
	0x26, 0x70, 0x32, 0xc7, 0x38, 0x99, 0x11, 0x20, 0xf1, 0x9b, 0x70, 0x3a, 0x03, 0xc5, 0xcd, 0x48,
	0x10, 0x3a, 0xce, 0x09, 0xed, 0x06, 0xc2, 0x54, 0xe1, 0x49, 0x63, 0x20, 0x86, 0xa5, 0xd2, 0x9c,
	0x10, 0xaa, 0x90, 0x1a, 0xae, 0xfc, 0x40, 0x81, 0xb3, 0x05, 0x65, 0xd8, 0x33, 0x3a, 0xf4, 0x7b,
	0x29, 0x87, 0x7e, 0x6b, 0x6f, 0x87, 0x5e, 0x1c, 0xc1, 0xfe, 0x05, 0x60, 0x7e, 0x2f, 0xe0, 0xe7,
	0xce, 0xfd, 0xb9, 0x73, 0x7f, 0xee, 0xdc, 0x9f, 0x3b, 0xf7, 0xe7, 0xce, 0x3d, 0xed, 0xdc, 0xbf,
	0xa6, 0xc0, 0x91, 0x44, 0x47, 0xec, 0x19, 0x5d, 0xba, 0x9a, 0x72, 0xe9, 0x57, 0xf2, 0x5d, 0x7a,
	0x9a, 0x4f, 0xdc, 0x91, 0x7f, 0x7b, 0x9c, 0x37, 0x06, 0x73, 0x40, 0x32, 0xee, 0xfb, 0x28, 0x4c,
	0xf8, 0x5b, 0x8d, 0x56, 0x5b, 0x16, 0x67, 0xe2, 0x81, 0x39, 0xac, 0x77, 0xb6, 0xdb, 0x6d, 0x2b,
	0xf2, 0xcc, 0xe1, 0x33, 0x2b, 0xe9, 0xde, 0x69, 0xf5, 0x07, 0x43, 0x3e, 0x39, 0x2e, 0x4a, 0xba,
	0x70, 0x80, 0x61, 0x32, 0xdb, 0xe6, 0x93, 0xc2, 0x9d, 0x86, 0xcf, 0xdc, 0x60, 0xbb, 0xdb, 0x9d,
	0x61, 0x7f, 0x47, 0x6b, 0xb4, 0xdb, 0xad, 0xce, 0x63, 0x8d, 0xd9, 0xfd, 0x24, 0x6f, 0x4c, 0xe5,
	0xcc, 0xe0, 0x79, 0x98, 0xed, 0x3d, 0xe9, 0x76, 0x7c, 0x69, 0x5a, 0x53, 0x1c, 0x30, 0x3e, 0x84,
	0xef, 0x32, 0x6e, 0x9d, 0xc7, 0xdb, 0x8d, 0xc7, 0xa2, 0x15, 0x30, 0xbb, 0x74, 0x3a, 0x47, 0x5a,
	0xa6, 0x04, 0xa1, 0x21, 0x70, 0xdc, 0xd5, 0xcd, 0x3c, 0xbb, 0xab, 0x83, 0x7d, 0xba, 0xba, 0x57,
	0xc2, 0x58, 0x39, 0xcb, 0x9d, 0xdd, 0xd9, 0x82, 0xf6, 0x47, 0x2a, 0x46, 0x12, 0x98, 0x13, 0x7d,
	0x26, 0x36, 0x67, 0xb6, 0x06, 0xc3, 0xf2, 0x01, 0xee, 0x02, 0xf2, 0xd0, 0xb5, 0x10, 0x90, 0xa6,
	0x90, 0x2a, 0xdf, 0x50, 0xe0, 0x78, 0xba, 0x39, 0xfb, 0x8c, 0x3a, 0xaa, 0xa7, 0x74, 0xf4, 0x5a,
	0x9e, 0x3f, 0xcb, 0x65, 0x15, 0x57, 0xd3, 0xff, 0x18, 0x83, 0x93, 0x85, 0x50, 0xfb, 0xea, 0xbe,
	0x25, 0x9a, 0xc2, 0x63, 0xe9, 0xa6, 0x70, 0xb6, 0xdd, 0x39, 0x9e, 0xd7, 0xee, 0x64, 0x1c, 0x06,
	0x2c, 0x22, 0x76, 0x9a, 0x42, 0x77, 0x27, 0x68, 0xf8, 0x8c, 0x5f, 0x0f, 0x8f, 0x6e, 0xb2, 0x30,
	0x4e, 0x45, 0xfb, 0x48, 0x1d, 0xa0, 0x01, 0x07, 0xb6, 0xa5, 0xa3, 0xe3, 0xc7, 0x37, 0xc5, 0x8f,
	0xef, 0xd2, 0xae, 0x24, 0x42, 0xcf, 0x98, 0x40, 0x8d, 0x2b, 0xee, 0xf4, 0xb3, 0x2b, 0xee, 0xcc,
	0x3e, 0x15, 0xf7, 0x0c, 0xcc, 0x6c, 0xf7, 0x58, 0xe4, 0xab, 0xf7, 0xdb, 0x5c, 0xeb, 0x67, 0x68,
	0x34, 0xc0, 0xd3, 0xda, 0x82, 0x9e, 0xfd, 0x4f, 0x31, 0xad, 0xdd, 0x95, 0x63, 0x5c, 0xcd, 0x7e,
	0x3c, 0x06, 0xf3, 0x7b, 0x01, 0x7f, 0x88, 0xda, 0x96, 0xbc, 0x82, 0x18, 0xcf, 0x5c, 0x41, 0xe8,
	0xd1, 0x15, 0xc4, 0x04, 0xd7, 0x83, 0xc5, 0x51, 0xae, 0x19, 0x74, 0x8e, 0x12, 0x5d, 0x57, 0xbc,
	0x15, 0xbf, 0xae, 0x98, 0xe4, 0x74, 0xae, 0xed, 0xe7, 0xba, 0x22, 0x76, 0x55, 0x11, 0xd7, 0xa9,
	0xa9, 0x67, 0xd7, 0xa9, 0xe9, 0x7d, 0xea, 0x94, 0x4c, 0x8a, 0x59, 0xd4, 0xe5, 0xfa, 0x28, 0x93,
	0x62, 0xf6, 0xcc, 0x24, 0xdc, 0x1a, 0xe8, 0x7e, 0xdb, 0x0f, 0x72, 0xd1, 0x69, 0x1a, 0x0d, 0x30,
	0x09, 0xb7, 0x06, 0x64, 0xb3, 0x35, 0xe4, 0x99, 0xd9, 0xac, 0x90, 0x70, 0x34, 0x12, 0x3a, 0xba,
	0xf8, 0xdd, 0xcb, 0x4f, 0xd9, 0xd1, 0x65, 0x59, 0xc5, 0x35, 0xb0, 0x2b, 0xfc, 0x5c, 0x2e, 0x50,
	0xb2, 0x45, 0xaa, 0x14, 0xb7, 0x48, 0x4b, 0xfb, 0x68, 0x91, 0x7e, 0x4f, 0x81, 0xd3, 0xb9, 0x37,
	0x37, 0xcf, 0x28, 0x06, 0x23, 0x25, 0x86, 0x97, 0x73, 0x55, 0xad, 0x90, 0x5f, 0x5c, 0x16, 0x37,
	0xe1, 0xdc, 0xee, 0x90, 0x99, 0xbb, 0xcb, 0xff, 0x56, 0xe0, 0x50, 0x2a, 0xf1, 0xcc, 0x98, 0xeb,
	0xeb, 0xa9, 0x2a, 0x74, 0x5f, 0xee, 0x39, 0xa6, 0xff, 0x63, 0xcf, 0xae, 0xff, 0xe3, 0xfb, 0xd3,
	0xff, 0xca, 0x36, 0xe0, 0xac, 0xb7, 0xc7, 0x08, 0xc6, 0xde, 0xf5, 0x77, 0x82, 0x16, 0xfa, 0xbb,
	0xfe, 0x0e, 0x2e, 0xc3, 0x54, 0xb3, 0xdb, 0x19, 0xfa, 0x9d, 0x61, 0x70, 0x9d, 0x2d, 0x1f, 0xf1,
	0x2d, 0x18, 0x1f, 0xee, 0xf4, 0x44, 0x86, 0x36, 0x97, 0x5b, 0x53, 0x04, 0x64, 0x59, 0x39, 0x4a,
	0x39, 0x70, 0xe5, 0x4b, 0x0a, 0xcc, 0x8a, 0x24, 0x21, 0x5f, 0x92, 0xf3, 0x30, 0xdb, 0xec, 0x6e,
	0xf5, 0x1a, 0x1d, 0x5e, 0xf9, 0x4b, 0x96, 0xf1, 0x21, 0x56, 0xf3, 0x04, 0x8f, 0x22, 0x31, 0x13,
	0x2e, 0x30, 0x39, 0xc8, 0xd4, 0xfa, 0x69, 0x63, 0x28, 0x21, 0x64, 0x9a, 0x18, 0x0e, 0x54, 0xde,
	0x2f, 0x01, 0x44, 0xa9, 0xca, 0xbe, 0xbc, 0xef, 0x71, 0x98, 0x64, 0x11, 0x31, 0x74, 0xbd, 0xf2,
	0x09, 0xbf, 0x19, 0xaa, 0xc0, 0x38, 0x97, 0xc7, 0xc2, 0xae, 0xd9, 0x11, 0xdf, 0x7c, 0x4a, 0x0f,
	0x56, 0x60, 0xba, 0xdf, 0x6d, 0xfb, 0x3c, 0x2b, 0x15, 0x57, 0x65, 0x8b, 0x7b, 0xd3, 0xa0, 0x12,
	0x83, 0x86, 0xb8, 0xf8, 0x0e, 0x4c, 0x8a, 0xd5, 0xca, 0xfb, 0xb2, 0x73, 0x85, 0x54, 0x04, 0x05,
	0x09, 0x8d, 0x6f, 0xc2, 0xf8, 0x76, 0x74, 0x37, 0x76, 0xa6, 0xe0, 0x3c, 0x05, 0x0e, 0x87, 0xac,
	0x5c, 0x87, 0xe9, 0x20, 0xb9, 0xcd, 0xc8, 0x30, 0xe8, 0xac, 0x94, 0x62, 0x97, 0xf6, 0xff, 0xaa,
	0x40, 0x39, 0x88, 0x00, 0xe9, 0x9e, 0x09, 0x5e, 0x04, 0x14, 0x4f, 0x88, 0xac, 0xe8, 0xc6, 0x3f,
	0x33, 0x8e, 0x97, 0xb2, 0x2d, 0x9a, 0x98, 0xba, 0xe4, 0xce, 0xb1, 0x62, 0xac, 0xa0, 0x45, 0x12,
	0xab, 0x33, 0x76, 0x03, 0xa9, 0xfc, 0xe7, 0x38, 0x4c, 0xc9, 0x32, 0x79, 0x5f, 0x2a, 0x93, 0xd7,
	0x64, 0x9a, 0x87, 0xd9, 0x4d, 0x7f, 0xd0, 0xec, 0xb7, 0x7a, 0x4c, 0x18, 0x52, 0x43, 0xe3, 0x43,
	0xcc, 0xf0, 0x86, 0x8d, 0xc7, 0x3c, 0x61, 0x9b, 0x10, 0xef, 0x0a, 0xc8, 0xc7, 0xd8, 0x8d, 0xea,
	0xe4, 0x6e, 0x37, 0xaa, 0x6c, 0x9d, 0xc5, 0xae, 0xe6, 0x67, 0x18, 0x6a, 0xcf, 0x01, 0xf4, 0x78,
	0x22, 0x60, 0xf4, 0xd6, 0x6f, 0xcb, 0xbb, 0xd0, 0xd8, 0x48, 0x62, 0xfe, 0x8e, 0xcc, 0xef, 0x62,
	0x23, 0xf8, 0xa3, 0x50, 0x8e, 0xa0, 0x6b, 0x7e, 0x67, 0x33, 0x7a, 0x1f, 0x43, 0x86, 0xdf, 0xc2,
	0x79, 0xfc, 0x08, 0xce, 0x46, 0x73, 0x72, 0x50, 0x6f, 0x0d, 0x78, 0x2e, 0xe4, 0xb6, 0xda, 0x6d,
	0xde, 0xf7, 0xd9, 0x6b, 0x33, 0xbb, 0x93, 0xc0, 0x37, 0xe1, 0x88, 0xc0, 0x76, 0x82, 0x46, 0xce,
	0x5a, 0x77, 0x30, 0xe4, 0xad, 0xa0, 0x19, 0x9a, 0x37, 0x55, 0xf9, 0xe7, 0x12, 0x1c, 0x88, 0x37,
	0x5c, 0x9e, 0xab, 0xd3, 0x3e, 0x22, 0xd7, 0xfb, 0x25, 0x38, 0x9e, 0xff, 0x2a, 0xc3, 0x73, 0x31,
	0xee, 0x43, 0x8c, 0x3f, 0x56, 0xe0, 0x44, 0x41, 0x9e, 0xcf, 0x2c, 0x52, 0x68, 0x6b, 0xcc, 0x0b,
	0xc7, 0x46, 0xf0, 0xa7, 0x60, 0x6e, 0xb3, 0x33, 0xd0, 0x9e, 0xf8, 0x41, 0x43, 0x5d, 0xe6, 0x3d,
	0xaf, 0x8e, 0x5e, 0x4b, 0xe8, 0x09, 0x7c, 0x9a, 0xa2, 0x87, 0xef, 0xc3, 0xcc, 0x60, 0xd0, 0x96,
	0xc4, 0x45, 0x86, 0x71, 0x6b, 0x74, 0xe2, 0x4e, 0x80, 0x4a, 0x23, 0x2a, 0x95, 0xf7, 0x15, 0x38,
	0x59, 0x58, 0x90, 0x7c, 0xd8, 0x2f, 0x2f, 0xe1, 0x07, 0xc9, 0x70, 0x16, 0xbb, 0x41, 0xc8, 0x6b,
	0x92, 0x17, 0x45, 0x45, 0x9a, 0x21, 0x52, 0xf9, 0x3c, 0x94, 0x8b, 0x5a, 0xea, 0xa2, 0xa8, 0x51,
	0x79, 0x53, 0x54, 0xbe, 0x57, 0x18, 0x3e, 0xe3, 0x95, 0x4c, 0xcf, 0xbe, 0x34, 0x52, 0xcb, 0x3f,
	0x85, 0x55, 0xf9, 0x91, 0x02, 0xb3, 0xb1, 0x79, 0xbc, 0xcc, 0x5f, 0x2c, 0xe0, 0x78, 0xf2, 0x2d,
	0xc9, 0xcb, 0xbb, 0x53, 0x0c, 0xc6, 0x68, 0x88, 0x97, 0x2b, 0xe8, 0x94, 0x2d, 0x8e, 0x65, 0x6d,
	0xf1, 0x0d, 0x98, 0x1c, 0x34, 0x9f, 0xf8, 0xb2, 0x0f, 0x38, 0xb7, 0x74, 0x71, 0x77, 0xbe, 0x0e,
	0x87, 0xa5, 0x12, 0x87, 0x17, 0x3e, 0x62, 0x32, 0xbc, 0x7a, 0x89, 0x06, 0x2a, 0xff, 0xa4, 0xc0,
	0xf9, 0x3d, 0xfb, 0xd9, 0x78, 0x0d, 0x0e, 0xc4, 0xcf, 0x47, 0xd6, 0x33, 0x17, 0x47, 0x79, 0x61,
	0x8a, 0x26, 0x30, 0xf1, 0x6a, 0xaa, 0x82, 0xb8, 0x31, 0x5a, 0x7f, 0x3d, 0x53, 0x4d, 0x54, 0xbe,
	0x5b, 0x82, 0x53, 0xc5, 0xf7, 0x51, 0x85, 0x99, 0x93, 0xb2, 0x4b, 0xe6, 0xf4, 0x45, 0x05, 0xca,
	0xe9, 0x09, 0xad, 0x31, 0xf4, 0x1f, 0x77, 0x65, 0x5d, 0x38, 0xb7, 0x44, 0xf6, 0x75, 0x2b, 0xe6,
	0x14, 0x10, 0xa3, 0x85, 0x6c, 0x3e, 0x84, 0xec, 0xed, 0x47, 0x25, 0x38, 0x9c, 0x39, 0x85, 0xe7,
	0xf7, 0x89, 0x1f, 0xee, 0x7d, 0x62, 0xe5, 0x27, 0x63, 0x70, 0x7a, 0x97, 0x97, 0x03, 0x33, 0xf2,
	0x8e, 0xc5, 0xbe, 0xd2, 0xb3, 0xc7, 0xbe, 0xb1, 0xfd, 0x37, 0x14, 0xa3, 0x16, 0xda, 0x78, 0xba,
	0x85, 0xf6, 0x33, 0x97, 0xe6, 0x66, 0xbf, 0xf5, 0x94, 0x97, 0x94, 0x53, 0x22, 0x47, 0x09, 0x9e,
	0x43, 0x75, 0x9a, 0x1e, 0x41, 0x9d, 0x66, 0x3e, 0x3c, 0x75, 0x0a, 0x2f, 0x85, 0x61, 0x1f, 0x97,
	0xc2, 0x95, 0x1e, 0xcc, 0x25, 0x5f, 0x9e, 0x1c, 0xf1, 0xb6, 0x27, 0x71, 0xa3, 0x33, 0x96, 0x73,
	0xa3, 0x13, 0xde, 0x05, 0x8d, 0x27, 0xef, 0x82, 0x2a, 0x5f, 0x55, 0x60, 0x26, 0xac, 0x49, 0x7f,
	0x9e, 0x77, 0x4b, 0x8b, 0xff, 0x77, 0x03, 0x66, 0xc2, 0x3f, 0x02, 0xe0, 0x03, 0x30, 0x6d, 0xd9,
	0x1e, 0xa1, 0xd4, 0xa6, 0xe8, 0x23, 0xf8, 0x24, 0x1c, 0x33, 0x2c, 0x97, 0x50, 0x4b, 0x35, 0x3d,
	0x87, 0xd0, 0x75, 0x42, 0xe5, 0x94, 0x82, 0x8f, 0x03, 0x36, 0xac, 0x75, 0xd5, 0x34, 0x74, 0xaf,
	0xee, 0x10, 0xea, 0x19, 0x56, 0xad, 0xee, 0xa2, 0x12, 0x9e, 0x87, 0x33, 0xd9, 0x71, 0xef, 0x81,
	0xe1, 0xae, 0x79, 0x2e, 0x79, 0xe8, 0xa2, 0x31, 0x8c, 0x61, 0xce, 0xb2, 0x5d, 0x4f, 0xad, 0xbb,
	0x6b, 0x36, 0x35, 0xde, 0x26, 0x3a, 0x1a, 0xc7, 0xa7, 0xe1, 0x84, 0x61, 0x39, 0xf5, 0x95, 0x15,
	0x43, 0x33, 0x88, 0xe5, 0x7a, 0x35, 0x6a, 0xac, 0x1b, 0x26, 0x59, 0x25, 0x0e, 0x9a, 0x60, 0xab,
	0xa0, 0x64, 0x85, 0x12, 0x67, 0xcd, 0x73, 0xed, 0x7b, 0xc4, 0xf2, 0x24, 0x03, 0x34, 0xc9, 0x56,
	0x41, 0x2c, 0xbd, 0x66, 0x1b, 0x96, 0xeb, 0x31, 0xa2, 0x2b, 0x76, 0xdd, 0xd2, 0xd1, 0x14, 0x7e,
	0x11, 0x2e, 0xd4, 0x6c, 0x97, 0x58, 0xae, 0xa1, 0x9a, 0xe6, 0x86, 0xb7, 0x42, 0xd5, 0xba, 0xee,
	0x2d, 0x93, 0x35, 0x75, 0xdd, 0xb0, 0xa9, 0xa7, 0x13, 0x97, 0x68, 0x2e, 0xd1, 0xd1, 0x34, 0x7e,
	0x01, 0x4e, 0x53, 0xe2, 0x69, 0x6a, 0xcd, 0xd5, 0xd6, 0x54, 0x8f, 0x12, 0xa7, 0x66, 0x5b, 0x0e,
	0x09, 0x39, 0xcc, 0xe0, 0x4b, 0x70, 0x5e, 0xb7, 0x1f, 0x58, 0xa6, 0xad, 0xea, 0x49, 0xee, 0x9e,
	0x4d, 0x3d, 0xf2, 0xb0, 0x66, 0x50, 0xa2, 0x23, 0xc0, 0xe7, 0xe0, 0x94, 0x61, 0x69, 0x36, 0xa5,
	0x44, 0x73, 0xc5, 0xc6, 0x35, 0x4a, 0x74, 0xb1, 0x00, 0x07, 0xcd, 0x32, 0xb1, 0x58, 0xb6, 0x47,
	0x8d, 0xd5, 0x35, 0xd7, 0xf1, 0x5c, 0xdb, 0x73, 0x88, 0xc9, 0x97, 0xe0, 0xa9, 0x9a, 0x6b, 0xd8,
	0x16, 0x3a, 0x80, 0xcf, 0x40, 0x79, 0xc5, 0x30, 0x89, 0xe7, 0x18, 0x6f, 0x13, 0xcf, 0x34, 0xaa,
	0x86, 0xeb, 0x91, 0x87, 0x1a, 0x21, 0x3a, 0xd1, 0xd1, 0x41, 0x5c, 0x81, 0x73, 0xaa, 0xae, 0x1b,
	0x0c, 0x56, 0x35, 0xbd, 0x75, 0x42, 0x8d, 0x15, 0x43, 0x53, 0xd9, 0xa3, 0xb7, 0xa2, 0x1a, 0x26,
	0xd1, 0xd1, 0x1c, 0x7e, 0x15, 0x6e, 0x33, 0x6a, 0xeb, 0x44, 0x2c, 0xa0, 0x5a, 0x77, 0x5c, 0x6f,
	0x99, 0x78, 0x9a, 0x6d, 0x59, 0x82, 0x97, 0x6b, 0x7b, 0xaa, 0xeb, 0x99, 0x44, 0x75, 0x5c, 0xcf,
	0xb6, 0x88, 0xa7, 0x99, 0x4c, 0xd8, 0xe8, 0x10, 0x3e, 0x01, 0x47, 0x82, 0x5d, 0xc5, 0x97, 0x8d,
	0xf0, 0x31, 0x38, 0x5c, 0x53, 0x1d, 0xe7, 0x81, 0x4d, 0x19, 0xb6, 0xed, 0x3d, 0x20, 0xea, 0x3d,
	0x74, 0x18, 0x5f, 0x86, 0x8a, 0x65, 0x7b, 0x92, 0x99, 0xa4, 0xcf, 0x96, 0xc2, 0x18, 0x58, 0x1b,
	0x01, 0x5d, 0x8c, 0x17, 0xe1, 0x72, 0x11, 0x9c, 0x56, 0xa7, 0x94, 0x9d, 0xb4, 0x84, 0x3d, 0x82,
	0x0f, 0xc3, 0x41, 0x21, 0xdf, 0x40, 0xa8, 0x47, 0xf1, 0x51, 0x40, 0x62, 0x3a, 0x76, 0xb6, 0xc7,
	0xd8, 0x62, 0x39, 0x51, 0x8d, 0x38, 0x5c, 0x94, 0x6f, 0x13, 0x6a, 0xd7, 0x1c, 0x74, 0x9c, 0x29,
	0x16, 0xdf, 0x78, 0x04, 0x7c, 0x42, 0x68, 0xb0, 0xd8, 0x99, 0x6e, 0x6b, 0xf5, 0x2a, 0x23, 0x46,
	0x6d, 0xdb, 0x45, 0xe5, 0xb8, 0x06, 0x13, 0xcb, 0xa5, 0x1b, 0x5c, 0x8b, 0xd0, 0x49, 0xc6, 0x35,
	0x3c, 0xf1, 0x60, 0x2d, 0xa7, 0x18, 0x57, 0x4e, 0x5c, 0x57, 0x5d, 0x35, 0xc6, 0xe1, 0x34, 0xe3,
	0x10, 0x4d, 0xdc, 0x23, 0x1b, 0xa1, 0xee, 0x9c, 0xc1, 0x67, 0xe1, 0x64, 0x34, 0xa5, 0xd9, 0x16,
	0x53, 0xc8, 0x70, 0xfa, 0x2c, 0xd3, 0x99, 0x68, 0x5a, 0x27, 0x26, 0x71, 0x89, 0xb7, 0x62, 0xd3,
	0x65, 0x43, 0xd7, 0x89, 0x85, 0xce, 0x31, 0xa3, 0x88, 0xcd, 0xd7, 0x6b, 0x26, 0x3b, 0x71, 0xc2,
	0x78, 0xa0, 0x17, 0xf0, 0x29, 0x38, 0x1e, 0x4d, 0x3a, 0x1b, 0x96, 0xe6, 0xd1, 0xba, 0x65, 0x19,
	0xd6, 0x2a, 0x9a, 0xc7, 0x2f, 0xc4, 0x09, 0xaf, 0x13, 0xea, 0x30, 0x99, 0x57, 0x0d, 0xa7, 0xaa,
	0xba, 0xda, 0x1a, 0xfa, 0x1b, 0x25, 0xe4, 0xac, 0x11, 0xea, 0x0a, 0x45, 0x22, 0xb1, 0x3d, 0x9d,
	0x0f, 0x89, 0xab, 0x9a, 0x66, 0xd7, 0x13, 0xe2, 0xaf, 0x30, 0xb1, 0xb9, 0xa4, 0x5a, 0x33, 0x93,
	0x38, 0x17, 0xf0, 0x6d, 0xb8, 0xc9, 0x81, 0xe9, 0x86, 0xa7, 0xa9, 0xa6, 0x69, 0x58, 0xab, 0x9e,
	0x66, 0xeb, 0xc4, 0xd3, 0x6d, 0xe2, 0x70, 0x40, 0xce, 0xdd, 0xab, 0xad, 0x31, 0xcd, 0xb3, 0xea,
	0xd5, 0x65, 0x42, 0xd1, 0x45, 0x5c, 0x86, 0xa3, 0xc1, 0x21, 0x24, 0x66, 0x2e, 0x31, 0xd5, 0x4b,
	0x38, 0x12, 0x6a, 0x9b, 0x04, 0x5d, 0xc6, 0x57, 0xe0, 0x52, 0xa8, 0xaa, 0x42, 0x37, 0xf8, 0xec,
	0x2a, 0xb5, 0xeb, 0x35, 0x4f, 0xb3, 0xab, 0xcb, 0x86, 0xc5, 0xcd, 0x02, 0xbd, 0x88, 0x11, 0x1c,
	0x20, 0x55, 0xd5, 0x30, 0x3d, 0xf2, 0xd0, 0x70, 0x5c, 0x07, 0x2d, 0x30, 0x63, 0x16, 0xfb, 0x32,
	0x29, 0x51, 0xf5, 0x8d, 0xa4, 0x69, 0x68, 0x76, 0xb5, 0xa6, 0x5a, 0x1b, 0xe8, 0x0a, 0x63, 0x1d,
	0x6c, 0x25, 0xda, 0xe1, 0x22, 0x53, 0x0c, 0x4a, 0x34, 0x66, 0x0a, 0xd1, 0xe8, 0x55, 0x46, 0xb3,
	0xaa, 0x3e, 0x34, 0xaa, 0xf5, 0xaa, 0x5c, 0xbb, 0x67, 0xaf, 0x04, 0x4b, 0x0b, 0x0d, 0xf8, 0x1a,
	0xf3, 0x48, 0xc2, 0x1f, 0x0a, 0x61, 0x18, 0x96, 0xb7, 0x4c, 0x98, 0x8c, 0xc4, 0xb9, 0xeb, 0x9e,
	0xe3, 0xaa, 0x6e, 0xdd, 0x41, 0x2f, 0xf1, 0x35, 0x5a, 0xea, 0xb2, 0x49, 0xd8, 0x9a, 0xa4, 0x56,
	0x6c, 0xd8, 0x75, 0xea, 0xd9, 0x0f, 0xac, 0xe0, 0x40, 0xd0, 0x75, 0x7c, 0x11, 0xe6, 0xe3, 0xfb,
	0x8f, 0x19, 0x57, 0xb4, 0xb8, 0x1b, 0xf8, 0x2a, 0xbc, 0x58, 0x00, 0xb5, 0xa6, 0x3a, 0xde, 0x32,
	0x21, 0x56, 0xb0, 0x00, 0x74, 0x93, 0xf9, 0x98, 0x65, 0x35, 0xee, 0xd7, 0x84, 0xe5, 0x0a, 0x2f,
	0x63, 0x1a, 0xd6, 0x3d, 0xf4, 0x32, 0xf3, 0x97, 0xd1, 0xea, 0x88, 0x6e, 0xb8, 0xe1, 0x06, 0x18,
	0x03, 0xb4, 0x94, 0x5e, 0x57, 0x20, 0xe9, 0x04, 0xab, 0x5b, 0x4c, 0x89, 0x4c, 0xd5, 0x5a, 0xad,
	0xab, 0xab, 0x71, 0x25, 0xba, 0xcd, 0x14, 0x2f, 0x31, 0xee, 0xd4, 0x6b, 0x35, 0x9b, 0x32, 0x9c,
	0x57, 0xf0, 0x11, 0x38, 0x14, 0x1a, 0x81, 0x64, 0x77, 0x87, 0x99, 0xa5, 0x3c, 0x13, 0xc3, 0xf1,
	0x18, 0x2b, 0xcf, 0xb6, 0xcc, 0x0d, 0x74, 0x97, 0x9d, 0x61, 0x34, 0x11, 0x30, 0x7e, 0x95, 0x31,
	0x90, 0xc3, 0x9a, 0x5d, 0xad, 0xda, 0x16, 0xb7, 0x58, 0xb6, 0x0f, 0xf4, 0x1a, 0x5e, 0x80, 0x8b,
	0xf2, 0x74, 0x6a, 0xb6, 0xe3, 0x18, 0xf1, 0x4d, 0xaa, 0x96, 0xed, 0xae, 0x11, 0x2a, 0xb8, 0x7e,
	0x94, 0x51, 0xa9, 0xaa, 0x56, 0x5d, 0x35, 0x3d, 0x4a, 0x6a, 0xaa, 0x41, 0x3d, 0x4a, 0xee, 0xd7,
	0xb9, 0xa3, 0x78, 0x9d, 0x2d, 0x93, 0x01, 0xb3, 0xb3, 0x65, 0x7e, 0x7e, 0xc3, 0xd2, 0xd0, 0x1b,
	0xcc, 0x94, 0x59, 0xfc, 0x34, 0x34, 0xc2, 0x0e, 0x5a, 0xbb, 0x17, 0xdb, 0xf4, 0xc7, 0x58, 0x6c,
	0x48, 0x4e, 0xba, 0x1b, 0xb5, 0xb8, 0x58, 0x7e, 0x81, 0xad, 0x2c, 0x07, 0x22, 0xb0, 0xec, 0x08,
	0xf2, 0xe3, 0xf8, 0x1a, 0x2c, 0xec, 0x02, 0x29, 0xb7, 0x27, 0x1c, 0x32, 0x7a, 0x13, 0xbf, 0x04,
	0x57, 0x76, 0x81, 0xa6, 0xa4, 0x6a, 0xaf, 0x13, 0x4f, 0x27, 0x2b, 0x6a, 0xdd, 0x74, 0x91, 0xca,
	0xdc, 0x7e, 0x0e, 0x78, 0x60, 0x8e, 0x12, 0x0d, 0x2d, 0x67, 0x77, 0x6b, 0x38, 0x41, 0x94, 0xd2,
	0x98, 0x01, 0x67, 0x26, 0x9d, 0x0d, 0xc7, 0x25, 0xd5, 0xd4, 0x89, 0xeb, 0xf8, 0x06, 0x5c, 0x4d,
	0x82, 0x6a, 0x75, 0xc7, 0xb5, 0xab, 0x1e, 0x03, 0x70, 0x3c, 0xc2, 0xf5, 0x50, 0x8f, 0x64, 0x4f,
	0x58, 0x04, 0xdc, 0x43, 0x4e, 0xc2, 0x09, 0xf1, 0x74, 0x24, 0x82, 0x40, 0x2b, 0x59, 0x09, 0x3b,
	0xae, 0x4d, 0x99, 0x16, 0xea, 0x86, 0x73, 0xcf, 0xab, 0xaa, 0x0f, 0x45, 0x48, 0x46, 0xab, 0x7b,
	0x41, 0x1a, 0x96, 0x84, 0x5c, 0xc3, 0x37, 0xe1, 0x5a, 0x12, 0xd2, 0x5e, 0x7e, 0x8b, 0xa5, 0x07,
	0x01, 0xc2, 0xfd, 0xba, 0x9d, 0x88, 0x25, 0x06, 0xbe, 0x0e, 0x8b, 0x39, 0xeb, 0x4f, 0xa1, 0x85,
	0xfb, 0x7d, 0x2b, 0x2b, 0xa0, 0x3c, 0xf8, 0x28, 0xa4, 0xdc, 0x2b, 0x40, 0x70, 0xd6, 0x54, 0xca,
	0x5d, 0x50, 0x1a, 0xc1, 0x64, 0xe6, 0x9c, 0x39, 0x2d, 0x61, 0xd1, 0xdc, 0x3b, 0xd5, 0x4c, 0x7b,
	0x03, 0x55, 0x59, 0xa0, 0xcb, 0x40, 0xb1, 0x7d, 0xad, 0xb9, 0x6e, 0x0d, 0x59, 0x59, 0xbd, 0xa1,
	0x84, 0x47, 0x57, 0xae, 0x8b, 0xeb, 0xaa, 0x61, 0xb2, 0x83, 0x44, 0x36, 0x4b, 0x17, 0x52, 0x56,
	0xb2, 0x6a, 0x58, 0x0f, 0xbd, 0x75, 0x83, 0xba, 0x75, 0xd5, 0x5c, 0xb3, 0x1d, 0x97, 0x79, 0xb0,
	0x15, 0x63, 0x15, 0xd5, 0xf0, 0x2d, 0xb8, 0x91, 0x3a, 0x86, 0xfa, 0xb2, 0x6e, 0x57, 0x55, 0xc3,
	0x0a, 0x52, 0x83, 0xc0, 0xf5, 0xe8, 0x86, 0xc3, 0x15, 0x05, 0xdd, 0xe7, 0xe9, 0x0c, 0xb5, 0xf9,
	0x6c, 0x24, 0x76, 0xca, 0xf4, 0x35, 0x18, 0x36, 0x22, 0x3c, 0x7b, 0x9d, 0x50, 0xe4, 0x30, 0x8f,
	0x97, 0x33, 0xa9, 0xa9, 0x96, 0x46, 0x18, 0x51, 0x97, 0x05, 0xd3, 0x1c, 0x80, 0x20, 0x1a, 0xd7,
	0x59, 0x62, 0x17, 0xb9, 0x4c, 0x81, 0xe7, 0x49, 0x04, 0xb4, 0x9e, 0x9a, 0xa5, 0x84, 0x85, 0xd5,
	0x60, 0xf6, 0x01, 0x93, 0x88, 0xcc, 0x9e, 0x92, 0x9b, 0x15, 0x11, 0x8d, 0x45, 0x91, 0x1a, 0xb5,
	0xd9, 0x69, 0xa3, 0x87, 0xf1, 0x50, 0x6a, 0x9b, 0xba, 0x17, 0xe4, 0x6d, 0x68, 0x83, 0x39, 0x18,
	0x09, 0x26, 0xc3, 0x4c, 0xca, 0xd2, 0xde, 0x96, 0x82, 0xe1, 0x10, 0x91, 0x60, 0x7e, 0x11, 0x9f,
	0x82, 0x63, 0xc1, 0x70, 0xd2, 0x75, 0xfc, 0xb5, 0xc2, 0xa2, 0x45, 0xea, 0xb0, 0xd4, 0x2a, 0xf1,
	0xea, 0x56, 0x74, 0xa0, 0x9f, 0x60, 0xa2, 0xc9, 0x81, 0x09, 0x32, 0xa0, 0x5f, 0x62, 0xfe, 0x47,
	0xb3, 0x69, 0x7a, 0x73, 0x05, 0xce, 0xed, 0x93, 0xf8, 0x35, 0x78, 0xc5, 0xbc, 0xcb, 0x95, 0xca,
	0x5b, 0x56, 0x4d, 0x26, 0x49, 0x3a, 0x1a, 0xaa, 0x27, 0x8f, 0x98, 0xef, 0xe4, 0x81, 0x61, 0x9a,
	0x2c, 0x2f, 0x0e, 0x82, 0xc2, 0xa7, 0x58, 0x0a, 0x27, 0xd0, 0xd3, 0x53, 0x0d, 0x7c, 0x1e, 0xce,
	0xd6, 0xea, 0xcb, 0xa6, 0xa1, 0x09, 0xb6, 0xd4, 0xae, 0xbb, 0xcc, 0xb3, 0x47, 0xa4, 0x1f, 0xb1,
	0xc4, 0x27, 0x0f, 0x24, 0x91, 0x69, 0x4b, 0xcd, 0x0c, 0x4d, 0xb7, 0xc9, 0xb6, 0x9e, 0x87, 0x15,
	0xa5, 0x79, 0x12, 0x85, 0x49, 0x0c, 0x6d, 0x32, 0x45, 0xd8, 0x1d, 0x7c, 0x45, 0x35, 0xcd, 0x65,
	0x55, 0xbb, 0x87, 0x7c, 0xfc, 0x26, 0xbc, 0x31, 0x32, 0x69, 0xa6, 0x42, 0x41, 0x70, 0x93, 0x80,
	0xe8, 0x1d, 0xfc, 0x31, 0x78, 0x6d, 0x34, 0x6e, 0x79, 0xe8, 0x8f, 0x99, 0xe3, 0xdb, 0x1d, 0xdd,
	0xb4, 0x65, 0xed, 0x52, 0x53, 0xdd, 0x35, 0x07, 0x3d, 0xc1, 0x17, 0xe0, 0x85, 0x3c, 0x0c, 0xc3,
	0x25, 0x55, 0x47, 0xfa, 0xd3, 0x16, 0x2f, 0xea, 0x72, 0x80, 0x02, 0x62, 0x01, 0xe0, 0xa7, 0x59,
	0x0a, 0x95, 0xcb, 0x9f, 0x6f, 0x3b, 0x00, 0x7b, 0xb7, 0x68, 0x99, 0x51, 0xbd, 0x10, 0x49, 0x69,
	0xe5, 0xbe, 0x6e, 0xa1, 0x36, 0xf3, 0x86, 0x79, 0x18, 0x8e, 0x63, 0x46, 0xf2, 0xdf, 0x62, 0x4e,
	0x76, 0xb7, 0x75, 0x46, 0x19, 0xb1, 0xd0, 0xa0, 0xce, 0x5e, 0x0b, 0x89, 0x36, 0x58, 0xa3, 0x64,
	0xc5, 0x78, 0x88, 0xba, 0xf8, 0x0d, 0x78, 0x35, 0x0f, 0xa3, 0x5a, 0x37, 0x5d, 0xa3, 0x66, 0xa6,
	0x0d, 0x4a, 0x3a, 0x44, 0x5e, 0xe0, 0x38, 0xa8, 0x57, 0x84, 0x5d, 0x8c, 0x14, 0x5b, 0xed, 0x7b,
	0x45, 0x9a, 0xcb, 0x74, 0x9b, 0x70, 0x75, 0x37, 0x37, 0x3c, 0x57, 0xab, 0xf1, 0x28, 0x8d, 0xfa,
	0xf8, 0x75, 0xb8, 0xbb, 0x37, 0xb3, 0x50, 0x24, 0xd2, 0x29, 0x89, 0xc8, 0x31, 0x60, 0xa2, 0xb4,
	0x6c, 0x2f, 0x5f, 0x38, 0x5e, 0xd2, 0x17, 0x30, 0xd5, 0x1b, 0x32, 0x47, 0xc6, 0x4e, 0x23, 0xe9,
	0xdf, 0xb6, 0x59, 0xd0, 0xa6, 0x64, 0xd5, 0x70, 0x5c, 0xc2, 0x02, 0x9d, 0x3c, 0x59, 0x1e, 0x50,
	0x44, 0xa5, 0x4d, 0x89, 0xaa, 0xad, 0x11, 0x1d, 0x3d, 0x8d, 0xe9, 0x0e, 0x6f, 0x47, 0xb0, 0xb8,
	0x2f, 0xc2, 0x8e, 0x4b, 0x6d, 0x33, 0xc8, 0x62, 0x3e, 0xc3, 0x12, 0x58, 0xbe, 0xce, 0x24, 0xa3,
	0xcf, 0x16, 0x6a, 0x48, 0xbc, 0x40, 0xdb, 0xc1, 0x57, 0xe0, 0x62, 0x1e, 0x54, 0xa6, 0x54, 0xfb,
	0x5b, 0x85, 0x7b, 0x66, 0xc6, 0xc8, 0xae, 0xbb, 0xac, 0xb0, 0xa0, 0xaa, 0xb5, 0x4a, 0xd0, 0xe7,
	0x98, 0xcb, 0xe2, 0xc3, 0x35, 0x6a, 0xbb, 0xb6, 0x66, 0x9b, 0xa1, 0x53, 0xfd, 0x65, 0x96, 0x12,
	0xf3, 0x29, 0x47, 0x5b, 0x23, 0x31, 0x6f, 0xfb, 0x2b, 0x2c, 0x0c, 0xd4, 0xf5, 0x5a, 0x84, 0x22,
	0x01, 0x42, 0x6e, 0xbf, 0xca, 0x63, 0x9d, 0x58, 0x97, 0x51, 0x0b, 0x0f, 0x34, 0x3a, 0xfb, 0xcf,
	0xc7, 0xb6, 0x17, 0x03, 0x08, 0x42, 0x9e, 0x2c, 0xb3, 0x7e, 0x8d, 0xd5, 0x9f, 0x59, 0x28, 0xae,
	0x17, 0xb6, 0x45, 0xd0, 0x17, 0x14, 0x7c, 0x31, 0x34, 0xf7, 0x18, 0x40, 0x10, 0xa7, 0x3d, 0xd7,
	0x30, 0x4d, 0xf4, 0x45, 0x05, 0x5f, 0x0e, 0x8f, 0x22, 0x06, 0x45, 0x09, 0xf3, 0xaa, 0x24, 0x14,
	0xe6, 0xaf, 0x2b, 0x78, 0x1e, 0x4e, 0x07, 0x75, 0x7f, 0xd4, 0x15, 0x89, 0x56, 0xfd, 0x25, 0x16,
	0xab, 0x02, 0x2f, 0xce, 0x25, 0x93, 0xf5, 0xe2, 0x5f, 0x56, 0xf0, 0x79, 0x38, 0x13, 0x71, 0x0b,
	0x33, 0xf0, 0xe8, 0x6c, 0x7f, 0x43, 0xc1, 0x37, 0xe1, 0x2a, 0xc7, 0x57, 0x2d, 0x3d, 0x92, 0x62,
	0xac, 0xe6, 0x4c, 0x61, 0x7c, 0x45, 0xc1, 0x2f, 0x42, 0x25, 0x8f, 0x71, 0xe4, 0x09, 0x69, 0xdd,
	0x24, 0xe8, 0xab, 0x0a, 0xbe, 0x14, 0x0a, 0x36, 0x01, 0x98, 0xd0, 0x9b, 0xaf, 0x29, 0x78, 0x11,
	0x2e, 0xe5, 0x81, 0x05, 0x9e, 0xc2, 0xa8, 0xb1, 0xe4, 0xad, 0xaa, 0xba, 0xe8, 0x37, 0x15, 0xfc,
	0x72, 0xe8, 0x55, 0x12, 0xb0, 0x2b, 0x06, 0x25, 0x0f, 0x54, 0xd3, 0xf4, 0x6a, 0xb6, 0x69, 0x68,
	0xbc, 0x06, 0x5e, 0x31, 0x0d, 0xcd, 0x45, 0xbf, 0xa5, 0xc4, 0xf4, 0x32, 0x81, 0x92, 0xd1, 0xcb,
	0xbf, 0x53, 0xf0, 0x1d, 0x78, 0x39, 0x0f, 0xb4, 0xa0, 0x38, 0x14, 0x35, 0x17, 0xfa, 0x6d, 0xa6,
	0xcf, 0x48, 0xa7, 0xc6, 0x7a, 0xa2, 0x4d, 0xf3, 0x75, 0x2e, 0x28, 0x39, 0x4c, 0x2c, 0xd7, 0x70,
	0x37, 0x82, 0x7c, 0x23, 0xe1, 0x26, 0xd0, 0xef, 0x28, 0xf8, 0x04, 0x60, 0x09, 0x18, 0xa8, 0x9d,
	0x43, 0x5c, 0xf4, 0x0d, 0x2e, 0x9a, 0x82, 0x52, 0x37, 0xa5, 0x9f, 0xbf, 0xab, 0xb0, 0xbc, 0x26,
	0x51, 0x9d, 0xaa, 0x8e, 0x63, 0xac, 0x5a, 0x44, 0x47, 0xdf, 0x54, 0xf0, 0x4b, 0xb9, 0x15, 0x14,
	0x07, 0xcf, 0x64, 0xe0, 0xbf, 0xc7, 0x49, 0xa9, 0xb5, 0x5a, 0x4e, 0xce, 0xf1, 0x2d, 0x85, 0xd9,
	0x41, 0x7c, 0x2e, 0x38, 0x25, 0x59, 0xea, 0x7f, 0x5b, 0xc1, 0x17, 0xe0, 0x9c, 0xc8, 0xa1, 0x83,
	0x94, 0x2f, 0xca, 0x2f, 0x79, 0x26, 0xa8, 0xa3, 0xef, 0x70, 0x2a, 0x32, 0xa3, 0x0f, 0x5a, 0x48,
	0x26, 0xb1, 0x56, 0xdd, 0x35, 0xde, 0xf8, 0x42, 0xbf, 0xcf, 0xa9, 0x48, 0x80, 0xaa, 0x51, 0x25,
	0x79, 0xba, 0xfb, 0x5d, 0x2e, 0x77, 0x09, 0x14, 0x2d, 0xf1, 0x0f, 0x14, 0x7c, 0x15, 0x2e, 0xb3,
	0xe2, 0x46, 0x4e, 0xf1, 0x12, 0x86, 0x37, 0x20, 0x89, 0xe3, 0x1a, 0x55, 0xa6, 0xa0, 0x61, 0x0b,
	0xe3, 0x7b, 0x0a, 0x3e, 0x0b, 0xe5, 0x54, 0xa9, 0x10, 0xd1, 0xfa, 0x43, 0xbe, 0x8e, 0xd4, 0x74,
	0xd8, 0xda, 0x91, 0x49, 0xea, 0xf7, 0xf9, 0x41, 0xa7, 0x6a, 0xba, 0xbc, 0xce, 0xc5, 0x1f, 0x71,
	0x1f, 0x51, 0x40, 0x8d, 0x19, 0xce, 0xaa, 0x4d, 0x37, 0xd0, 0x0f, 0x14, 0xbc, 0x20, 0xdb, 0x2a,
	0xa9, 0xf2, 0x23, 0x0d, 0xf9, 0xc7, 0x0a, 0xbe, 0x01, 0x8b, 0x06, 0xef, 0x6c, 0x6a, 0xaa, 0x99,
	0xae, 0x78, 0x98, 0x41, 0x27, 0x35, 0xed, 0x4f, 0x14, 0x7c, 0x2d, 0xec, 0x9d, 0x44, 0x3b, 0x48,
	0xf1, 0xa9, 0x1a, 0x8e, 0xc3, 0x2c, 0xf3, 0x4f, 0xb9, 0x1e, 0xe8, 0xc6, 0xca, 0x0a, 0xa1, 0xa2,
	0x7d, 0x2d, 0x93, 0x66, 0xdd, 0x41, 0x7f, 0x16, 0xa9, 0x9b, 0xa1, 0x7b, 0x0f, 0xd4, 0x78, 0xe8,
	0xff, 0x73, 0x05, 0x9f, 0x81, 0x13, 0xa2, 0x13, 0x9e, 0x9d, 0xfd, 0x0b, 0x05, 0xdf, 0x85, 0x25,
	0xd1, 0xc9, 0x0b, 0xe2, 0xe3, 0x9a, 0xba, 0x4e, 0xf6, 0x6c, 0xbc, 0xfe, 0x25, 0xf7, 0x78, 0x1c,
	0x71, 0x4d, 0x0d, 0xf2, 0xf6, 0x54, 0xbb, 0xf4, 0xaf, 0x94, 0xc5, 0x2f, 0x97, 0x00, 0xa5, 0x5f,
	0xed, 0x64, 0x29, 0x7b, 0x5c, 0x67, 0x65, 0xbd, 0x50, 0xb7, 0xee, 0x59, 0xf6, 0x03, 0x0b, 0x7d,
	0x84, 0x05, 0x91, 0xbc, 0xf9, 0x1a, 0x2b, 0xe8, 0x98, 0x28, 0xd8, 0x91, 0x5c, 0xcc, 0x81, 0x78,
	0xa0, 0x1a, 0xae, 0xec, 0x89, 0xc8, 0xb2, 0xb1, 0x54, 0x40, 0x4b, 0x4c, 0x33, 0x5a, 0x63, 0x2c,
	0xde, 0x14, 0x42, 0x04, 0xc1, 0x78, 0x9c, 0x95, 0x9f, 0x39, 0x50, 0xb2, 0x54, 0x99, 0x28, 0x98,
	0x66, 0xc9, 0x5a, 0xbd, 0x86, 0x26, 0x17, 0xdf, 0x85, 0x13, 0x05, 0x6f, 0x26, 0xb2, 0x8c, 0x33,
	0xee, 0x53, 0x4c, 0x63, 0x75, 0xcd, 0xe5, 0x8d, 0x48, 0xd1, 0xda, 0x8c, 0xa4, 0xb2, 0x07, 0x60,
	0x55, 0xb5, 0xd4, 0x55, 0x42, 0x91, 0xb2, 0xf8, 0xef, 0x0a, 0x1c, 0xcb, 0x7d, 0x97, 0x32, 0xdd,
	0x38, 0x13, 0x24, 0x32, 0xe2, 0xbf, 0x00, 0x2f, 0x14, 0x42, 0xc9, 0x0d, 0x2b, 0x78, 0x09, 0xae,
	0x17, 0x02, 0x05, 0xe7, 0x10, 0x5c, 0xbf, 0x88, 0x66, 0x69, 0x89, 0x15, 0x18, 0x85, 0x38, 0x89,
	0x4e, 0x25, 0x1a, 0x5b, 0xfc, 0x56, 0x09, 0x0e, 0x26, 0xbe, 0x7b, 0x82, 0x4f, 0xc1, 0xf1, 0xc0,
	0x83, 0x65, 0x96, 0x9c, 0x9d, 0xab, 0x11, 0x4b, 0xea, 0x4a, 0x76, 0x2e, 0x08, 0x76, 0xa5, 0x78,
	0x5d, 0x1d, 0xcc, 0xd9, 0x22, 0xc7, 0x16, 0xba, 0x71, 0x06, 0xca, 0xa9, 0x79, 0x51, 0x5c, 0xb3,
	0xd9, 0xf1, 0x78, 0x4d, 0x2f, 0x67, 0x57, 0x0c, 0xcb, 0x70, 0x58, 0x92, 0xc7, 0x6f, 0x94, 0xd2,
	0x93, 0x42, 0x97, 0x26, 0x73, 0xf0, 0xc2, 0x52, 0x7f, 0x2a, 0x67, 0xb9, 0x81, 0x50, 0xa6, 0x17,
	0xff, 0x41, 0xe1, 0x42, 0x89, 0x5e, 0x92, 0x92, 0xd0, 0xf1, 0xb2, 0x3b, 0x12, 0x0a, 0xcb, 0x1f,
	0x53, 0x25, 0x39, 0x79, 0x80, 0x94, 0x78, 0x9d, 0x1a, 0xb0, 0x67, 0x91, 0x40, 0x48, 0xe4, 0x64,
	0x54, 0x8e, 0x27, 0x8f, 0x7c, 0x2c, 0x07, 0x8f, 0xaf, 0x4c, 0xc8, 0x22, 0x8b, 0x27, 0xb7, 0x3b,
	0xb1, 0xf8, 0x93, 0x12, 0x5c, 0x1a, 0xe9, 0x35, 0x27, 0x7c, 0x17, 0x6e, 0x15, 0x17, 0x55, 0x9e,
	0x6e, 0x39, 0x9e, 0xb6, 0x46, 0x78, 0x3b, 0x2c, 0xb5, 0xd5, 0x7d, 0x22, 0x46, 0xca, 0xf1, 0x2a,
	0xdc, 0xde, 0x0f, 0x22, 0x7f, 0x10, 0x82, 0x5a, 0x82, 0xeb, 0xfb, 0xc1, 0xb4, 0xef, 0xa1, 0x31,
	0x7c, 0x07, 0x96, 0xf6, 0x83, 0x13, 0x3a, 0x9f, 0x7d, 0x6e, 0xcf, 0x58, 0xb5, 0x6c, 0xca, 0x45,
	0xff, 0xbf, 0x25, 0x98, 0xdf, 0xeb, 0x25, 0x30, 0xfc, 0x32, 0xbc, 0xb4, 0x0b, 0x75, 0x56, 0xea,
	0x64, 0xe4, 0xbd, 0xfb, 0xe6, 0x63, 0x28, 0x86, 0x15, 0x7a, 0x8c, 0xd7, 0xe0, 0x95, 0xd1, 0x70,
	0x84, 0x2b, 0x30, 0x2c, 0xc7, 0x55, 0x4d, 0xb6, 0xff, 0xd2, 0xe8, 0xa8, 0x81, 0xe7, 0x59, 0xb1,
	0x29, 0x13, 0x0b, 0x1a, 0x2b, 0xec, 0x13, 0x64, 0x50, 0xe5, 0x3a, 0xc7, 0x0b, 0x1b, 0x13, 0x39,
	0x7b, 0xe3, 0x2b, 0x4c, 0xdc, 0x90, 0x4e, 0x2c, 0x3e, 0x85, 0x23, 0x39, 0x6f, 0x73, 0xe1, 0xf3,
	0x70, 0x36, 0x88, 0xeb, 0xc9, 0xa2, 0x2a, 0x12, 0x6a, 0xac, 0xc3, 0x99, 0x04, 0x19, 0x36, 0x7b,
	0x48, 0x29, 0x9e, 0xde, 0xde, 0xec, 0xa1, 0xd2, 0xe2, 0xdf, 0x47, 0x2f, 0xf0, 0x44, 0xaf, 0x73,
	0xb1, 0x6a, 0x2b, 0x81, 0x24, 0xeb, 0xb1, 0x88, 0x69, 0xac, 0x8f, 0x1e, 0x07, 0x10, 0x2c, 0x0b,
	0x26, 0x39, 0x43, 0xe6, 0x1b, 0xf3, 0x26, 0x9f, 0x0c, 0x87, 0x3d, 0x34, 0x96, 0x59, 0x6d, 0x6c,
	0x76, 0x20, 0xc2, 0x69, 0xde, 0x74, 0xdf, 0xdf, 0x6c, 0x0d, 0xd0, 0x44, 0xfc, 0xba, 0x22, 0x31,
	0xdd, 0x78, 0xf4, 0xa8, 0x35, 0xdc, 0x7a, 0x0f, 0x4d, 0x16, 0x11, 0xd8, 0xda, 0x19, 0xbc, 0xd7,
	0x46, 0x53, 0x19, 0x71, 0x47, 0x2b, 0x6f, 0x75, 0xde, 0x69, 0x6f, 0x7f, 0x16, 0x4d, 0x2f, 0xfe,
	0x97, 0x02, 0x67, 0x76, 0x7b, 0x67, 0x0c, 0x5f, 0x85, 0x17, 0x0b, 0xd3, 0xc8, 0x8c, 0x45, 0x64,
	0x2e, 0x45, 0xb2, 0xc0, 0xa1, 0x97, 0x55, 0xb2, 0x5d, 0xe8, 0x2c, 0xb4, 0xd4, 0xc7, 0xd2, 0x28,
	0x94, 0x43, 0x3f, 0x3c, 0xb6, 0xf8, 0x6f, 0xe3, 0xb0, 0xb4, 0xff, 0x57, 0xcb, 0xf0, 0x0a, 0x2c,
	0xa7, 0xd3, 0xdb, 0x15, 0xdb, 0x7b, 0xcb, 0xb1, 0xad, 0xb0, 0xd5, 0x9f, 0x2d, 0x58, 0x82, 0xd4,
	0x37, 0x26, 0x06, 0x0d, 0x3e, 0xfe, 0x01, 0xe8, 0x68, 0x36, 0x65, 0x9e, 0xc2, 0x86, 0x7b, 0x1f,
	0x80, 0x08, 0xb7, 0x5a, 0xf3, 0x6e, 0xd8, 0xbe, 0x45, 0x25, 0xbc, 0x0a, 0xda, 0x07, 0x20, 0xe8,
	0xb8, 0xaa, 0xa5, 0xab, 0x54, 0x47, 0x63, 0x1f, 0x70, 0x7b, 0xfc, 0x66, 0x6f, 0x1c, 0x57, 0xc1,
	0xf8, 0x20, 0xab, 0x49, 0x94, 0x15, 0x68, 0xe2, 0x03, 0x92, 0x4b, 0x5e, 0xe4, 0xa0, 0xc9, 0xc5,
	0x36, 0xa0, 0xf4, 0x27, 0x1d, 0xb2, 0x3d, 0xf6, 0x6a, 0x32, 0x35, 0x3d, 0x09, 0xc7, 0x72, 0xe6,
	0xd7, 0xd4, 0xa4, 0xd7, 0x8a, 0x4d, 0x59, 0xfc, 0x76, 0x18, 0x95, 0x16, 0xff, 0x67, 0x1a, 0x70,
	0xf6, 0x85, 0xc1, 0xec, 0x75, 0x65, 0xc6, 0xde, 0x62, 0xde, 0x27, 0x01, 0x21, 0x52, 0x9c, 0x98,
	0xf9, 0x27, 0x66, 0x63, 0x89, 0x4e, 0xcc, 0x33, 0x26, 0x40, 0xc2, 0x74, 0xa7, 0x88, 0x86, 0xe3,
	0xda, 0xb5, 0x9a, 0x48, 0x7a, 0x8a, 0x96, 0xc9, 0x41, 0x78, 0x16, 0x58, 0x4c, 0x44, 0xa5, 0x7c,
	0x21, 0x93, 0x2c, 0xdd, 0xce, 0x05, 0xa1, 0x24, 0x04, 0x9a, 0xca, 0xde, 0x84, 0x84, 0x40, 0x41,
	0x51, 0x34, 0x5d, 0xc8, 0x2b, 0xf4, 0x0e, 0x33, 0x85, 0x0b, 0x0e, 0x52, 0x4c, 0x28, 0x14, 0x8b,
	0x8c, 0x6f, 0xb3, 0xac, 0x0c, 0xc9, 0x3f, 0x9a, 0xda, 0x2a, 0x55, 0x75, 0x12, 0x00, 0x1e, 0x28,
	0x5c, 0xb2, 0x00, 0x64, 0xeb, 0x39, 0x98, 0x77, 0xd1, 0x29, 0xb7, 0x95, 0xbc, 0xfe, 0x9b, 0xcb,
	0x5e, 0xe9, 0x06, 0x82, 0x94, 0x83, 0xe1, 0x26, 0x0f, 0x15, 0xae, 0x30, 0x18, 0x94, 0x2b, 0x44,
	0x59, 0x2f, 0x9c, 0x02, 0x14, 0x17, 0xef, 0x8c, 0xe8, 0xe1, 0x3d, 0xf9, 0x87, 0x9a, 0x85, 0x59,
	0x3e, 0xb5, 0x3b, 0xa8, 0x6d, 0xb9, 0xaa, 0x61, 0x11, 0x1a, 0xac, 0xe4, 0xc8, 0x9e, 0x28, 0x55,
	0x7b, 0x5d, 0xbc, 0xec, 0x22, 0x31, 0xd1, 0xd1, 0x3d, 0x17, 0x14, 0xaa, 0xe9, 0xb1, 0x42, 0x29,
	0x27, 0x40, 0x89, 0x8e, 0x8e, 0x8f, 0x40, 0x54, 0x6a, 0xe4, 0x89, 0x6c, 0x74, 0xcc, 0x08, 0x2f,
	0x04, 0x2e, 0x8f, 0x20, 0xe9, 0x40, 0x8d, 0x4f, 0xee, 0x09, 0x1b, 0xe9, 0xcf, 0xa9, 0xec, 0x5d,
	0x73, 0x2e, 0x6c, 0x78, 0xe4, 0xa7, 0x17, 0xbf, 0xaf, 0xc0, 0x81, 0xf8, 0xff, 0x2e, 0x93, 0xef,
	0x38, 0x89, 0x36, 0x5c, 0x3c, 0x21, 0x4b, 0xcd, 0xb1, 0x4d, 0x51, 0x83, 0xbf, 0xd7, 0xa7, 0x24,
	0xdf, 0xca, 0x12, 0x5e, 0x95, 0xbf, 0xef, 0x81, 0x4a, 0xc9, 0x37, 0xb9, 0xc2, 0xe6, 0x9e, 0xa8,
	0xa1, 0x52, 0x13, 0xc1, 0xcb, 0x8f, 0x68, 0x7c, 0x71, 0x1d, 0x20, 0xfa, 0xc0, 0x44, 0x48, 0x23,
	0xaf, 0xae, 0x8b, 0x4f, 0x84, 0x09, 0x76, 0x0a, 0x21, 0xb0, 0xe9, 0xd2, 0xd2, 0x0f, 0xa7, 0x21,
	0xfb, 0x11, 0x67, 0x3c, 0x84, 0x23, 0x39, 0xff, 0xf5, 0xc5, 0x2f, 0x8d, 0xfa, 0xef, 0x61, 0xfe,
	0xb7, 0x87, 0x53, 0xd7, 0xf7, 0xf7, 0x67, 0x63, 0xec, 0xc3, 0x5c, 0xf2, 0xab, 0x12, 0x78, 0x61,
	0x84, 0xcf, 0x53, 0x08, 0x5e, 0x57, 0x46, 0xfe, 0x90, 0x05, 0x7e, 0x04, 0x07, 0x13, 0x1f, 0xc2,
	0xc4, 0x2f, 0xee, 0xfd, 0x3d, 0x4d, 0xc1, 0x64, 0x61, 0xd4, 0x0f, 0x6f, 0xe2, 0x4e, 0xf0, 0x75,
	0xe9, 0xd8, 0x37, 0x25, 0xf1, 0xd5, 0xd1, 0xbe, 0x50, 0x29, 0x78, 0x5d, 0xdb, 0xcf, 0xe7, 0x2c,
	0xf1, 0x06, 0x40, 0xf4, 0x29, 0x5c, 0x7c, 0x71, 0x8f, 0x6f, 0xe9, 0x0a, 0x0e, 0x97, 0x46, 0xfa,
	0xe2, 0x2e, 0xfe, 0x9c, 0xf8, 0x1e, 0x72, 0xa6, 0x54, 0xc4, 0x37, 0x46, 0xff, 0xb6, 0x83, 0x60,
	0x78, 0x73, 0xbf, 0x1f, 0x83, 0xc0, 0x4f, 0xe0, 0x50, 0xea, 0xbb, 0x66, 0xf8, 0xca, 0x28, 0x5f,
	0xbe, 0x14, 0xfc, 0x16, 0x47, 0xff, 0x48, 0x26, 0xdb, 0x65, 0xee, 0x17, 0xd4, 0xf0, 0x8d, 0xd1,
	0x3f, 0xcc, 0x56, 0xbc, 0xcb, 0xdd, 0xbf, 0x1d, 0xf7, 0x09, 0x98, 0x8d, 0x7d, 0xf4, 0x07, 0x5f,
	0xda, 0xeb, 0xbb, 0x41, 0x82, 0xcf, 0xe5, 0xd1, 0x3e, 0x2f, 0x14, 0x58, 0x55, 0xf4, 0x0d, 0x83,
	0x42, 0xab, 0xca, 0x7c, 0xf2, 0xba, 0xd0, 0xaa, 0xb2, 0x1f, 0x44, 0x78, 0x34, 0xc9, 0xff, 0x92,
	0x74, 0xeb, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x07, 0xea, 0x6b, 0x23, 0x5e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZeropsApiProtocolClient is the client API for ZeropsApiProtocol service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZeropsApiProtocolClient interface {
	PutAppVersionDeploy(ctx context.Context, in *PutAppVersionDeployRequest, opts ...grpc.CallOption) (*PutAppVersionDeployResponse, error)
	PostAppVersion(ctx context.Context, in *PostAppVersionRequest, opts ...grpc.CallOption) (*PostAppVersionResponse, error)
	GetProjectLog(ctx context.Context, in *GetProjectLogRequest, opts ...grpc.CallOption) (*GetProjectLogResponse, error)
	GetProjectsByName(ctx context.Context, in *GetProjectsByNameRequest, opts ...grpc.CallOption) (*GetProjectsByNameResponse, error)
	GetProcess(ctx context.Context, in *GetProcessRequest, opts ...grpc.CallOption) (*GetProcessResponse, error)
	PostPublicHttpRouting(ctx context.Context, in *PostPublicHttpRoutingRequest, opts ...grpc.CallOption) (*PostPublicHttpRoutingResponse, error)
	GetServiceStack(ctx context.Context, in *GetServiceStackRequest, opts ...grpc.CallOption) (*GetServiceStackResponse, error)
	GetServiceStackByName(ctx context.Context, in *GetServiceStackByNameRequest, opts ...grpc.CallOption) (*GetServiceStackByNameResponse, error)
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
	PostVpnRequest(ctx context.Context, in *PostVpnRequestRequest, opts ...grpc.CallOption) (*PostVpnRequestResponse, error)
}

type zeropsApiProtocolClient struct {
	cc *grpc.ClientConn
}

func NewZeropsApiProtocolClient(cc *grpc.ClientConn) ZeropsApiProtocolClient {
	return &zeropsApiProtocolClient{cc}
}

func (c *zeropsApiProtocolClient) PutAppVersionDeploy(ctx context.Context, in *PutAppVersionDeployRequest, opts ...grpc.CallOption) (*PutAppVersionDeployResponse, error) {
	out := new(PutAppVersionDeployResponse)
	err := c.cc.Invoke(ctx, "/zeropsApiProtocol.zeropsApiProtocol/PutAppVersionDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeropsApiProtocolClient) PostAppVersion(ctx context.Context, in *PostAppVersionRequest, opts ...grpc.CallOption) (*PostAppVersionResponse, error) {
	out := new(PostAppVersionResponse)
	err := c.cc.Invoke(ctx, "/zeropsApiProtocol.zeropsApiProtocol/PostAppVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeropsApiProtocolClient) GetProjectLog(ctx context.Context, in *GetProjectLogRequest, opts ...grpc.CallOption) (*GetProjectLogResponse, error) {
	out := new(GetProjectLogResponse)
	err := c.cc.Invoke(ctx, "/zeropsApiProtocol.zeropsApiProtocol/GetProjectLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeropsApiProtocolClient) GetProjectsByName(ctx context.Context, in *GetProjectsByNameRequest, opts ...grpc.CallOption) (*GetProjectsByNameResponse, error) {
	out := new(GetProjectsByNameResponse)
	err := c.cc.Invoke(ctx, "/zeropsApiProtocol.zeropsApiProtocol/GetProjectsByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeropsApiProtocolClient) GetProcess(ctx context.Context, in *GetProcessRequest, opts ...grpc.CallOption) (*GetProcessResponse, error) {
	out := new(GetProcessResponse)
	err := c.cc.Invoke(ctx, "/zeropsApiProtocol.zeropsApiProtocol/GetProcess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeropsApiProtocolClient) PostPublicHttpRouting(ctx context.Context, in *PostPublicHttpRoutingRequest, opts ...grpc.CallOption) (*PostPublicHttpRoutingResponse, error) {
	out := new(PostPublicHttpRoutingResponse)
	err := c.cc.Invoke(ctx, "/zeropsApiProtocol.zeropsApiProtocol/PostPublicHttpRouting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeropsApiProtocolClient) GetServiceStack(ctx context.Context, in *GetServiceStackRequest, opts ...grpc.CallOption) (*GetServiceStackResponse, error) {
	out := new(GetServiceStackResponse)
	err := c.cc.Invoke(ctx, "/zeropsApiProtocol.zeropsApiProtocol/GetServiceStack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeropsApiProtocolClient) GetServiceStackByName(ctx context.Context, in *GetServiceStackByNameRequest, opts ...grpc.CallOption) (*GetServiceStackByNameResponse, error) {
	out := new(GetServiceStackByNameResponse)
	err := c.cc.Invoke(ctx, "/zeropsApiProtocol.zeropsApiProtocol/GetServiceStackByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeropsApiProtocolClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	out := new(GetUserInfoResponse)
	err := c.cc.Invoke(ctx, "/zeropsApiProtocol.zeropsApiProtocol/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeropsApiProtocolClient) PostVpnRequest(ctx context.Context, in *PostVpnRequestRequest, opts ...grpc.CallOption) (*PostVpnRequestResponse, error) {
	out := new(PostVpnRequestResponse)
	err := c.cc.Invoke(ctx, "/zeropsApiProtocol.zeropsApiProtocol/PostVpnRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZeropsApiProtocolServer is the server API for ZeropsApiProtocol service.
type ZeropsApiProtocolServer interface {
	PutAppVersionDeploy(context.Context, *PutAppVersionDeployRequest) (*PutAppVersionDeployResponse, error)
	PostAppVersion(context.Context, *PostAppVersionRequest) (*PostAppVersionResponse, error)
	GetProjectLog(context.Context, *GetProjectLogRequest) (*GetProjectLogResponse, error)
	GetProjectsByName(context.Context, *GetProjectsByNameRequest) (*GetProjectsByNameResponse, error)
	GetProcess(context.Context, *GetProcessRequest) (*GetProcessResponse, error)
	PostPublicHttpRouting(context.Context, *PostPublicHttpRoutingRequest) (*PostPublicHttpRoutingResponse, error)
	GetServiceStack(context.Context, *GetServiceStackRequest) (*GetServiceStackResponse, error)
	GetServiceStackByName(context.Context, *GetServiceStackByNameRequest) (*GetServiceStackByNameResponse, error)
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error)
	PostVpnRequest(context.Context, *PostVpnRequestRequest) (*PostVpnRequestResponse, error)
}

func RegisterZeropsApiProtocolServer(s *grpc.Server, srv ZeropsApiProtocolServer) {
	s.RegisterService(&_ZeropsApiProtocol_serviceDesc, srv)
}

func _ZeropsApiProtocol_PutAppVersionDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutAppVersionDeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsApiProtocolServer).PutAppVersionDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsApiProtocol.zeropsApiProtocol/PutAppVersionDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsApiProtocolServer).PutAppVersionDeploy(ctx, req.(*PutAppVersionDeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZeropsApiProtocol_PostAppVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostAppVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsApiProtocolServer).PostAppVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsApiProtocol.zeropsApiProtocol/PostAppVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsApiProtocolServer).PostAppVersion(ctx, req.(*PostAppVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZeropsApiProtocol_GetProjectLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsApiProtocolServer).GetProjectLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsApiProtocol.zeropsApiProtocol/GetProjectLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsApiProtocolServer).GetProjectLog(ctx, req.(*GetProjectLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZeropsApiProtocol_GetProjectsByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectsByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsApiProtocolServer).GetProjectsByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsApiProtocol.zeropsApiProtocol/GetProjectsByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsApiProtocolServer).GetProjectsByName(ctx, req.(*GetProjectsByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZeropsApiProtocol_GetProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsApiProtocolServer).GetProcess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsApiProtocol.zeropsApiProtocol/GetProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsApiProtocolServer).GetProcess(ctx, req.(*GetProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZeropsApiProtocol_PostPublicHttpRouting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostPublicHttpRoutingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsApiProtocolServer).PostPublicHttpRouting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsApiProtocol.zeropsApiProtocol/PostPublicHttpRouting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsApiProtocolServer).PostPublicHttpRouting(ctx, req.(*PostPublicHttpRoutingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZeropsApiProtocol_GetServiceStack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceStackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsApiProtocolServer).GetServiceStack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsApiProtocol.zeropsApiProtocol/GetServiceStack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsApiProtocolServer).GetServiceStack(ctx, req.(*GetServiceStackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZeropsApiProtocol_GetServiceStackByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceStackByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsApiProtocolServer).GetServiceStackByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsApiProtocol.zeropsApiProtocol/GetServiceStackByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsApiProtocolServer).GetServiceStackByName(ctx, req.(*GetServiceStackByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZeropsApiProtocol_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsApiProtocolServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsApiProtocol.zeropsApiProtocol/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsApiProtocolServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZeropsApiProtocol_PostVpnRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostVpnRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeropsApiProtocolServer).PostVpnRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zeropsApiProtocol.zeropsApiProtocol/PostVpnRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeropsApiProtocolServer).PostVpnRequest(ctx, req.(*PostVpnRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZeropsApiProtocol_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zeropsApiProtocol.zeropsApiProtocol",
	HandlerType: (*ZeropsApiProtocolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutAppVersionDeploy",
			Handler:    _ZeropsApiProtocol_PutAppVersionDeploy_Handler,
		},
		{
			MethodName: "PostAppVersion",
			Handler:    _ZeropsApiProtocol_PostAppVersion_Handler,
		},
		{
			MethodName: "GetProjectLog",
			Handler:    _ZeropsApiProtocol_GetProjectLog_Handler,
		},
		{
			MethodName: "GetProjectsByName",
			Handler:    _ZeropsApiProtocol_GetProjectsByName_Handler,
		},
		{
			MethodName: "GetProcess",
			Handler:    _ZeropsApiProtocol_GetProcess_Handler,
		},
		{
			MethodName: "PostPublicHttpRouting",
			Handler:    _ZeropsApiProtocol_PostPublicHttpRouting_Handler,
		},
		{
			MethodName: "GetServiceStack",
			Handler:    _ZeropsApiProtocol_GetServiceStack_Handler,
		},
		{
			MethodName: "GetServiceStackByName",
			Handler:    _ZeropsApiProtocol_GetServiceStackByName_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _ZeropsApiProtocol_GetUserInfo_Handler,
		},
		{
			MethodName: "PostVpnRequest",
			Handler:    _ZeropsApiProtocol_PostVpnRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protocol.proto",
}
